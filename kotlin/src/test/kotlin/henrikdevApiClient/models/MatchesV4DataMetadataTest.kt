/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package henrikdevApiClient.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import henrikdevApiClient.models.MatchesV4DataMetadata
import henrikdevApiClient.models.MapIdNameCombo
import henrikdevApiClient.models.MatchesV4DataMetadataPartyRRPenalty
import henrikdevApiClient.models.MatchesV4DataMetadataQueue
import henrikdevApiClient.models.SeasonIdShortCombo

class MatchesV4DataMetadataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of MatchesV4DataMetadata
        //val modelInstance = MatchesV4DataMetadata()

        // to test the property `gameLengthInMs`
        should("test gameLengthInMs") {
            // uncomment below to test the property
            //modelInstance.gameLengthInMs shouldBe ("TODO")
        }

        // to test the property `gameVersion`
        should("test gameVersion") {
            // uncomment below to test the property
            //modelInstance.gameVersion shouldBe ("TODO")
        }

        // to test the property `isCompleted`
        should("test isCompleted") {
            // uncomment below to test the property
            //modelInstance.isCompleted shouldBe ("TODO")
        }

        // to test the property `map`
        should("test map") {
            // uncomment below to test the property
            //modelInstance.map shouldBe ("TODO")
        }

        // to test the property `matchId`
        should("test matchId") {
            // uncomment below to test the property
            //modelInstance.matchId shouldBe ("TODO")
        }

        // to test the property `partyRrPenaltys`
        should("test partyRrPenaltys") {
            // uncomment below to test the property
            //modelInstance.partyRrPenaltys shouldBe ("TODO")
        }

        // to test the property `platform`
        should("test platform") {
            // uncomment below to test the property
            //modelInstance.platform shouldBe ("TODO")
        }

        // to test the property `queue`
        should("test queue") {
            // uncomment below to test the property
            //modelInstance.queue shouldBe ("TODO")
        }

        // to test the property `season`
        should("test season") {
            // uncomment below to test the property
            //modelInstance.season shouldBe ("TODO")
        }

        // to test the property `startedAt`
        should("test startedAt") {
            // uncomment below to test the property
            //modelInstance.startedAt shouldBe ("TODO")
        }

        // to test the property `cluster`
        should("test cluster") {
            // uncomment below to test the property
            //modelInstance.cluster shouldBe ("TODO")
        }

        // to test the property `premier`
        should("test premier") {
            // uncomment below to test the property
            //modelInstance.premier shouldBe ("TODO")
        }

        // to test the property `region`
        should("test region") {
            // uncomment below to test the property
            //modelInstance.region shouldBe ("TODO")
        }

    }
}
