/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package henrikdevApiClient.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import henrikdevApiClient.models.QueueStatusV1Data
import henrikdevApiClient.models.QueueStatusV1GameRules
import henrikdevApiClient.models.QueueStatusV1HighSkill
import henrikdevApiClient.models.QueueStatusV1Maps
import henrikdevApiClient.models.QueueStatusV1PartySize
import henrikdevApiClient.models.QueueStatusV1SkillDisparity

class QueueStatusV1DataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of QueueStatusV1Data
        //val modelInstance = QueueStatusV1Data()

        // to test the property `enabled`
        should("test enabled") {
            // uncomment below to test the property
            //modelInstance.enabled shouldBe ("TODO")
        }

        // to test the property `gameRules`
        should("test gameRules") {
            // uncomment below to test the property
            //modelInstance.gameRules shouldBe ("TODO")
        }

        // to test the property `highSkill`
        should("test highSkill") {
            // uncomment below to test the property
            //modelInstance.highSkill shouldBe ("TODO")
        }

        // to test the property `maps`
        should("test maps") {
            // uncomment below to test the property
            //modelInstance.maps shouldBe ("TODO")
        }

        // to test the property `mode`
        should("test mode") {
            // uncomment below to test the property
            //modelInstance.mode shouldBe ("TODO")
        }

        // to test the property `modeId`
        should("test modeId") {
            // uncomment below to test the property
            //modelInstance.modeId shouldBe ("TODO")
        }

        // to test the property `numberOfTeams`
        should("test numberOfTeams") {
            // uncomment below to test the property
            //modelInstance.numberOfTeams shouldBe ("TODO")
        }

        // to test the property `partySize`
        should("test partySize") {
            // uncomment below to test the property
            //modelInstance.partySize shouldBe ("TODO")
        }

        // to test the property `platforms`
        should("test platforms") {
            // uncomment below to test the property
            //modelInstance.platforms shouldBe ("TODO")
        }

        // to test the property `ranked`
        should("test ranked") {
            // uncomment below to test the property
            //modelInstance.ranked shouldBe ("TODO")
        }

        // to test the property `requiredAccountLevel`
        should("test requiredAccountLevel") {
            // uncomment below to test the property
            //modelInstance.requiredAccountLevel shouldBe ("TODO")
        }

        // to test the property `skillDisparity`
        should("test skillDisparity") {
            // uncomment below to test the property
            //modelInstance.skillDisparity shouldBe ("TODO")
        }

        // to test the property `teamSize`
        should("test teamSize") {
            // uncomment below to test the property
            //modelInstance.teamSize shouldBe ("TODO")
        }

        // to test the property `tournament`
        should("test tournament") {
            // uncomment below to test the property
            //modelInstance.tournament shouldBe ("TODO")
        }

    }
}
