# coding: utf-8

"""
    HenrikDev API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from henrikdev-api-client.models.matches_v4_data_player import MatchesV4DataPlayer

class TestMatchesV4DataPlayer(unittest.TestCase):
    """MatchesV4DataPlayer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MatchesV4DataPlayer:
        """Test MatchesV4DataPlayer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MatchesV4DataPlayer`
        """
        model = MatchesV4DataPlayer()
        if include_optional:
            return MatchesV4DataPlayer(
                ability_casts = henrikdev-api-client.models.matches_v4_data_player_ability_casts.MatchesV4DataPlayerAbilityCasts(
                    ability1 = 0, 
                    ability2 = 0, 
                    grenade = 0, 
                    ultimate = 0, ),
                account_level = 0,
                agent = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                    id = '', 
                    name = '', ),
                behavior = henrikdev-api-client.models.matches_v4_data_player_behavior.MatchesV4DataPlayerBehavior(
                    afk_rounds = 1.337, 
                    friendly_fire = henrikdev-api-client.models.matches_v4_data_player_behavior_friendly_fire.MatchesV4DataPlayerBehaviorFriendlyFire(
                        incoming = 1.337, 
                        outgoing = 1.337, ), 
                    rounds_in_spawn = 1.337, ),
                customization = henrikdev-api-client.models.matches_v4_data_player_customization.MatchesV4DataPlayerCustomization(
                    card = '', 
                    preferred_level_border = '', 
                    title = '', ),
                economy = henrikdev-api-client.models.matches_v4_data_player_economy.MatchesV4DataPlayerEconomy(
                    loadout_value = henrikdev-api-client.models.matches_v2_data_player_economy_value.MatchesV2DataPlayerEconomyValue(
                        average = 1.337, 
                        overall = 56, ), 
                    spent = henrikdev-api-client.models.matches_v2_data_player_economy_value.MatchesV2DataPlayerEconomyValue(
                        average = 1.337, 
                        overall = 56, ), ),
                name = '',
                party_id = '',
                platform = '',
                puuid = '',
                session_playtime_in_ms = 0,
                stats = henrikdev-api-client.models.matches_v4_data_player_stats.MatchesV4DataPlayerStats(
                    assists = 0, 
                    bodyshots = 0, 
                    damage = henrikdev-api-client.models.matches_v4_data_player_stats_damage.MatchesV4DataPlayerStatsDamage(
                        dealt = 56, 
                        received = 56, ), 
                    deaths = 0, 
                    headshots = 0, 
                    kills = 0, 
                    legshots = 0, 
                    score = 56, ),
                tag = '',
                team_id = '',
                tier = henrikdev-api-client.models.leaderboard_v3_data_threshold_tier.LeaderboardV3DataThresholdTier(
                    id = 56, 
                    name = '', )
            )
        else:
            return MatchesV4DataPlayer(
                ability_casts = henrikdev-api-client.models.matches_v4_data_player_ability_casts.MatchesV4DataPlayerAbilityCasts(
                    ability1 = 0, 
                    ability2 = 0, 
                    grenade = 0, 
                    ultimate = 0, ),
                account_level = 0,
                agent = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                    id = '', 
                    name = '', ),
                behavior = henrikdev-api-client.models.matches_v4_data_player_behavior.MatchesV4DataPlayerBehavior(
                    afk_rounds = 1.337, 
                    friendly_fire = henrikdev-api-client.models.matches_v4_data_player_behavior_friendly_fire.MatchesV4DataPlayerBehaviorFriendlyFire(
                        incoming = 1.337, 
                        outgoing = 1.337, ), 
                    rounds_in_spawn = 1.337, ),
                customization = henrikdev-api-client.models.matches_v4_data_player_customization.MatchesV4DataPlayerCustomization(
                    card = '', 
                    preferred_level_border = '', 
                    title = '', ),
                economy = henrikdev-api-client.models.matches_v4_data_player_economy.MatchesV4DataPlayerEconomy(
                    loadout_value = henrikdev-api-client.models.matches_v2_data_player_economy_value.MatchesV2DataPlayerEconomyValue(
                        average = 1.337, 
                        overall = 56, ), 
                    spent = henrikdev-api-client.models.matches_v2_data_player_economy_value.MatchesV2DataPlayerEconomyValue(
                        average = 1.337, 
                        overall = 56, ), ),
                name = '',
                party_id = '',
                platform = '',
                puuid = '',
                session_playtime_in_ms = 0,
                stats = henrikdev-api-client.models.matches_v4_data_player_stats.MatchesV4DataPlayerStats(
                    assists = 0, 
                    bodyshots = 0, 
                    damage = henrikdev-api-client.models.matches_v4_data_player_stats_damage.MatchesV4DataPlayerStatsDamage(
                        dealt = 56, 
                        received = 56, ), 
                    deaths = 0, 
                    headshots = 0, 
                    kills = 0, 
                    legshots = 0, 
                    score = 56, ),
                tag = '',
                team_id = '',
                tier = henrikdev-api-client.models.leaderboard_v3_data_threshold_tier.LeaderboardV3DataThresholdTier(
                    id = 56, 
                    name = '', ),
        )
        """

    def testMatchesV4DataPlayer(self):
        """Test MatchesV4DataPlayer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
