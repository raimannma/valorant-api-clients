# coding: utf-8

"""
    HenrikDev API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from henrikdev-api-client.models.matches_v4_data_round_player_stats_economy import MatchesV4DataRoundPlayerStatsEconomy

class TestMatchesV4DataRoundPlayerStatsEconomy(unittest.TestCase):
    """MatchesV4DataRoundPlayerStatsEconomy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MatchesV4DataRoundPlayerStatsEconomy:
        """Test MatchesV4DataRoundPlayerStatsEconomy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MatchesV4DataRoundPlayerStatsEconomy`
        """
        model = MatchesV4DataRoundPlayerStatsEconomy()
        if include_optional:
            return MatchesV4DataRoundPlayerStatsEconomy(
                armor = henrikdev-api-client.models.matches_v4_data_round_player_stats_economy_armor.MatchesV4DataRoundPlayerStatsEconomyArmor(
                    id = '', 
                    name = '', ),
                loadout_value = 56,
                remaining = 56,
                weapon = henrikdev-api-client.models.matches_v4_data_round_player_stats_economy_weapon.MatchesV4DataRoundPlayerStatsEconomyWeapon(
                    id = '', 
                    name = '', 
                    type = '', )
            )
        else:
            return MatchesV4DataRoundPlayerStatsEconomy(
                loadout_value = 56,
                remaining = 56,
        )
        """

    def testMatchesV4DataRoundPlayerStatsEconomy(self):
        """Test MatchesV4DataRoundPlayerStatsEconomy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
