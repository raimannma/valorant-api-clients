# coding: utf-8

"""
    HenrikDev API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from henrikdev-api-client.models.leaderboard_v3_response import LeaderboardV3Response

class TestLeaderboardV3Response(unittest.TestCase):
    """LeaderboardV3Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LeaderboardV3Response:
        """Test LeaderboardV3Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LeaderboardV3Response`
        """
        model = LeaderboardV3Response()
        if include_optional:
            return LeaderboardV3Response(
                data = henrikdev-api-client.models.leaderboard_v3_data.LeaderboardV3Data(
                    players = [
                        henrikdev-api-client.models.leaderboard_v3_data_player.LeaderboardV3DataPlayer(
                            card = '', 
                            is_anonymized = True, 
                            is_banned = True, 
                            leaderboard_rank = 56, 
                            name = '', 
                            puuid = '', 
                            rr = 56, 
                            tag = '', 
                            tier = 56, 
                            title = '', 
                            updated_at = '', 
                            wins = 56, )
                        ], 
                    thresholds = [
                        henrikdev-api-client.models.leaderboard_v3_data_threshold.LeaderboardV3DataThreshold(
                            start_index = 56, 
                            threshold = 56, 
                            tier = henrikdev-api-client.models.leaderboard_v3_data_threshold_tier.LeaderboardV3DataThresholdTier(
                                id = 56, 
                                name = '', ), )
                        ], 
                    updated_at = '', ),
                results = henrikdev-api-client.models.pagination.Pagination(
                    after = 56, 
                    before = 56, 
                    returned = 56, 
                    total = 56, ),
                status = 0
            )
        else:
            return LeaderboardV3Response(
                data = henrikdev-api-client.models.leaderboard_v3_data.LeaderboardV3Data(
                    players = [
                        henrikdev-api-client.models.leaderboard_v3_data_player.LeaderboardV3DataPlayer(
                            card = '', 
                            is_anonymized = True, 
                            is_banned = True, 
                            leaderboard_rank = 56, 
                            name = '', 
                            puuid = '', 
                            rr = 56, 
                            tag = '', 
                            tier = 56, 
                            title = '', 
                            updated_at = '', 
                            wins = 56, )
                        ], 
                    thresholds = [
                        henrikdev-api-client.models.leaderboard_v3_data_threshold.LeaderboardV3DataThreshold(
                            start_index = 56, 
                            threshold = 56, 
                            tier = henrikdev-api-client.models.leaderboard_v3_data_threshold_tier.LeaderboardV3DataThresholdTier(
                                id = 56, 
                                name = '', ), )
                        ], 
                    updated_at = '', ),
                results = henrikdev-api-client.models.pagination.Pagination(
                    after = 56, 
                    before = 56, 
                    returned = 56, 
                    total = 56, ),
                status = 0,
        )
        """

    def testLeaderboardV3Response(self):
        """Test LeaderboardV3Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
