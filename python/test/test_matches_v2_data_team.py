# coding: utf-8

"""
    HenrikDev API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from henrikdev-api-client.models.matches_v2_data_team import MatchesV2DataTeam

class TestMatchesV2DataTeam(unittest.TestCase):
    """MatchesV2DataTeam unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MatchesV2DataTeam:
        """Test MatchesV2DataTeam
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MatchesV2DataTeam`
        """
        model = MatchesV2DataTeam()
        if include_optional:
            return MatchesV2DataTeam(
                has_won = True,
                roster = henrikdev-api-client.models.matches_v2_data_team_roster.MatchesV2DataTeamRoster(
                    customization = henrikdev-api-client.models.matches_v2_data_team_roster_customization.MatchesV2DataTeamRosterCustomization(
                        icon = '', 
                        image = '', 
                        primary_color = '', 
                        secondary_color = '', 
                        tertiary_color = '', ), 
                    id = '', 
                    members = [
                        ''
                        ], 
                    name = '', 
                    tag = '', ),
                rounds_lost = 0,
                rounds_won = 0
            )
        else:
            return MatchesV2DataTeam(
        )
        """

    def testMatchesV2DataTeam(self):
        """Test MatchesV2DataTeam"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
