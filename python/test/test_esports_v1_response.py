# coding: utf-8

"""
    HenrikDev API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from henrikdev-api-client.models.esports_v1_response import EsportsV1Response

class TestEsportsV1Response(unittest.TestCase):
    """EsportsV1Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EsportsV1Response:
        """Test EsportsV1Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EsportsV1Response`
        """
        model = EsportsV1Response()
        if include_optional:
            return EsportsV1Response(
                data = [
                    henrikdev-api-client.models.esports_v1_data.EsportsV1Data(
                        date = '', 
                        league = henrikdev-api-client.models.esports_v1_data_league.EsportsV1DataLeague(
                            icon = '', 
                            identifier = '', 
                            name = '', 
                            region = '', ), 
                        match = henrikdev-api-client.models.esports_v1_data_match.EsportsV1DataMatch(
                            game_type = henrikdev-api-client.models.esports_v1_data_match_game_type.EsportsV1DataMatchGameType(
                                count = 56, 
                                type = '', ), 
                            id = '', 
                            teams = [
                                henrikdev-api-client.models.esports_v1_data_match_teams.EsportsV1DataMatchTeams(
                                    code = '', 
                                    game_wins = 56, 
                                    has_won = True, 
                                    icon = '', 
                                    name = '', 
                                    record = henrikdev-api-client.models.esports_v1_data_match_teams_record.EsportsV1DataMatchTeamsRecord(
                                        losses = 56, 
                                        wins = 56, ), )
                                ], ), 
                        state = '', 
                        tournament = henrikdev-api-client.models.esports_v1_data_tournament.EsportsV1DataTournament(
                            name = '', 
                            season = '', ), 
                        type = '', 
                        vod = '', )
                    ],
                status = 0
            )
        else:
            return EsportsV1Response(
                data = [
                    henrikdev-api-client.models.esports_v1_data.EsportsV1Data(
                        date = '', 
                        league = henrikdev-api-client.models.esports_v1_data_league.EsportsV1DataLeague(
                            icon = '', 
                            identifier = '', 
                            name = '', 
                            region = '', ), 
                        match = henrikdev-api-client.models.esports_v1_data_match.EsportsV1DataMatch(
                            game_type = henrikdev-api-client.models.esports_v1_data_match_game_type.EsportsV1DataMatchGameType(
                                count = 56, 
                                type = '', ), 
                            id = '', 
                            teams = [
                                henrikdev-api-client.models.esports_v1_data_match_teams.EsportsV1DataMatchTeams(
                                    code = '', 
                                    game_wins = 56, 
                                    has_won = True, 
                                    icon = '', 
                                    name = '', 
                                    record = henrikdev-api-client.models.esports_v1_data_match_teams_record.EsportsV1DataMatchTeamsRecord(
                                        losses = 56, 
                                        wins = 56, ), )
                                ], ), 
                        state = '', 
                        tournament = henrikdev-api-client.models.esports_v1_data_tournament.EsportsV1DataTournament(
                            name = '', 
                            season = '', ), 
                        type = '', 
                        vod = '', )
                    ],
                status = 0,
        )
        """

    def testEsportsV1Response(self):
        """Test EsportsV1Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
