# coding: utf-8

"""
    HenrikDev API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from henrikdev-api-client.models.stored_matches_response import StoredMatchesResponse

class TestStoredMatchesResponse(unittest.TestCase):
    """StoredMatchesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StoredMatchesResponse:
        """Test StoredMatchesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StoredMatchesResponse`
        """
        model = StoredMatchesResponse()
        if include_optional:
            return StoredMatchesResponse(
                data = [
                    henrikdev-api-client.models.stored_match.StoredMatch(
                        meta = henrikdev-api-client.models.stored_match_meta.StoredMatchMeta(
                            cluster = '', 
                            id = '', 
                            map = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                                id = '', 
                                name = '', ), 
                            mode = '', 
                            region = '', 
                            season = henrikdev-api-client.models.season_id_short_combo.SeasonIdShortCombo(
                                id = '', 
                                short = '', ), 
                            started_at = '', 
                            version = '', ), 
                        stats = henrikdev-api-client.models.stored_match_stats.StoredMatchStats(
                            assists = 0, 
                            character = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                                id = '', 
                                name = '', ), 
                            damage = henrikdev-api-client.models.stored_match_stats_damage.StoredMatchStatsDamage(
                                made = 56, 
                                received = 56, ), 
                            deaths = 0, 
                            kills = 0, 
                            level = 0, 
                            puuid = '', 
                            score = 56, 
                            shots = henrikdev-api-client.models.stored_match_stats_shots.StoredMatchStatsShots(
                                body = 0, 
                                head = 0, 
                                leg = 0, ), 
                            team = '', 
                            tier = 0, ), 
                        teams = henrikdev-api-client.models.stored_match_team.StoredMatchTeam(
                            blue = 0, 
                            red = 0, ), )
                    ],
                results = henrikdev-api-client.models.pagination.Pagination(
                    after = 56, 
                    before = 56, 
                    returned = 56, 
                    total = 56, ),
                status = 0
            )
        else:
            return StoredMatchesResponse(
                data = [
                    henrikdev-api-client.models.stored_match.StoredMatch(
                        meta = henrikdev-api-client.models.stored_match_meta.StoredMatchMeta(
                            cluster = '', 
                            id = '', 
                            map = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                                id = '', 
                                name = '', ), 
                            mode = '', 
                            region = '', 
                            season = henrikdev-api-client.models.season_id_short_combo.SeasonIdShortCombo(
                                id = '', 
                                short = '', ), 
                            started_at = '', 
                            version = '', ), 
                        stats = henrikdev-api-client.models.stored_match_stats.StoredMatchStats(
                            assists = 0, 
                            character = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                                id = '', 
                                name = '', ), 
                            damage = henrikdev-api-client.models.stored_match_stats_damage.StoredMatchStatsDamage(
                                made = 56, 
                                received = 56, ), 
                            deaths = 0, 
                            kills = 0, 
                            level = 0, 
                            puuid = '', 
                            score = 56, 
                            shots = henrikdev-api-client.models.stored_match_stats_shots.StoredMatchStatsShots(
                                body = 0, 
                                head = 0, 
                                leg = 0, ), 
                            team = '', 
                            tier = 0, ), 
                        teams = henrikdev-api-client.models.stored_match_team.StoredMatchTeam(
                            blue = 0, 
                            red = 0, ), )
                    ],
                results = henrikdev-api-client.models.pagination.Pagination(
                    after = 56, 
                    before = 56, 
                    returned = 56, 
                    total = 56, ),
                status = 0,
        )
        """

    def testStoredMatchesResponse(self):
        """Test StoredMatchesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
