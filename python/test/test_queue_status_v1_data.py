# coding: utf-8

"""
    HenrikDev API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from henrikdev-api-client.models.queue_status_v1_data import QueueStatusV1Data

class TestQueueStatusV1Data(unittest.TestCase):
    """QueueStatusV1Data unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueueStatusV1Data:
        """Test QueueStatusV1Data
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueueStatusV1Data`
        """
        model = QueueStatusV1Data()
        if include_optional:
            return QueueStatusV1Data(
                enabled = True,
                game_rules = henrikdev-api-client.models.queue_status_v1_game_rules.QueueStatusV1GameRules(
                    allow_drop_out = True, 
                    allow_lenient_surrender = True, 
                    allow_overtime_draw_vote = True, 
                    assign_random_agents = True, 
                    overtime_win_by_two = True, 
                    overtime_win_by_two_capped = True, 
                    premier_mode = True, 
                    skip_pregame = True, ),
                high_skill = henrikdev-api-client.models.queue_status_v1_high_skill.QueueStatusV1HighSkill(
                    max_party_size = 56, 
                    max_tier = 56, 
                    min_tier = 56, ),
                maps = [
                    henrikdev-api-client.models.queue_status_v1_maps.QueueStatusV1Maps(
                        enabled = True, 
                        map = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                            id = '', 
                            name = '', ), )
                    ],
                mode = '',
                mode_id = '',
                number_of_teams = 56,
                party_size = henrikdev-api-client.models.queue_status_v1_party_size.QueueStatusV1PartySize(
                    full_party_bypass = True, 
                    invalid = [
                        56
                        ], 
                    max = 56, 
                    min = 56, ),
                platforms = [
                    ''
                    ],
                ranked = True,
                required_account_level = 56,
                skill_disparity = [
                    henrikdev-api-client.models.queue_status_v1_skill_disparity.QueueStatusV1SkillDisparity(
                        max_tier = henrikdev-api-client.models.queue_status_v1_id_name_pair.QueueStatusV1IDNamePair(
                            id = 0, 
                            name = '', ), 
                        name = '', 
                        tier = 56, )
                    ],
                team_size = 56,
                tournament = True
            )
        else:
            return QueueStatusV1Data(
                enabled = True,
                game_rules = henrikdev-api-client.models.queue_status_v1_game_rules.QueueStatusV1GameRules(
                    allow_drop_out = True, 
                    allow_lenient_surrender = True, 
                    allow_overtime_draw_vote = True, 
                    assign_random_agents = True, 
                    overtime_win_by_two = True, 
                    overtime_win_by_two_capped = True, 
                    premier_mode = True, 
                    skip_pregame = True, ),
                high_skill = henrikdev-api-client.models.queue_status_v1_high_skill.QueueStatusV1HighSkill(
                    max_party_size = 56, 
                    max_tier = 56, 
                    min_tier = 56, ),
                maps = [
                    henrikdev-api-client.models.queue_status_v1_maps.QueueStatusV1Maps(
                        enabled = True, 
                        map = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                            id = '', 
                            name = '', ), )
                    ],
                mode = '',
                mode_id = '',
                number_of_teams = 56,
                party_size = henrikdev-api-client.models.queue_status_v1_party_size.QueueStatusV1PartySize(
                    full_party_bypass = True, 
                    invalid = [
                        56
                        ], 
                    max = 56, 
                    min = 56, ),
                platforms = [
                    ''
                    ],
                ranked = True,
                required_account_level = 56,
                skill_disparity = [
                    henrikdev-api-client.models.queue_status_v1_skill_disparity.QueueStatusV1SkillDisparity(
                        max_tier = henrikdev-api-client.models.queue_status_v1_id_name_pair.QueueStatusV1IDNamePair(
                            id = 0, 
                            name = '', ), 
                        name = '', 
                        tier = 56, )
                    ],
                team_size = 56,
                tournament = True,
        )
        """

    def testQueueStatusV1Data(self):
        """Test QueueStatusV1Data"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
