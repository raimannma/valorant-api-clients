# coding: utf-8

"""
    HenrikDev API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from henrikdev-api-client.models.matches_v4_data_metadata import MatchesV4DataMetadata

class TestMatchesV4DataMetadata(unittest.TestCase):
    """MatchesV4DataMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MatchesV4DataMetadata:
        """Test MatchesV4DataMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MatchesV4DataMetadata`
        """
        model = MatchesV4DataMetadata()
        if include_optional:
            return MatchesV4DataMetadata(
                cluster = '',
                game_length_in_ms = 0,
                game_version = '',
                is_completed = True,
                map = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                    id = '', 
                    name = '', ),
                match_id = '',
                party_rr_penaltys = [
                    henrikdev-api-client.models.matches_v4_data_metadata_party_rr_penalty.MatchesV4DataMetadataPartyRRPenalty(
                        party_id = '', 
                        penalty = 1.337, )
                    ],
                platform = '',
                premier = None,
                queue = henrikdev-api-client.models.matches_v4_data_metadata_queue.MatchesV4DataMetadataQueue(
                    id = '', 
                    mode_type = '', 
                    name = '', ),
                region = '',
                season = henrikdev-api-client.models.season_id_short_combo.SeasonIdShortCombo(
                    id = '', 
                    short = '', ),
                started_at = ''
            )
        else:
            return MatchesV4DataMetadata(
                game_length_in_ms = 0,
                game_version = '',
                is_completed = True,
                map = henrikdev-api-client.models.mmr_history_v1_data_map.MMRHistoryV1DataMap(
                    id = '', 
                    name = '', ),
                match_id = '',
                party_rr_penaltys = [
                    henrikdev-api-client.models.matches_v4_data_metadata_party_rr_penalty.MatchesV4DataMetadataPartyRRPenalty(
                        party_id = '', 
                        penalty = 1.337, )
                    ],
                platform = '',
                queue = henrikdev-api-client.models.matches_v4_data_metadata_queue.MatchesV4DataMetadataQueue(
                    id = '', 
                    mode_type = '', 
                    name = '', ),
                season = henrikdev-api-client.models.season_id_short_combo.SeasonIdShortCombo(
                    id = '', 
                    short = '', ),
                started_at = '',
        )
        """

    def testMatchesV4DataMetadata(self):
        """Test MatchesV4DataMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
