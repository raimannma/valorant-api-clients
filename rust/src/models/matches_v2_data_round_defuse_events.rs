/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV2DataRoundDefuseEvents {
    #[serde(rename = "defuse_location", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub defuse_location: Option<Option<Box<models::MatchesV2DataRoundEventLocation>>>,
    #[serde(rename = "defuse_time_in_round", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub defuse_time_in_round: Option<Option<u64>>,
    #[serde(rename = "defused_by", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub defused_by: Option<Option<Box<models::MatchesV2DataRoundPlayer>>>,
    #[serde(rename = "player_locations_on_defuse", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub player_locations_on_defuse: Option<Option<Vec<models::MatchesV2DataRoundPlayerLocationsOnEvent>>>,
}

impl MatchesV2DataRoundDefuseEvents {
    pub fn new() -> MatchesV2DataRoundDefuseEvents {
        MatchesV2DataRoundDefuseEvents {
            defuse_location: None,
            defuse_time_in_round: None,
            defused_by: None,
            player_locations_on_defuse: None,
        }
    }
}

