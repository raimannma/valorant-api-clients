/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RawV1Payload {
    #[serde(rename = "platform", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub platform: Option<Option<String>>,
    #[serde(rename = "queries", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub queries: Option<Option<String>>,
    #[serde(rename = "region")]
    pub region: String,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "value")]
    pub value: Box<models::RawV1PayloadValues>,
}

impl RawV1Payload {
    pub fn new(region: String, r#type: String, value: models::RawV1PayloadValues) -> RawV1Payload {
        RawV1Payload {
            platform: None,
            queries: None,
            region,
            r#type,
            value: Box::new(value),
        }
    }
}

