/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MmrHistoryV2History {
    #[serde(rename = "date")]
    pub date: String,
    #[serde(rename = "elo")]
    pub elo: i32,
    #[serde(rename = "last_change")]
    pub last_change: i32,
    #[serde(rename = "map")]
    pub map: Box<models::MapIdNameCombo>,
    #[serde(rename = "match_id")]
    pub match_id: String,
    #[serde(rename = "refunded_rr")]
    pub refunded_rr: i32,
    #[serde(rename = "rr")]
    pub rr: i32,
    #[serde(rename = "season")]
    pub season: Box<models::SeasonIdShortCombo>,
    #[serde(rename = "tier")]
    pub tier: Box<models::TierIdNameCombo>,
    #[serde(rename = "was_derank_protected")]
    pub was_derank_protected: bool,
}

impl MmrHistoryV2History {
    pub fn new(date: String, elo: i32, last_change: i32, map: models::MapIdNameCombo, match_id: String, refunded_rr: i32, rr: i32, season: models::SeasonIdShortCombo, tier: models::TierIdNameCombo, was_derank_protected: bool) -> MmrHistoryV2History {
        MmrHistoryV2History {
            date,
            elo,
            last_change,
            map: Box::new(map),
            match_id,
            refunded_rr,
            rr,
            season: Box::new(season),
            tier: Box::new(tier),
            was_derank_protected,
        }
    }
}

