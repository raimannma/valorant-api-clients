/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EsportsV1DataMatch {
    #[serde(rename = "game_type")]
    pub game_type: Box<models::EsportsV1DataMatchGameType>,
    #[serde(rename = "id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub id: Option<Option<String>>,
    #[serde(rename = "teams")]
    pub teams: Vec<models::EsportsV1DataMatchTeams>,
}

impl EsportsV1DataMatch {
    pub fn new(game_type: models::EsportsV1DataMatchGameType, teams: Vec<models::EsportsV1DataMatchTeams>) -> EsportsV1DataMatch {
        EsportsV1DataMatch {
            game_type: Box::new(game_type),
            id: None,
            teams,
        }
    }
}

