/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PremierTeamV1ResponseData {
    #[serde(rename = "customization")]
    pub customization: Box<models::PremierTeamV1ResponseDataCustomization>,
    #[serde(rename = "enrolled")]
    pub enrolled: bool,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "member")]
    pub member: Vec<models::PremierTeamMember>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "placement")]
    pub placement: Box<models::PremierTeamV1ResponseDataPlacement>,
    #[serde(rename = "stats")]
    pub stats: Box<models::PremierTeamV1ResponseDataStats>,
    #[serde(rename = "tag")]
    pub tag: String,
}

impl PremierTeamV1ResponseData {
    pub fn new(customization: models::PremierTeamV1ResponseDataCustomization, enrolled: bool, id: String, member: Vec<models::PremierTeamMember>, name: String, placement: models::PremierTeamV1ResponseDataPlacement, stats: models::PremierTeamV1ResponseDataStats, tag: String) -> PremierTeamV1ResponseData {
        PremierTeamV1ResponseData {
            customization: Box::new(customization),
            enrolled,
            id,
            member,
            name,
            placement: Box::new(placement),
            stats: Box::new(stats),
            tag,
        }
    }
}

