/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueueStatusV1GameRules {
    #[serde(rename = "allow_drop_out")]
    pub allow_drop_out: bool,
    #[serde(rename = "allow_lenient_surrender")]
    pub allow_lenient_surrender: bool,
    #[serde(rename = "allow_overtime_draw_vote")]
    pub allow_overtime_draw_vote: bool,
    #[serde(rename = "assign_random_agents")]
    pub assign_random_agents: bool,
    #[serde(rename = "overtime_win_by_two")]
    pub overtime_win_by_two: bool,
    #[serde(rename = "overtime_win_by_two_capped")]
    pub overtime_win_by_two_capped: bool,
    #[serde(rename = "premier_mode")]
    pub premier_mode: bool,
    #[serde(rename = "skip_pregame")]
    pub skip_pregame: bool,
}

impl QueueStatusV1GameRules {
    pub fn new(allow_drop_out: bool, allow_lenient_surrender: bool, allow_overtime_draw_vote: bool, assign_random_agents: bool, overtime_win_by_two: bool, overtime_win_by_two_capped: bool, premier_mode: bool, skip_pregame: bool) -> QueueStatusV1GameRules {
        QueueStatusV1GameRules {
            allow_drop_out,
            allow_lenient_surrender,
            allow_overtime_draw_vote,
            assign_random_agents,
            overtime_win_by_two,
            overtime_win_by_two_capped,
            premier_mode,
            skip_pregame,
        }
    }
}

