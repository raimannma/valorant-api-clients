/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV4DataPlayer {
    #[serde(rename = "ability_casts")]
    pub ability_casts: Box<models::MatchesV4DataPlayerAbilityCasts>,
    #[serde(rename = "account_level")]
    pub account_level: u32,
    #[serde(rename = "agent")]
    pub agent: Box<models::AgentIdNameCombo>,
    #[serde(rename = "behavior")]
    pub behavior: Box<models::MatchesV4DataPlayerBehavior>,
    #[serde(rename = "customization")]
    pub customization: Box<models::MatchesV4DataPlayerCustomization>,
    #[serde(rename = "economy")]
    pub economy: Box<models::MatchesV4DataPlayerEconomy>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "party_id")]
    pub party_id: String,
    #[serde(rename = "platform")]
    pub platform: String,
    #[serde(rename = "puuid")]
    pub puuid: String,
    #[serde(rename = "session_playtime_in_ms")]
    pub session_playtime_in_ms: u32,
    #[serde(rename = "stats")]
    pub stats: Box<models::MatchesV4DataPlayerStats>,
    #[serde(rename = "tag")]
    pub tag: String,
    #[serde(rename = "team_id")]
    pub team_id: String,
    #[serde(rename = "tier")]
    pub tier: Box<models::TierIdNameCombo>,
}

impl MatchesV4DataPlayer {
    pub fn new(ability_casts: models::MatchesV4DataPlayerAbilityCasts, account_level: u32, agent: models::AgentIdNameCombo, behavior: models::MatchesV4DataPlayerBehavior, customization: models::MatchesV4DataPlayerCustomization, economy: models::MatchesV4DataPlayerEconomy, name: String, party_id: String, platform: String, puuid: String, session_playtime_in_ms: u32, stats: models::MatchesV4DataPlayerStats, tag: String, team_id: String, tier: models::TierIdNameCombo) -> MatchesV4DataPlayer {
        MatchesV4DataPlayer {
            ability_casts: Box::new(ability_casts),
            account_level,
            agent: Box::new(agent),
            behavior: Box::new(behavior),
            customization: Box::new(customization),
            economy: Box::new(economy),
            name,
            party_id,
            platform,
            puuid,
            session_playtime_in_ms,
            stats: Box::new(stats),
            tag,
            team_id,
            tier: Box::new(tier),
        }
    }
}

