/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV4DataRoundPlayerStatsAbilityCasts {
    #[serde(rename = "ability_1", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ability_1: Option<Option<u32>>,
    #[serde(rename = "ability_2", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ability_2: Option<Option<u32>>,
    #[serde(rename = "grenade", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub grenade: Option<Option<u32>>,
    #[serde(rename = "ultimate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ultimate: Option<Option<u32>>,
}

impl MatchesV4DataRoundPlayerStatsAbilityCasts {
    pub fn new() -> MatchesV4DataRoundPlayerStatsAbilityCasts {
        MatchesV4DataRoundPlayerStatsAbilityCasts {
            ability_1: None,
            ability_2: None,
            grenade: None,
            ultimate: None,
        }
    }
}

