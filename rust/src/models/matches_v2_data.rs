/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV2Data {
    #[serde(rename = "coaches")]
    pub coaches: Vec<models::MatchesV2DataCoach>,
    #[serde(rename = "kills")]
    pub kills: Vec<models::MatchesV2DataKill>,
    #[serde(rename = "metadata")]
    pub metadata: Box<models::MatchesV2DataMetadata>,
    #[serde(rename = "observers")]
    pub observers: Vec<models::MatchesV2DataObserver>,
    #[serde(rename = "players")]
    pub players: Box<models::MatchesV2DataPlayers>,
    #[serde(rename = "rounds")]
    pub rounds: Vec<models::MatchesV2DataRound>,
    #[serde(rename = "teams")]
    pub teams: Box<models::MatchesV2DataTeams>,
}

impl MatchesV2Data {
    pub fn new(coaches: Vec<models::MatchesV2DataCoach>, kills: Vec<models::MatchesV2DataKill>, metadata: models::MatchesV2DataMetadata, observers: Vec<models::MatchesV2DataObserver>, players: models::MatchesV2DataPlayers, rounds: Vec<models::MatchesV2DataRound>, teams: models::MatchesV2DataTeams) -> MatchesV2Data {
        MatchesV2Data {
            coaches,
            kills,
            metadata: Box::new(metadata),
            observers,
            players: Box::new(players),
            rounds,
            teams: Box::new(teams),
        }
    }
}

