/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV4DataRoundPlayerStatsEconomy {
    #[serde(rename = "armor", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub armor: Option<Option<Box<models::MatchesV4DataRoundPlayerStatsEconomyArmor>>>,
    #[serde(rename = "loadout_value")]
    pub loadout_value: i32,
    #[serde(rename = "remaining")]
    pub remaining: i32,
    #[serde(rename = "weapon", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub weapon: Option<Option<Box<models::MatchesV4DataRoundPlayerStatsEconomyWeapon>>>,
}

impl MatchesV4DataRoundPlayerStatsEconomy {
    pub fn new(loadout_value: i32, remaining: i32) -> MatchesV4DataRoundPlayerStatsEconomy {
        MatchesV4DataRoundPlayerStatsEconomy {
            armor: None,
            loadout_value,
            remaining,
            weapon: None,
        }
    }
}

