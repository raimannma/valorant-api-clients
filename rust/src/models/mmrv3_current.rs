/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Mmrv3Current {
    #[serde(rename = "elo")]
    pub elo: i32,
    #[serde(rename = "games_needed_for_rating")]
    pub games_needed_for_rating: i32,
    #[serde(rename = "last_change")]
    pub last_change: i32,
    #[serde(rename = "leaderboard_placement", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub leaderboard_placement: Option<Option<Box<models::Mmrv3LeaderboardPlacement>>>,
    #[serde(rename = "rank_protection_shields")]
    pub rank_protection_shields: i32,
    #[serde(rename = "rr")]
    pub rr: i32,
    #[serde(rename = "tier")]
    pub tier: Box<models::TierIdNameCombo>,
}

impl Mmrv3Current {
    pub fn new(elo: i32, games_needed_for_rating: i32, last_change: i32, rank_protection_shields: i32, rr: i32, tier: models::TierIdNameCombo) -> Mmrv3Current {
        Mmrv3Current {
            elo,
            games_needed_for_rating,
            last_change,
            leaderboard_placement: None,
            rank_protection_shields,
            rr,
            tier: Box::new(tier),
        }
    }
}

