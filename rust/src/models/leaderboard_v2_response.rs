/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LeaderboardV2Response {
    #[serde(rename = "immortal_1_threshold")]
    pub immortal_1_threshold: i32,
    #[serde(rename = "immortal_2_threshold")]
    pub immortal_2_threshold: i32,
    #[serde(rename = "immortal_3_threshold")]
    pub immortal_3_threshold: i32,
    #[serde(rename = "last_update")]
    pub last_update: i64,
    #[serde(rename = "next_update")]
    pub next_update: i64,
    #[serde(rename = "players")]
    pub players: Vec<models::LeaderboardPvpPlayer>,
    #[serde(rename = "radiant_threshold")]
    pub radiant_threshold: i32,
    #[serde(rename = "total_players")]
    pub total_players: i32,
}

impl LeaderboardV2Response {
    pub fn new(immortal_1_threshold: i32, immortal_2_threshold: i32, immortal_3_threshold: i32, last_update: i64, next_update: i64, players: Vec<models::LeaderboardPvpPlayer>, radiant_threshold: i32, total_players: i32) -> LeaderboardV2Response {
        LeaderboardV2Response {
            immortal_1_threshold,
            immortal_2_threshold,
            immortal_3_threshold,
            last_update,
            next_update,
            players,
            radiant_threshold,
            total_players,
        }
    }
}

