/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Mmrv3Seasonal {
    #[serde(rename = "act_wins")]
    pub act_wins: Vec<models::TierIdNameCombo>,
    #[serde(rename = "end_rr")]
    pub end_rr: i32,
    #[serde(rename = "end_tier")]
    pub end_tier: Box<models::TierIdNameCombo>,
    #[serde(rename = "games")]
    pub games: i32,
    #[serde(rename = "leaderboard_placement", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub leaderboard_placement: Option<Option<Box<models::Mmrv3LeaderboardPlacement>>>,
    #[serde(rename = "ranking_schema")]
    pub ranking_schema: String,
    #[serde(rename = "season")]
    pub season: Box<models::SeasonIdShortCombo>,
    #[serde(rename = "wins")]
    pub wins: i32,
}

impl Mmrv3Seasonal {
    pub fn new(act_wins: Vec<models::TierIdNameCombo>, end_rr: i32, end_tier: models::TierIdNameCombo, games: i32, ranking_schema: String, season: models::SeasonIdShortCombo, wins: i32) -> Mmrv3Seasonal {
        Mmrv3Seasonal {
            act_wins,
            end_rr,
            end_tier: Box::new(end_tier),
            games,
            leaderboard_placement: None,
            ranking_schema,
            season: Box::new(season),
            wins,
        }
    }
}

