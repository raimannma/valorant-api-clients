/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV2DataPlayerBehavior {
    #[serde(rename = "afk_rounds")]
    pub afk_rounds: f32,
    #[serde(rename = "friendly_fire")]
    pub friendly_fire: Box<models::MatchesV2DataPlayerBehaviorFriendlyFire>,
    #[serde(rename = "rounds_in_spawn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rounds_in_spawn: Option<Option<f32>>,
}

impl MatchesV2DataPlayerBehavior {
    pub fn new(afk_rounds: f32, friendly_fire: models::MatchesV2DataPlayerBehaviorFriendlyFire) -> MatchesV2DataPlayerBehavior {
        MatchesV2DataPlayerBehavior {
            afk_rounds,
            friendly_fire: Box::new(friendly_fire),
            rounds_in_spawn: None,
        }
    }
}

