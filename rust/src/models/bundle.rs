/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Bundle {
    #[serde(rename = "CurrencyID")]
    pub currency_id: String,
    #[serde(rename = "DataAssetID")]
    pub data_asset_id: String,
    #[serde(rename = "DurationRemainingInSeconds")]
    pub duration_remaining_in_seconds: u32,
    #[serde(rename = "ID")]
    pub id: String,
    #[serde(rename = "Items")]
    pub items: Vec<models::BundleItem>,
    #[serde(rename = "TotalDiscountPercent")]
    pub total_discount_percent: f32,
    #[serde(rename = "WholesaleOnly")]
    pub wholesale_only: bool,
}

impl Bundle {
    pub fn new(currency_id: String, data_asset_id: String, duration_remaining_in_seconds: u32, id: String, items: Vec<models::BundleItem>, total_discount_percent: f32, wholesale_only: bool) -> Bundle {
        Bundle {
            currency_id,
            data_asset_id,
            duration_remaining_in_seconds,
            id,
            items,
            total_discount_percent,
            wholesale_only,
        }
    }
}

