/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebsiteV1Data {
    #[serde(rename = "banner_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub banner_url: Option<Option<String>>,
    #[serde(rename = "category")]
    pub category: String,
    #[serde(rename = "date")]
    pub date: String,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "external_link", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub external_link: Option<Option<String>>,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "url")]
    pub url: String,
}

impl WebsiteV1Data {
    pub fn new(category: String, date: String, id: String, title: String, url: String) -> WebsiteV1Data {
        WebsiteV1Data {
            banner_url: None,
            category,
            date,
            description: None,
            external_link: None,
            id,
            title,
            url,
        }
    }
}

