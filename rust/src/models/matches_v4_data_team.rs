/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV4DataTeam {
    #[serde(rename = "premier_roster", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub premier_roster: Option<Option<Box<models::MatchesV4DataTeamPremierRoster>>>,
    #[serde(rename = "rounds")]
    pub rounds: Box<models::MatchesV4DataTeamRounds>,
    #[serde(rename = "team_id")]
    pub team_id: String,
    #[serde(rename = "won")]
    pub won: bool,
}

impl MatchesV4DataTeam {
    pub fn new(rounds: models::MatchesV4DataTeamRounds, team_id: String, won: bool) -> MatchesV4DataTeam {
        MatchesV4DataTeam {
            premier_roster: None,
            rounds: Box::new(rounds),
            team_id,
            won,
        }
    }
}

