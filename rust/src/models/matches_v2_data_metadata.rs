/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV2DataMetadata {
    #[serde(rename = "cluster", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cluster: Option<Option<String>>,
    #[serde(rename = "game_length")]
    pub game_length: u64,
    #[serde(rename = "game_start")]
    pub game_start: u64,
    #[serde(rename = "game_start_patched")]
    pub game_start_patched: String,
    #[serde(rename = "game_version")]
    pub game_version: String,
    #[serde(rename = "map", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub map: Option<Option<String>>,
    #[serde(rename = "matchid")]
    pub matchid: String,
    #[serde(rename = "mode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub mode: Option<Option<String>>,
    #[serde(rename = "mode_id")]
    pub mode_id: String,
    #[serde(rename = "platform")]
    pub platform: String,
    #[serde(rename = "premier_info")]
    pub premier_info: Box<models::MatchesV2DataMetadataPremierInfo>,
    #[serde(rename = "queue", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub queue: Option<Option<String>>,
    #[serde(rename = "region", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub region: Option<Option<String>>,
    #[serde(rename = "rounds_played")]
    pub rounds_played: u32,
    #[serde(rename = "season_id")]
    pub season_id: String,
}

impl MatchesV2DataMetadata {
    pub fn new(game_length: u64, game_start: u64, game_start_patched: String, game_version: String, matchid: String, mode_id: String, platform: String, premier_info: models::MatchesV2DataMetadataPremierInfo, rounds_played: u32, season_id: String) -> MatchesV2DataMetadata {
        MatchesV2DataMetadata {
            cluster: None,
            game_length,
            game_start,
            game_start_patched,
            game_version,
            map: None,
            matchid,
            mode: None,
            mode_id,
            platform,
            premier_info: Box::new(premier_info),
            queue: None,
            region: None,
            rounds_played,
            season_id,
        }
    }
}

