/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StoredMmr {
    #[serde(rename = "date")]
    pub date: String,
    #[serde(rename = "elo")]
    pub elo: i32,
    #[serde(rename = "last_mmr_change")]
    pub last_mmr_change: i32,
    #[serde(rename = "map")]
    pub map: Box<models::StoredMmrMap>,
    #[serde(rename = "match_id")]
    pub match_id: String,
    #[serde(rename = "ranking_in_tier")]
    pub ranking_in_tier: u32,
    #[serde(rename = "season")]
    pub season: Box<models::StoredMmrSeason>,
    #[serde(rename = "tier")]
    pub tier: Box<models::StoredMmrTier>,
}

impl StoredMmr {
    pub fn new(date: String, elo: i32, last_mmr_change: i32, map: models::StoredMmrMap, match_id: String, ranking_in_tier: u32, season: models::StoredMmrSeason, tier: models::StoredMmrTier) -> StoredMmr {
        StoredMmr {
            date,
            elo,
            last_mmr_change,
            map: Box::new(map),
            match_id,
            ranking_in_tier,
            season: Box::new(season),
            tier: Box::new(tier),
        }
    }
}

