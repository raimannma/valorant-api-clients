/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV4DataRoundPlayerStatsDamageEvents {
    #[serde(rename = "bodyshots")]
    pub bodyshots: u32,
    #[serde(rename = "damage")]
    pub damage: u32,
    #[serde(rename = "headshots")]
    pub headshots: u32,
    #[serde(rename = "legshots")]
    pub legshots: u32,
    #[serde(rename = "player")]
    pub player: Box<models::MatchesV4DataRoundPlayer>,
}

impl MatchesV4DataRoundPlayerStatsDamageEvents {
    pub fn new(bodyshots: u32, damage: u32, headshots: u32, legshots: u32, player: models::MatchesV4DataRoundPlayer) -> MatchesV4DataRoundPlayerStatsDamageEvents {
        MatchesV4DataRoundPlayerStatsDamageEvents {
            bodyshots,
            damage,
            headshots,
            legshots,
            player: Box::new(player),
        }
    }
}

