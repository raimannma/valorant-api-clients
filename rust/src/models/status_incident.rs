/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatusIncident {
    #[serde(rename = "archive_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub archive_at: Option<Option<String>>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "id")]
    pub id: u32,
    #[serde(rename = "incident_severity")]
    pub incident_severity: String,
    #[serde(rename = "maintenance_status", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub maintenance_status: Option<Option<String>>,
    #[serde(rename = "platforms")]
    pub platforms: Vec<String>,
    #[serde(rename = "titles")]
    pub titles: Vec<models::StatusIncidentContent>,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "updates")]
    pub updates: Vec<models::StatusIncidentUpdate>,
}

impl StatusIncident {
    pub fn new(created_at: String, id: u32, incident_severity: String, platforms: Vec<String>, titles: Vec<models::StatusIncidentContent>, updated_at: String, updates: Vec<models::StatusIncidentUpdate>) -> StatusIncident {
        StatusIncident {
            archive_at: None,
            created_at,
            id,
            incident_severity,
            maintenance_status: None,
            platforms,
            titles,
            updated_at,
            updates,
        }
    }
}

