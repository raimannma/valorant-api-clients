/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Mmrv2Data {
    #[serde(rename = "by_season", deserialize_with = "Option::deserialize")]
    pub by_season: Option<serde_json::Value>,
    #[serde(rename = "current_data")]
    pub current_data: Box<models::Mmrv2CurrentData>,
    #[serde(rename = "highest_rank")]
    pub highest_rank: Box<models::Mmrv2HighestRank>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "puuid")]
    pub puuid: String,
    #[serde(rename = "tag")]
    pub tag: String,
}

impl Mmrv2Data {
    pub fn new(by_season: Option<serde_json::Value>, current_data: models::Mmrv2CurrentData, highest_rank: models::Mmrv2HighestRank, name: String, puuid: String, tag: String) -> Mmrv2Data {
        Mmrv2Data {
            by_season,
            current_data: Box::new(current_data),
            highest_rank: Box::new(highest_rank),
            name,
            puuid,
            tag,
        }
    }
}

