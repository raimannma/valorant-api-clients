/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV4DataPlayerStats {
    #[serde(rename = "assists")]
    pub assists: u32,
    #[serde(rename = "bodyshots")]
    pub bodyshots: u32,
    #[serde(rename = "damage")]
    pub damage: Box<models::MatchesV4DataPlayerStatsDamage>,
    #[serde(rename = "deaths")]
    pub deaths: u32,
    #[serde(rename = "headshots")]
    pub headshots: u32,
    #[serde(rename = "kills")]
    pub kills: u32,
    #[serde(rename = "legshots")]
    pub legshots: u32,
    #[serde(rename = "score")]
    pub score: i32,
}

impl MatchesV4DataPlayerStats {
    pub fn new(assists: u32, bodyshots: u32, damage: models::MatchesV4DataPlayerStatsDamage, deaths: u32, headshots: u32, kills: u32, legshots: u32, score: i32) -> MatchesV4DataPlayerStats {
        MatchesV4DataPlayerStats {
            assists,
            bodyshots,
            damage: Box::new(damage),
            deaths,
            headshots,
            kills,
            legshots,
            score,
        }
    }
}

