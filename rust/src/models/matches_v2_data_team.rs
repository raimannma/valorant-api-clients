/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV2DataTeam {
    #[serde(rename = "has_won", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub has_won: Option<Option<bool>>,
    #[serde(rename = "roster", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub roster: Option<Option<Box<models::MatchesV2DataTeamRoster>>>,
    #[serde(rename = "rounds_lost", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rounds_lost: Option<Option<u32>>,
    #[serde(rename = "rounds_won", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rounds_won: Option<Option<u32>>,
}

impl MatchesV2DataTeam {
    pub fn new() -> MatchesV2DataTeam {
        MatchesV2DataTeam {
            has_won: None,
            roster: None,
            rounds_lost: None,
            rounds_won: None,
        }
    }
}

