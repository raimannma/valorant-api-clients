/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MatchMode {
    #[serde(rename = "Competitive")]
    Competitive,
    #[serde(rename = "Unrated")]
    Unrated,
    #[serde(rename = "Custom")]
    Custom,
    #[serde(rename = "Practice")]
    Practice,
    #[serde(rename = "Unknown")]
    Unknown,

}

impl std::fmt::Display for MatchMode {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Competitive => write!(f, "Competitive"),
            Self::Unrated => write!(f, "Unrated"),
            Self::Custom => write!(f, "Custom"),
            Self::Practice => write!(f, "Practice"),
            Self::Unknown => write!(f, "Unknown"),
        }
    }
}

impl Default for MatchMode {
    fn default() -> MatchMode {
        Self::Competitive
    }
}

