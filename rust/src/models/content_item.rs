/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentItem {
    #[serde(rename = "assetName")]
    pub asset_name: String,
    #[serde(rename = "id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub id: Option<Option<String>>,
    #[serde(rename = "localizedNames", skip_serializing_if = "Option::is_none")]
    pub localized_names: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "name")]
    pub name: String,
}

impl ContentItem {
    pub fn new(asset_name: String, name: String) -> ContentItem {
        ContentItem {
            asset_name,
            id: None,
            localized_names: None,
            name,
        }
    }
}

