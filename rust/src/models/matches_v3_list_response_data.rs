/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV3ListResponseData {
    #[serde(rename = "coaches")]
    pub coaches: Vec<models::MatchesV2DataCoach>,
    #[serde(rename = "is_available")]
    pub is_available: bool,
    #[serde(rename = "kills")]
    pub kills: Vec<models::MatchesV2DataKill>,
    #[serde(rename = "metadata", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Option<Box<models::MatchesV2DataMetadata>>>,
    #[serde(rename = "observers")]
    pub observers: Vec<models::MatchesV2DataObserver>,
    #[serde(rename = "players", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub players: Option<Option<Box<models::MatchesV2DataPlayers>>>,
    #[serde(rename = "rounds")]
    pub rounds: Vec<models::MatchesV2DataRound>,
    #[serde(rename = "teams", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub teams: Option<Option<Box<models::MatchesV2DataTeams>>>,
}

impl MatchesV3ListResponseData {
    pub fn new(coaches: Vec<models::MatchesV2DataCoach>, is_available: bool, kills: Vec<models::MatchesV2DataKill>, observers: Vec<models::MatchesV2DataObserver>, rounds: Vec<models::MatchesV2DataRound>) -> MatchesV3ListResponseData {
        MatchesV3ListResponseData {
            coaches,
            is_available,
            kills,
            metadata: None,
            observers,
            players: None,
            rounds,
            teams: None,
        }
    }
}

