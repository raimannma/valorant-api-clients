/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV4DataKill {
    #[serde(rename = "assistants")]
    pub assistants: Vec<models::MatchesV4DataRoundPlayer>,
    #[serde(rename = "killer")]
    pub killer: Box<models::MatchesV4DataRoundPlayer>,
    #[serde(rename = "location")]
    pub location: Box<models::MatchesV4DataRoundLocation>,
    #[serde(rename = "player_locations")]
    pub player_locations: Vec<models::MatchesV4DataRoundPlayerLocations>,
    #[serde(rename = "round")]
    pub round: u32,
    #[serde(rename = "secondary_fire_mode")]
    pub secondary_fire_mode: bool,
    #[serde(rename = "time_in_match_in_ms")]
    pub time_in_match_in_ms: u64,
    #[serde(rename = "time_in_round_in_ms")]
    pub time_in_round_in_ms: u64,
    #[serde(rename = "victim")]
    pub victim: Box<models::MatchesV4DataRoundPlayer>,
    #[serde(rename = "weapon")]
    pub weapon: Box<models::MatchesV4DataRoundPlayerStatsEconomyWeapon>,
}

impl MatchesV4DataKill {
    pub fn new(assistants: Vec<models::MatchesV4DataRoundPlayer>, killer: models::MatchesV4DataRoundPlayer, location: models::MatchesV4DataRoundLocation, player_locations: Vec<models::MatchesV4DataRoundPlayerLocations>, round: u32, secondary_fire_mode: bool, time_in_match_in_ms: u64, time_in_round_in_ms: u64, victim: models::MatchesV4DataRoundPlayer, weapon: models::MatchesV4DataRoundPlayerStatsEconomyWeapon) -> MatchesV4DataKill {
        MatchesV4DataKill {
            assistants,
            killer: Box::new(killer),
            location: Box::new(location),
            player_locations,
            round,
            secondary_fire_mode,
            time_in_match_in_ms,
            time_in_round_in_ms,
            victim: Box::new(victim),
            weapon: Box::new(weapon),
        }
    }
}

