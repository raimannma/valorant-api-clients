/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentV1 {
    #[serde(rename = "acts")]
    pub acts: Vec<models::ContentItem>,
    #[serde(rename = "ceremonies")]
    pub ceremonies: Vec<models::ContentItem>,
    #[serde(rename = "characters")]
    pub characters: Vec<models::ContentItem>,
    #[serde(rename = "charmLevels")]
    pub charm_levels: Vec<models::ContentItem>,
    #[serde(rename = "charms")]
    pub charms: Vec<models::ContentItem>,
    #[serde(rename = "chromas")]
    pub chromas: Vec<models::ContentItem>,
    #[serde(rename = "equips")]
    pub equips: Vec<models::ContentItem>,
    #[serde(rename = "gameModes")]
    pub game_modes: Vec<models::ContentItem>,
    #[serde(rename = "maps")]
    pub maps: Vec<models::ContentItem>,
    #[serde(rename = "playerCards")]
    pub player_cards: Vec<models::ContentItem>,
    #[serde(rename = "playerTitles")]
    pub player_titles: Vec<models::ContentItem>,
    #[serde(rename = "skinLevels")]
    pub skin_levels: Vec<models::ContentItem>,
    #[serde(rename = "skins")]
    pub skins: Vec<models::ContentItem>,
    #[serde(rename = "sprayLevels")]
    pub spray_levels: Vec<models::ContentItem>,
    #[serde(rename = "sprays")]
    pub sprays: Vec<models::ContentItem>,
    #[serde(rename = "version")]
    pub version: String,
}

impl ContentV1 {
    pub fn new(acts: Vec<models::ContentItem>, ceremonies: Vec<models::ContentItem>, characters: Vec<models::ContentItem>, charm_levels: Vec<models::ContentItem>, charms: Vec<models::ContentItem>, chromas: Vec<models::ContentItem>, equips: Vec<models::ContentItem>, game_modes: Vec<models::ContentItem>, maps: Vec<models::ContentItem>, player_cards: Vec<models::ContentItem>, player_titles: Vec<models::ContentItem>, skin_levels: Vec<models::ContentItem>, skins: Vec<models::ContentItem>, spray_levels: Vec<models::ContentItem>, sprays: Vec<models::ContentItem>, version: String) -> ContentV1 {
        ContentV1 {
            acts,
            ceremonies,
            characters,
            charm_levels,
            charms,
            chromas,
            equips,
            game_modes,
            maps,
            player_cards,
            player_titles,
            skin_levels,
            skins,
            spray_levels,
            sprays,
            version,
        }
    }
}

