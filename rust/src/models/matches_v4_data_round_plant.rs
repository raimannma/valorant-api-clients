/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV4DataRoundPlant {
    #[serde(rename = "location")]
    pub location: Box<models::MatchesV4DataRoundLocation>,
    #[serde(rename = "player")]
    pub player: Box<models::MatchesV4DataRoundPlayer>,
    #[serde(rename = "player_locations")]
    pub player_locations: Vec<models::MatchesV4DataRoundPlayerLocations>,
    #[serde(rename = "round_time_in_ms")]
    pub round_time_in_ms: i32,
    #[serde(rename = "site")]
    pub site: String,
}

impl MatchesV4DataRoundPlant {
    pub fn new(location: models::MatchesV4DataRoundLocation, player: models::MatchesV4DataRoundPlayer, player_locations: Vec<models::MatchesV4DataRoundPlayerLocations>, round_time_in_ms: i32, site: String) -> MatchesV4DataRoundPlant {
        MatchesV4DataRoundPlant {
            location: Box::new(location),
            player: Box::new(player),
            player_locations,
            round_time_in_ms,
            site,
        }
    }
}

