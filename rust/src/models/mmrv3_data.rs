/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Mmrv3Data {
    #[serde(rename = "account")]
    pub account: Box<models::Mmrv3Account>,
    #[serde(rename = "current")]
    pub current: Box<models::Mmrv3Current>,
    #[serde(rename = "peak", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub peak: Option<Option<Box<models::Mmrv3Peak>>>,
    #[serde(rename = "seasonal")]
    pub seasonal: Vec<models::Mmrv3Seasonal>,
}

impl Mmrv3Data {
    pub fn new(account: models::Mmrv3Account, current: models::Mmrv3Current, seasonal: Vec<models::Mmrv3Seasonal>) -> Mmrv3Data {
        Mmrv3Data {
            account: Box::new(account),
            current: Box::new(current),
            peak: None,
            seasonal,
        }
    }
}

