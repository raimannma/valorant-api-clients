/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV2DataPlayerAbilityCasts {
    #[serde(rename = "c_cast", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub c_cast: Option<Option<u32>>,
    #[serde(rename = "e_cast", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub e_cast: Option<Option<u32>>,
    #[serde(rename = "q_cast", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub q_cast: Option<Option<u32>>,
    #[serde(rename = "x_cast", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub x_cast: Option<Option<u32>>,
}

impl MatchesV2DataPlayerAbilityCasts {
    pub fn new() -> MatchesV2DataPlayerAbilityCasts {
        MatchesV2DataPlayerAbilityCasts {
            c_cast: None,
            e_cast: None,
            q_cast: None,
            x_cast: None,
        }
    }
}

