/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LeaderboardV3DataPlayer {
    #[serde(rename = "card")]
    pub card: String,
    #[serde(rename = "is_anonymized")]
    pub is_anonymized: bool,
    #[serde(rename = "is_banned")]
    pub is_banned: bool,
    #[serde(rename = "leaderboard_rank")]
    pub leaderboard_rank: i32,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "puuid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub puuid: Option<Option<String>>,
    #[serde(rename = "rr")]
    pub rr: i32,
    #[serde(rename = "tag")]
    pub tag: String,
    #[serde(rename = "tier")]
    pub tier: i32,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "wins")]
    pub wins: i32,
}

impl LeaderboardV3DataPlayer {
    pub fn new(card: String, is_anonymized: bool, is_banned: bool, leaderboard_rank: i32, name: String, rr: i32, tag: String, tier: i32, title: String, updated_at: String, wins: i32) -> LeaderboardV3DataPlayer {
        LeaderboardV3DataPlayer {
            card,
            is_anonymized,
            is_banned,
            leaderboard_rank,
            name,
            puuid: None,
            rr,
            tag,
            tier,
            title,
            updated_at,
            wins,
        }
    }
}

