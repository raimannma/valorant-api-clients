/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchesV2DataKill {
    #[serde(rename = "assistants")]
    pub assistants: Vec<models::MatchesV2DataRoundPlayerStatsKillEventsAssistants>,
    #[serde(rename = "damage_weapon_assets")]
    pub damage_weapon_assets: Box<models::MatchesV2DataRoundPlayerStatsKillEventsAssets>,
    #[serde(rename = "damage_weapon_id")]
    pub damage_weapon_id: String,
    #[serde(rename = "damage_weapon_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub damage_weapon_name: Option<Option<String>>,
    #[serde(rename = "kill_time_in_match")]
    pub kill_time_in_match: u64,
    #[serde(rename = "kill_time_in_round")]
    pub kill_time_in_round: u64,
    #[serde(rename = "killer_display_name")]
    pub killer_display_name: String,
    #[serde(rename = "killer_puuid")]
    pub killer_puuid: String,
    #[serde(rename = "killer_team")]
    pub killer_team: String,
    #[serde(rename = "player_locations_on_kill")]
    pub player_locations_on_kill: Vec<models::MatchesV2DataRoundPlayerLocationsOnEvent>,
    #[serde(rename = "round")]
    pub round: u32,
    #[serde(rename = "secondary_fire_mode")]
    pub secondary_fire_mode: bool,
    #[serde(rename = "victim_death_location")]
    pub victim_death_location: Box<models::MatchesV2DataRoundEventLocation>,
    #[serde(rename = "victim_display_name")]
    pub victim_display_name: String,
    #[serde(rename = "victim_puuid")]
    pub victim_puuid: String,
    #[serde(rename = "victim_team")]
    pub victim_team: String,
}

impl MatchesV2DataKill {
    pub fn new(assistants: Vec<models::MatchesV2DataRoundPlayerStatsKillEventsAssistants>, damage_weapon_assets: models::MatchesV2DataRoundPlayerStatsKillEventsAssets, damage_weapon_id: String, kill_time_in_match: u64, kill_time_in_round: u64, killer_display_name: String, killer_puuid: String, killer_team: String, player_locations_on_kill: Vec<models::MatchesV2DataRoundPlayerLocationsOnEvent>, round: u32, secondary_fire_mode: bool, victim_death_location: models::MatchesV2DataRoundEventLocation, victim_display_name: String, victim_puuid: String, victim_team: String) -> MatchesV2DataKill {
        MatchesV2DataKill {
            assistants,
            damage_weapon_assets: Box::new(damage_weapon_assets),
            damage_weapon_id,
            damage_weapon_name: None,
            kill_time_in_match,
            kill_time_in_round,
            killer_display_name,
            killer_puuid,
            killer_team,
            player_locations_on_kill,
            round,
            secondary_fire_mode,
            victim_death_location: Box::new(victim_death_location),
            victim_display_name,
            victim_puuid,
            victim_team,
        }
    }
}

