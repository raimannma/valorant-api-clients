/*
 * HenrikDev API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatusIncidentUpdate {
    #[serde(rename = "author")]
    pub author: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "id")]
    pub id: u32,
    #[serde(rename = "publish")]
    pub publish: bool,
    #[serde(rename = "publish_locations")]
    pub publish_locations: Vec<String>,
    #[serde(rename = "translations")]
    pub translations: Vec<models::StatusIncidentContent>,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl StatusIncidentUpdate {
    pub fn new(author: String, created_at: String, id: u32, publish: bool, publish_locations: Vec<String>, translations: Vec<models::StatusIncidentContent>, updated_at: String) -> StatusIncidentUpdate {
        StatusIncidentUpdate {
            author,
            created_at,
            id,
            publish,
            publish_locations,
            translations,
            updated_at,
        }
    }
}

