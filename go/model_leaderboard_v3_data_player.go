/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LeaderboardV3DataPlayer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LeaderboardV3DataPlayer{}

// LeaderboardV3DataPlayer struct for LeaderboardV3DataPlayer
type LeaderboardV3DataPlayer struct {
	Card string `json:"card"`
	IsAnonymized bool `json:"is_anonymized"`
	IsBanned bool `json:"is_banned"`
	LeaderboardRank int32 `json:"leaderboard_rank"`
	Name string `json:"name"`
	Puuid NullableString `json:"puuid,omitempty"`
	Rr int32 `json:"rr"`
	Tag string `json:"tag"`
	Tier int32 `json:"tier"`
	Title string `json:"title"`
	UpdatedAt string `json:"updated_at"`
	Wins int32 `json:"wins"`
}

type _LeaderboardV3DataPlayer LeaderboardV3DataPlayer

// NewLeaderboardV3DataPlayer instantiates a new LeaderboardV3DataPlayer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLeaderboardV3DataPlayer(card string, isAnonymized bool, isBanned bool, leaderboardRank int32, name string, rr int32, tag string, tier int32, title string, updatedAt string, wins int32) *LeaderboardV3DataPlayer {
	this := LeaderboardV3DataPlayer{}
	this.Card = card
	this.IsAnonymized = isAnonymized
	this.IsBanned = isBanned
	this.LeaderboardRank = leaderboardRank
	this.Name = name
	this.Rr = rr
	this.Tag = tag
	this.Tier = tier
	this.Title = title
	this.UpdatedAt = updatedAt
	this.Wins = wins
	return &this
}

// NewLeaderboardV3DataPlayerWithDefaults instantiates a new LeaderboardV3DataPlayer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLeaderboardV3DataPlayerWithDefaults() *LeaderboardV3DataPlayer {
	this := LeaderboardV3DataPlayer{}
	return &this
}

// GetCard returns the Card field value
func (o *LeaderboardV3DataPlayer) GetCard() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Card
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetCardOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Card, true
}

// SetCard sets field value
func (o *LeaderboardV3DataPlayer) SetCard(v string) {
	o.Card = v
}

// GetIsAnonymized returns the IsAnonymized field value
func (o *LeaderboardV3DataPlayer) GetIsAnonymized() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAnonymized
}

// GetIsAnonymizedOk returns a tuple with the IsAnonymized field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetIsAnonymizedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAnonymized, true
}

// SetIsAnonymized sets field value
func (o *LeaderboardV3DataPlayer) SetIsAnonymized(v bool) {
	o.IsAnonymized = v
}

// GetIsBanned returns the IsBanned field value
func (o *LeaderboardV3DataPlayer) GetIsBanned() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBanned
}

// GetIsBannedOk returns a tuple with the IsBanned field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetIsBannedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBanned, true
}

// SetIsBanned sets field value
func (o *LeaderboardV3DataPlayer) SetIsBanned(v bool) {
	o.IsBanned = v
}

// GetLeaderboardRank returns the LeaderboardRank field value
func (o *LeaderboardV3DataPlayer) GetLeaderboardRank() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LeaderboardRank
}

// GetLeaderboardRankOk returns a tuple with the LeaderboardRank field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetLeaderboardRankOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LeaderboardRank, true
}

// SetLeaderboardRank sets field value
func (o *LeaderboardV3DataPlayer) SetLeaderboardRank(v int32) {
	o.LeaderboardRank = v
}

// GetName returns the Name field value
func (o *LeaderboardV3DataPlayer) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LeaderboardV3DataPlayer) SetName(v string) {
	o.Name = v
}

// GetPuuid returns the Puuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LeaderboardV3DataPlayer) GetPuuid() string {
	if o == nil || IsNil(o.Puuid.Get()) {
		var ret string
		return ret
	}
	return *o.Puuid.Get()
}

// GetPuuidOk returns a tuple with the Puuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LeaderboardV3DataPlayer) GetPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Puuid.Get(), o.Puuid.IsSet()
}

// HasPuuid returns a boolean if a field has been set.
func (o *LeaderboardV3DataPlayer) HasPuuid() bool {
	if o != nil && o.Puuid.IsSet() {
		return true
	}

	return false
}

// SetPuuid gets a reference to the given NullableString and assigns it to the Puuid field.
func (o *LeaderboardV3DataPlayer) SetPuuid(v string) {
	o.Puuid.Set(&v)
}
// SetPuuidNil sets the value for Puuid to be an explicit nil
func (o *LeaderboardV3DataPlayer) SetPuuidNil() {
	o.Puuid.Set(nil)
}

// UnsetPuuid ensures that no value is present for Puuid, not even an explicit nil
func (o *LeaderboardV3DataPlayer) UnsetPuuid() {
	o.Puuid.Unset()
}

// GetRr returns the Rr field value
func (o *LeaderboardV3DataPlayer) GetRr() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Rr
}

// GetRrOk returns a tuple with the Rr field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetRrOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rr, true
}

// SetRr sets field value
func (o *LeaderboardV3DataPlayer) SetRr(v int32) {
	o.Rr = v
}

// GetTag returns the Tag field value
func (o *LeaderboardV3DataPlayer) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *LeaderboardV3DataPlayer) SetTag(v string) {
	o.Tag = v
}

// GetTier returns the Tier field value
func (o *LeaderboardV3DataPlayer) GetTier() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Tier
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetTierOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tier, true
}

// SetTier sets field value
func (o *LeaderboardV3DataPlayer) SetTier(v int32) {
	o.Tier = v
}

// GetTitle returns the Title field value
func (o *LeaderboardV3DataPlayer) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *LeaderboardV3DataPlayer) SetTitle(v string) {
	o.Title = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *LeaderboardV3DataPlayer) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *LeaderboardV3DataPlayer) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetWins returns the Wins field value
func (o *LeaderboardV3DataPlayer) GetWins() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Wins
}

// GetWinsOk returns a tuple with the Wins field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV3DataPlayer) GetWinsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Wins, true
}

// SetWins sets field value
func (o *LeaderboardV3DataPlayer) SetWins(v int32) {
	o.Wins = v
}

func (o LeaderboardV3DataPlayer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LeaderboardV3DataPlayer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["card"] = o.Card
	toSerialize["is_anonymized"] = o.IsAnonymized
	toSerialize["is_banned"] = o.IsBanned
	toSerialize["leaderboard_rank"] = o.LeaderboardRank
	toSerialize["name"] = o.Name
	if o.Puuid.IsSet() {
		toSerialize["puuid"] = o.Puuid.Get()
	}
	toSerialize["rr"] = o.Rr
	toSerialize["tag"] = o.Tag
	toSerialize["tier"] = o.Tier
	toSerialize["title"] = o.Title
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["wins"] = o.Wins
	return toSerialize, nil
}

func (o *LeaderboardV3DataPlayer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"card",
		"is_anonymized",
		"is_banned",
		"leaderboard_rank",
		"name",
		"rr",
		"tag",
		"tier",
		"title",
		"updated_at",
		"wins",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLeaderboardV3DataPlayer := _LeaderboardV3DataPlayer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLeaderboardV3DataPlayer)

	if err != nil {
		return err
	}

	*o = LeaderboardV3DataPlayer(varLeaderboardV3DataPlayer)

	return err
}

type NullableLeaderboardV3DataPlayer struct {
	value *LeaderboardV3DataPlayer
	isSet bool
}

func (v NullableLeaderboardV3DataPlayer) Get() *LeaderboardV3DataPlayer {
	return v.value
}

func (v *NullableLeaderboardV3DataPlayer) Set(val *LeaderboardV3DataPlayer) {
	v.value = val
	v.isSet = true
}

func (v NullableLeaderboardV3DataPlayer) IsSet() bool {
	return v.isSet
}

func (v *NullableLeaderboardV3DataPlayer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeaderboardV3DataPlayer(val *LeaderboardV3DataPlayer) *NullableLeaderboardV3DataPlayer {
	return &NullableLeaderboardV3DataPlayer{value: val, isSet: true}
}

func (v NullableLeaderboardV3DataPlayer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeaderboardV3DataPlayer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


