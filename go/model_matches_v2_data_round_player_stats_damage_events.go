/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataRoundPlayerStatsDamageEvents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataRoundPlayerStatsDamageEvents{}

// MatchesV2DataRoundPlayerStatsDamageEvents struct for MatchesV2DataRoundPlayerStatsDamageEvents
type MatchesV2DataRoundPlayerStatsDamageEvents struct {
	Bodyshots int32 `json:"bodyshots"`
	Damage int32 `json:"damage"`
	Headshots int32 `json:"headshots"`
	Legshots int32 `json:"legshots"`
	ReceiverDisplayName string `json:"receiver_display_name"`
	ReceiverPuuid string `json:"receiver_puuid"`
	ReceiverTeam string `json:"receiver_team"`
}

type _MatchesV2DataRoundPlayerStatsDamageEvents MatchesV2DataRoundPlayerStatsDamageEvents

// NewMatchesV2DataRoundPlayerStatsDamageEvents instantiates a new MatchesV2DataRoundPlayerStatsDamageEvents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataRoundPlayerStatsDamageEvents(bodyshots int32, damage int32, headshots int32, legshots int32, receiverDisplayName string, receiverPuuid string, receiverTeam string) *MatchesV2DataRoundPlayerStatsDamageEvents {
	this := MatchesV2DataRoundPlayerStatsDamageEvents{}
	this.Bodyshots = bodyshots
	this.Damage = damage
	this.Headshots = headshots
	this.Legshots = legshots
	this.ReceiverDisplayName = receiverDisplayName
	this.ReceiverPuuid = receiverPuuid
	this.ReceiverTeam = receiverTeam
	return &this
}

// NewMatchesV2DataRoundPlayerStatsDamageEventsWithDefaults instantiates a new MatchesV2DataRoundPlayerStatsDamageEvents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataRoundPlayerStatsDamageEventsWithDefaults() *MatchesV2DataRoundPlayerStatsDamageEvents {
	this := MatchesV2DataRoundPlayerStatsDamageEvents{}
	return &this
}

// GetBodyshots returns the Bodyshots field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetBodyshots() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Bodyshots
}

// GetBodyshotsOk returns a tuple with the Bodyshots field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetBodyshotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bodyshots, true
}

// SetBodyshots sets field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) SetBodyshots(v int32) {
	o.Bodyshots = v
}

// GetDamage returns the Damage field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetDamage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Damage
}

// GetDamageOk returns a tuple with the Damage field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetDamageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Damage, true
}

// SetDamage sets field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) SetDamage(v int32) {
	o.Damage = v
}

// GetHeadshots returns the Headshots field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetHeadshots() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Headshots
}

// GetHeadshotsOk returns a tuple with the Headshots field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetHeadshotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Headshots, true
}

// SetHeadshots sets field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) SetHeadshots(v int32) {
	o.Headshots = v
}

// GetLegshots returns the Legshots field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetLegshots() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Legshots
}

// GetLegshotsOk returns a tuple with the Legshots field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetLegshotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Legshots, true
}

// SetLegshots sets field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) SetLegshots(v int32) {
	o.Legshots = v
}

// GetReceiverDisplayName returns the ReceiverDisplayName field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetReceiverDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiverDisplayName
}

// GetReceiverDisplayNameOk returns a tuple with the ReceiverDisplayName field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetReceiverDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiverDisplayName, true
}

// SetReceiverDisplayName sets field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) SetReceiverDisplayName(v string) {
	o.ReceiverDisplayName = v
}

// GetReceiverPuuid returns the ReceiverPuuid field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetReceiverPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiverPuuid
}

// GetReceiverPuuidOk returns a tuple with the ReceiverPuuid field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetReceiverPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiverPuuid, true
}

// SetReceiverPuuid sets field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) SetReceiverPuuid(v string) {
	o.ReceiverPuuid = v
}

// GetReceiverTeam returns the ReceiverTeam field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetReceiverTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiverTeam
}

// GetReceiverTeamOk returns a tuple with the ReceiverTeam field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) GetReceiverTeamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiverTeam, true
}

// SetReceiverTeam sets field value
func (o *MatchesV2DataRoundPlayerStatsDamageEvents) SetReceiverTeam(v string) {
	o.ReceiverTeam = v
}

func (o MatchesV2DataRoundPlayerStatsDamageEvents) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataRoundPlayerStatsDamageEvents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bodyshots"] = o.Bodyshots
	toSerialize["damage"] = o.Damage
	toSerialize["headshots"] = o.Headshots
	toSerialize["legshots"] = o.Legshots
	toSerialize["receiver_display_name"] = o.ReceiverDisplayName
	toSerialize["receiver_puuid"] = o.ReceiverPuuid
	toSerialize["receiver_team"] = o.ReceiverTeam
	return toSerialize, nil
}

func (o *MatchesV2DataRoundPlayerStatsDamageEvents) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bodyshots",
		"damage",
		"headshots",
		"legshots",
		"receiver_display_name",
		"receiver_puuid",
		"receiver_team",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataRoundPlayerStatsDamageEvents := _MatchesV2DataRoundPlayerStatsDamageEvents{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataRoundPlayerStatsDamageEvents)

	if err != nil {
		return err
	}

	*o = MatchesV2DataRoundPlayerStatsDamageEvents(varMatchesV2DataRoundPlayerStatsDamageEvents)

	return err
}

type NullableMatchesV2DataRoundPlayerStatsDamageEvents struct {
	value *MatchesV2DataRoundPlayerStatsDamageEvents
	isSet bool
}

func (v NullableMatchesV2DataRoundPlayerStatsDamageEvents) Get() *MatchesV2DataRoundPlayerStatsDamageEvents {
	return v.value
}

func (v *NullableMatchesV2DataRoundPlayerStatsDamageEvents) Set(val *MatchesV2DataRoundPlayerStatsDamageEvents) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataRoundPlayerStatsDamageEvents) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataRoundPlayerStatsDamageEvents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataRoundPlayerStatsDamageEvents(val *MatchesV2DataRoundPlayerStatsDamageEvents) *NullableMatchesV2DataRoundPlayerStatsDamageEvents {
	return &NullableMatchesV2DataRoundPlayerStatsDamageEvents{value: val, isSet: true}
}

func (v NullableMatchesV2DataRoundPlayerStatsDamageEvents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataRoundPlayerStatsDamageEvents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


