/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataTeamRoster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataTeamRoster{}

// MatchesV2DataTeamRoster struct for MatchesV2DataTeamRoster
type MatchesV2DataTeamRoster struct {
	Customization MatchesV2DataTeamRosterCustomization `json:"customization"`
	Id string `json:"id"`
	Members []string `json:"members"`
	Name string `json:"name"`
	Tag string `json:"tag"`
}

type _MatchesV2DataTeamRoster MatchesV2DataTeamRoster

// NewMatchesV2DataTeamRoster instantiates a new MatchesV2DataTeamRoster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataTeamRoster(customization MatchesV2DataTeamRosterCustomization, id string, members []string, name string, tag string) *MatchesV2DataTeamRoster {
	this := MatchesV2DataTeamRoster{}
	this.Customization = customization
	this.Id = id
	this.Members = members
	this.Name = name
	this.Tag = tag
	return &this
}

// NewMatchesV2DataTeamRosterWithDefaults instantiates a new MatchesV2DataTeamRoster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataTeamRosterWithDefaults() *MatchesV2DataTeamRoster {
	this := MatchesV2DataTeamRoster{}
	return &this
}

// GetCustomization returns the Customization field value
func (o *MatchesV2DataTeamRoster) GetCustomization() MatchesV2DataTeamRosterCustomization {
	if o == nil {
		var ret MatchesV2DataTeamRosterCustomization
		return ret
	}

	return o.Customization
}

// GetCustomizationOk returns a tuple with the Customization field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataTeamRoster) GetCustomizationOk() (*MatchesV2DataTeamRosterCustomization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customization, true
}

// SetCustomization sets field value
func (o *MatchesV2DataTeamRoster) SetCustomization(v MatchesV2DataTeamRosterCustomization) {
	o.Customization = v
}

// GetId returns the Id field value
func (o *MatchesV2DataTeamRoster) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataTeamRoster) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MatchesV2DataTeamRoster) SetId(v string) {
	o.Id = v
}

// GetMembers returns the Members field value
func (o *MatchesV2DataTeamRoster) GetMembers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataTeamRoster) GetMembersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Members, true
}

// SetMembers sets field value
func (o *MatchesV2DataTeamRoster) SetMembers(v []string) {
	o.Members = v
}

// GetName returns the Name field value
func (o *MatchesV2DataTeamRoster) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataTeamRoster) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MatchesV2DataTeamRoster) SetName(v string) {
	o.Name = v
}

// GetTag returns the Tag field value
func (o *MatchesV2DataTeamRoster) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataTeamRoster) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *MatchesV2DataTeamRoster) SetTag(v string) {
	o.Tag = v
}

func (o MatchesV2DataTeamRoster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataTeamRoster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customization"] = o.Customization
	toSerialize["id"] = o.Id
	toSerialize["members"] = o.Members
	toSerialize["name"] = o.Name
	toSerialize["tag"] = o.Tag
	return toSerialize, nil
}

func (o *MatchesV2DataTeamRoster) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customization",
		"id",
		"members",
		"name",
		"tag",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataTeamRoster := _MatchesV2DataTeamRoster{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataTeamRoster)

	if err != nil {
		return err
	}

	*o = MatchesV2DataTeamRoster(varMatchesV2DataTeamRoster)

	return err
}

type NullableMatchesV2DataTeamRoster struct {
	value *MatchesV2DataTeamRoster
	isSet bool
}

func (v NullableMatchesV2DataTeamRoster) Get() *MatchesV2DataTeamRoster {
	return v.value
}

func (v *NullableMatchesV2DataTeamRoster) Set(val *MatchesV2DataTeamRoster) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataTeamRoster) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataTeamRoster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataTeamRoster(val *MatchesV2DataTeamRoster) *NullableMatchesV2DataTeamRoster {
	return &NullableMatchesV2DataTeamRoster{value: val, isSet: true}
}

func (v NullableMatchesV2DataTeamRoster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataTeamRoster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


