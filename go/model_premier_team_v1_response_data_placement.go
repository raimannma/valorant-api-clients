/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PremierTeamV1ResponseDataPlacement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PremierTeamV1ResponseDataPlacement{}

// PremierTeamV1ResponseDataPlacement struct for PremierTeamV1ResponseDataPlacement
type PremierTeamV1ResponseDataPlacement struct {
	Conference string `json:"conference"`
	Division int32 `json:"division"`
	Place int32 `json:"place"`
	Points int32 `json:"points"`
}

type _PremierTeamV1ResponseDataPlacement PremierTeamV1ResponseDataPlacement

// NewPremierTeamV1ResponseDataPlacement instantiates a new PremierTeamV1ResponseDataPlacement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPremierTeamV1ResponseDataPlacement(conference string, division int32, place int32, points int32) *PremierTeamV1ResponseDataPlacement {
	this := PremierTeamV1ResponseDataPlacement{}
	this.Conference = conference
	this.Division = division
	this.Place = place
	this.Points = points
	return &this
}

// NewPremierTeamV1ResponseDataPlacementWithDefaults instantiates a new PremierTeamV1ResponseDataPlacement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPremierTeamV1ResponseDataPlacementWithDefaults() *PremierTeamV1ResponseDataPlacement {
	this := PremierTeamV1ResponseDataPlacement{}
	return &this
}

// GetConference returns the Conference field value
func (o *PremierTeamV1ResponseDataPlacement) GetConference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Conference
}

// GetConferenceOk returns a tuple with the Conference field value
// and a boolean to check if the value has been set.
func (o *PremierTeamV1ResponseDataPlacement) GetConferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conference, true
}

// SetConference sets field value
func (o *PremierTeamV1ResponseDataPlacement) SetConference(v string) {
	o.Conference = v
}

// GetDivision returns the Division field value
func (o *PremierTeamV1ResponseDataPlacement) GetDivision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Division
}

// GetDivisionOk returns a tuple with the Division field value
// and a boolean to check if the value has been set.
func (o *PremierTeamV1ResponseDataPlacement) GetDivisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Division, true
}

// SetDivision sets field value
func (o *PremierTeamV1ResponseDataPlacement) SetDivision(v int32) {
	o.Division = v
}

// GetPlace returns the Place field value
func (o *PremierTeamV1ResponseDataPlacement) GetPlace() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Place
}

// GetPlaceOk returns a tuple with the Place field value
// and a boolean to check if the value has been set.
func (o *PremierTeamV1ResponseDataPlacement) GetPlaceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Place, true
}

// SetPlace sets field value
func (o *PremierTeamV1ResponseDataPlacement) SetPlace(v int32) {
	o.Place = v
}

// GetPoints returns the Points field value
func (o *PremierTeamV1ResponseDataPlacement) GetPoints() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Points
}

// GetPointsOk returns a tuple with the Points field value
// and a boolean to check if the value has been set.
func (o *PremierTeamV1ResponseDataPlacement) GetPointsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Points, true
}

// SetPoints sets field value
func (o *PremierTeamV1ResponseDataPlacement) SetPoints(v int32) {
	o.Points = v
}

func (o PremierTeamV1ResponseDataPlacement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PremierTeamV1ResponseDataPlacement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["conference"] = o.Conference
	toSerialize["division"] = o.Division
	toSerialize["place"] = o.Place
	toSerialize["points"] = o.Points
	return toSerialize, nil
}

func (o *PremierTeamV1ResponseDataPlacement) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"conference",
		"division",
		"place",
		"points",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPremierTeamV1ResponseDataPlacement := _PremierTeamV1ResponseDataPlacement{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPremierTeamV1ResponseDataPlacement)

	if err != nil {
		return err
	}

	*o = PremierTeamV1ResponseDataPlacement(varPremierTeamV1ResponseDataPlacement)

	return err
}

type NullablePremierTeamV1ResponseDataPlacement struct {
	value *PremierTeamV1ResponseDataPlacement
	isSet bool
}

func (v NullablePremierTeamV1ResponseDataPlacement) Get() *PremierTeamV1ResponseDataPlacement {
	return v.value
}

func (v *NullablePremierTeamV1ResponseDataPlacement) Set(val *PremierTeamV1ResponseDataPlacement) {
	v.value = val
	v.isSet = true
}

func (v NullablePremierTeamV1ResponseDataPlacement) IsSet() bool {
	return v.isSet
}

func (v *NullablePremierTeamV1ResponseDataPlacement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePremierTeamV1ResponseDataPlacement(val *PremierTeamV1ResponseDataPlacement) *NullablePremierTeamV1ResponseDataPlacement {
	return &NullablePremierTeamV1ResponseDataPlacement{value: val, isSet: true}
}

func (v NullablePremierTeamV1ResponseDataPlacement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePremierTeamV1ResponseDataPlacement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


