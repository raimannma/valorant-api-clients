/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountV2Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountV2Response{}

// AccountV2Response struct for AccountV2Response
type AccountV2Response struct {
	Data AccountV2Data `json:"data"`
	Status int32 `json:"status"`
}

type _AccountV2Response AccountV2Response

// NewAccountV2Response instantiates a new AccountV2Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountV2Response(data AccountV2Data, status int32) *AccountV2Response {
	this := AccountV2Response{}
	this.Data = data
	this.Status = status
	return &this
}

// NewAccountV2ResponseWithDefaults instantiates a new AccountV2Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountV2ResponseWithDefaults() *AccountV2Response {
	this := AccountV2Response{}
	return &this
}

// GetData returns the Data field value
func (o *AccountV2Response) GetData() AccountV2Data {
	if o == nil {
		var ret AccountV2Data
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AccountV2Response) GetDataOk() (*AccountV2Data, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *AccountV2Response) SetData(v AccountV2Data) {
	o.Data = v
}

// GetStatus returns the Status field value
func (o *AccountV2Response) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AccountV2Response) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AccountV2Response) SetStatus(v int32) {
	o.Status = v
}

func (o AccountV2Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountV2Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *AccountV2Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountV2Response := _AccountV2Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountV2Response)

	if err != nil {
		return err
	}

	*o = AccountV2Response(varAccountV2Response)

	return err
}

type NullableAccountV2Response struct {
	value *AccountV2Response
	isSet bool
}

func (v NullableAccountV2Response) Get() *AccountV2Response {
	return v.value
}

func (v *NullableAccountV2Response) Set(val *AccountV2Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountV2Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountV2Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountV2Response(val *AccountV2Response) *NullableAccountV2Response {
	return &NullableAccountV2Response{value: val, isSet: true}
}

func (v NullableAccountV2Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountV2Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


