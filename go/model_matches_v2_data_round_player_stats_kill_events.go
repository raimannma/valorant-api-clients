/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataRoundPlayerStatsKillEvents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataRoundPlayerStatsKillEvents{}

// MatchesV2DataRoundPlayerStatsKillEvents struct for MatchesV2DataRoundPlayerStatsKillEvents
type MatchesV2DataRoundPlayerStatsKillEvents struct {
	Assistants []MatchesV2DataRoundPlayerStatsKillEventsAssistants `json:"assistants"`
	DamageWeaponAssets MatchesV2DataRoundPlayerStatsKillEventsAssets `json:"damage_weapon_assets"`
	DamageWeaponId string `json:"damage_weapon_id"`
	DamageWeaponName NullableString `json:"damage_weapon_name,omitempty"`
	KillTimeInMatch int64 `json:"kill_time_in_match"`
	KillTimeInRound int64 `json:"kill_time_in_round"`
	KillerDisplayName string `json:"killer_display_name"`
	KillerPuuid string `json:"killer_puuid"`
	KillerTeam string `json:"killer_team"`
	PlayerLocationsOnKill []MatchesV2DataRoundPlayerLocationsOnEvent `json:"player_locations_on_kill"`
	SecondaryFireMode bool `json:"secondary_fire_mode"`
	VictimDeathLocation MatchesV2DataRoundEventLocation `json:"victim_death_location"`
	VictimDisplayName string `json:"victim_display_name"`
	VictimPuuid string `json:"victim_puuid"`
	VictimTeam string `json:"victim_team"`
}

type _MatchesV2DataRoundPlayerStatsKillEvents MatchesV2DataRoundPlayerStatsKillEvents

// NewMatchesV2DataRoundPlayerStatsKillEvents instantiates a new MatchesV2DataRoundPlayerStatsKillEvents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataRoundPlayerStatsKillEvents(assistants []MatchesV2DataRoundPlayerStatsKillEventsAssistants, damageWeaponAssets MatchesV2DataRoundPlayerStatsKillEventsAssets, damageWeaponId string, killTimeInMatch int64, killTimeInRound int64, killerDisplayName string, killerPuuid string, killerTeam string, playerLocationsOnKill []MatchesV2DataRoundPlayerLocationsOnEvent, secondaryFireMode bool, victimDeathLocation MatchesV2DataRoundEventLocation, victimDisplayName string, victimPuuid string, victimTeam string) *MatchesV2DataRoundPlayerStatsKillEvents {
	this := MatchesV2DataRoundPlayerStatsKillEvents{}
	this.Assistants = assistants
	this.DamageWeaponAssets = damageWeaponAssets
	this.DamageWeaponId = damageWeaponId
	this.KillTimeInMatch = killTimeInMatch
	this.KillTimeInRound = killTimeInRound
	this.KillerDisplayName = killerDisplayName
	this.KillerPuuid = killerPuuid
	this.KillerTeam = killerTeam
	this.PlayerLocationsOnKill = playerLocationsOnKill
	this.SecondaryFireMode = secondaryFireMode
	this.VictimDeathLocation = victimDeathLocation
	this.VictimDisplayName = victimDisplayName
	this.VictimPuuid = victimPuuid
	this.VictimTeam = victimTeam
	return &this
}

// NewMatchesV2DataRoundPlayerStatsKillEventsWithDefaults instantiates a new MatchesV2DataRoundPlayerStatsKillEvents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataRoundPlayerStatsKillEventsWithDefaults() *MatchesV2DataRoundPlayerStatsKillEvents {
	this := MatchesV2DataRoundPlayerStatsKillEvents{}
	return &this
}

// GetAssistants returns the Assistants field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetAssistants() []MatchesV2DataRoundPlayerStatsKillEventsAssistants {
	if o == nil {
		var ret []MatchesV2DataRoundPlayerStatsKillEventsAssistants
		return ret
	}

	return o.Assistants
}

// GetAssistantsOk returns a tuple with the Assistants field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetAssistantsOk() ([]MatchesV2DataRoundPlayerStatsKillEventsAssistants, bool) {
	if o == nil {
		return nil, false
	}
	return o.Assistants, true
}

// SetAssistants sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetAssistants(v []MatchesV2DataRoundPlayerStatsKillEventsAssistants) {
	o.Assistants = v
}

// GetDamageWeaponAssets returns the DamageWeaponAssets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetDamageWeaponAssets() MatchesV2DataRoundPlayerStatsKillEventsAssets {
	if o == nil {
		var ret MatchesV2DataRoundPlayerStatsKillEventsAssets
		return ret
	}

	return o.DamageWeaponAssets
}

// GetDamageWeaponAssetsOk returns a tuple with the DamageWeaponAssets field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetDamageWeaponAssetsOk() (*MatchesV2DataRoundPlayerStatsKillEventsAssets, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DamageWeaponAssets, true
}

// SetDamageWeaponAssets sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetDamageWeaponAssets(v MatchesV2DataRoundPlayerStatsKillEventsAssets) {
	o.DamageWeaponAssets = v
}

// GetDamageWeaponId returns the DamageWeaponId field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetDamageWeaponId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DamageWeaponId
}

// GetDamageWeaponIdOk returns a tuple with the DamageWeaponId field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetDamageWeaponIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DamageWeaponId, true
}

// SetDamageWeaponId sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetDamageWeaponId(v string) {
	o.DamageWeaponId = v
}

// GetDamageWeaponName returns the DamageWeaponName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetDamageWeaponName() string {
	if o == nil || IsNil(o.DamageWeaponName.Get()) {
		var ret string
		return ret
	}
	return *o.DamageWeaponName.Get()
}

// GetDamageWeaponNameOk returns a tuple with the DamageWeaponName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetDamageWeaponNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DamageWeaponName.Get(), o.DamageWeaponName.IsSet()
}

// HasDamageWeaponName returns a boolean if a field has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) HasDamageWeaponName() bool {
	if o != nil && o.DamageWeaponName.IsSet() {
		return true
	}

	return false
}

// SetDamageWeaponName gets a reference to the given NullableString and assigns it to the DamageWeaponName field.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetDamageWeaponName(v string) {
	o.DamageWeaponName.Set(&v)
}
// SetDamageWeaponNameNil sets the value for DamageWeaponName to be an explicit nil
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetDamageWeaponNameNil() {
	o.DamageWeaponName.Set(nil)
}

// UnsetDamageWeaponName ensures that no value is present for DamageWeaponName, not even an explicit nil
func (o *MatchesV2DataRoundPlayerStatsKillEvents) UnsetDamageWeaponName() {
	o.DamageWeaponName.Unset()
}

// GetKillTimeInMatch returns the KillTimeInMatch field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillTimeInMatch() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.KillTimeInMatch
}

// GetKillTimeInMatchOk returns a tuple with the KillTimeInMatch field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillTimeInMatchOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KillTimeInMatch, true
}

// SetKillTimeInMatch sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetKillTimeInMatch(v int64) {
	o.KillTimeInMatch = v
}

// GetKillTimeInRound returns the KillTimeInRound field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillTimeInRound() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.KillTimeInRound
}

// GetKillTimeInRoundOk returns a tuple with the KillTimeInRound field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillTimeInRoundOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KillTimeInRound, true
}

// SetKillTimeInRound sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetKillTimeInRound(v int64) {
	o.KillTimeInRound = v
}

// GetKillerDisplayName returns the KillerDisplayName field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillerDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KillerDisplayName
}

// GetKillerDisplayNameOk returns a tuple with the KillerDisplayName field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillerDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KillerDisplayName, true
}

// SetKillerDisplayName sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetKillerDisplayName(v string) {
	o.KillerDisplayName = v
}

// GetKillerPuuid returns the KillerPuuid field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillerPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KillerPuuid
}

// GetKillerPuuidOk returns a tuple with the KillerPuuid field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillerPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KillerPuuid, true
}

// SetKillerPuuid sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetKillerPuuid(v string) {
	o.KillerPuuid = v
}

// GetKillerTeam returns the KillerTeam field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillerTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KillerTeam
}

// GetKillerTeamOk returns a tuple with the KillerTeam field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetKillerTeamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KillerTeam, true
}

// SetKillerTeam sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetKillerTeam(v string) {
	o.KillerTeam = v
}

// GetPlayerLocationsOnKill returns the PlayerLocationsOnKill field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetPlayerLocationsOnKill() []MatchesV2DataRoundPlayerLocationsOnEvent {
	if o == nil {
		var ret []MatchesV2DataRoundPlayerLocationsOnEvent
		return ret
	}

	return o.PlayerLocationsOnKill
}

// GetPlayerLocationsOnKillOk returns a tuple with the PlayerLocationsOnKill field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetPlayerLocationsOnKillOk() ([]MatchesV2DataRoundPlayerLocationsOnEvent, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlayerLocationsOnKill, true
}

// SetPlayerLocationsOnKill sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetPlayerLocationsOnKill(v []MatchesV2DataRoundPlayerLocationsOnEvent) {
	o.PlayerLocationsOnKill = v
}

// GetSecondaryFireMode returns the SecondaryFireMode field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetSecondaryFireMode() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SecondaryFireMode
}

// GetSecondaryFireModeOk returns a tuple with the SecondaryFireMode field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetSecondaryFireModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecondaryFireMode, true
}

// SetSecondaryFireMode sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetSecondaryFireMode(v bool) {
	o.SecondaryFireMode = v
}

// GetVictimDeathLocation returns the VictimDeathLocation field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetVictimDeathLocation() MatchesV2DataRoundEventLocation {
	if o == nil {
		var ret MatchesV2DataRoundEventLocation
		return ret
	}

	return o.VictimDeathLocation
}

// GetVictimDeathLocationOk returns a tuple with the VictimDeathLocation field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetVictimDeathLocationOk() (*MatchesV2DataRoundEventLocation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VictimDeathLocation, true
}

// SetVictimDeathLocation sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetVictimDeathLocation(v MatchesV2DataRoundEventLocation) {
	o.VictimDeathLocation = v
}

// GetVictimDisplayName returns the VictimDisplayName field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetVictimDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VictimDisplayName
}

// GetVictimDisplayNameOk returns a tuple with the VictimDisplayName field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetVictimDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VictimDisplayName, true
}

// SetVictimDisplayName sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetVictimDisplayName(v string) {
	o.VictimDisplayName = v
}

// GetVictimPuuid returns the VictimPuuid field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetVictimPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VictimPuuid
}

// GetVictimPuuidOk returns a tuple with the VictimPuuid field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetVictimPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VictimPuuid, true
}

// SetVictimPuuid sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetVictimPuuid(v string) {
	o.VictimPuuid = v
}

// GetVictimTeam returns the VictimTeam field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetVictimTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VictimTeam
}

// GetVictimTeamOk returns a tuple with the VictimTeam field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEvents) GetVictimTeamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VictimTeam, true
}

// SetVictimTeam sets field value
func (o *MatchesV2DataRoundPlayerStatsKillEvents) SetVictimTeam(v string) {
	o.VictimTeam = v
}

func (o MatchesV2DataRoundPlayerStatsKillEvents) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataRoundPlayerStatsKillEvents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assistants"] = o.Assistants
	toSerialize["damage_weapon_assets"] = o.DamageWeaponAssets
	toSerialize["damage_weapon_id"] = o.DamageWeaponId
	if o.DamageWeaponName.IsSet() {
		toSerialize["damage_weapon_name"] = o.DamageWeaponName.Get()
	}
	toSerialize["kill_time_in_match"] = o.KillTimeInMatch
	toSerialize["kill_time_in_round"] = o.KillTimeInRound
	toSerialize["killer_display_name"] = o.KillerDisplayName
	toSerialize["killer_puuid"] = o.KillerPuuid
	toSerialize["killer_team"] = o.KillerTeam
	toSerialize["player_locations_on_kill"] = o.PlayerLocationsOnKill
	toSerialize["secondary_fire_mode"] = o.SecondaryFireMode
	toSerialize["victim_death_location"] = o.VictimDeathLocation
	toSerialize["victim_display_name"] = o.VictimDisplayName
	toSerialize["victim_puuid"] = o.VictimPuuid
	toSerialize["victim_team"] = o.VictimTeam
	return toSerialize, nil
}

func (o *MatchesV2DataRoundPlayerStatsKillEvents) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"assistants",
		"damage_weapon_assets",
		"damage_weapon_id",
		"kill_time_in_match",
		"kill_time_in_round",
		"killer_display_name",
		"killer_puuid",
		"killer_team",
		"player_locations_on_kill",
		"secondary_fire_mode",
		"victim_death_location",
		"victim_display_name",
		"victim_puuid",
		"victim_team",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataRoundPlayerStatsKillEvents := _MatchesV2DataRoundPlayerStatsKillEvents{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataRoundPlayerStatsKillEvents)

	if err != nil {
		return err
	}

	*o = MatchesV2DataRoundPlayerStatsKillEvents(varMatchesV2DataRoundPlayerStatsKillEvents)

	return err
}

type NullableMatchesV2DataRoundPlayerStatsKillEvents struct {
	value *MatchesV2DataRoundPlayerStatsKillEvents
	isSet bool
}

func (v NullableMatchesV2DataRoundPlayerStatsKillEvents) Get() *MatchesV2DataRoundPlayerStatsKillEvents {
	return v.value
}

func (v *NullableMatchesV2DataRoundPlayerStatsKillEvents) Set(val *MatchesV2DataRoundPlayerStatsKillEvents) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataRoundPlayerStatsKillEvents) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataRoundPlayerStatsKillEvents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataRoundPlayerStatsKillEvents(val *MatchesV2DataRoundPlayerStatsKillEvents) *NullableMatchesV2DataRoundPlayerStatsKillEvents {
	return &NullableMatchesV2DataRoundPlayerStatsKillEvents{value: val, isSet: true}
}

func (v NullableMatchesV2DataRoundPlayerStatsKillEvents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataRoundPlayerStatsKillEvents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


