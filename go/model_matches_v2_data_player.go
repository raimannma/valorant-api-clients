/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataPlayer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataPlayer{}

// MatchesV2DataPlayer struct for MatchesV2DataPlayer
type MatchesV2DataPlayer struct {
	AbilityCasts MatchesV2DataPlayerAbilityCasts `json:"ability_casts"`
	Assets MatchesV2DataPlayerAssets `json:"assets"`
	Behavior MatchesV2DataPlayerBehavior `json:"behavior"`
	Character NullableString `json:"character,omitempty"`
	Currenttier int32 `json:"currenttier"`
	CurrenttierPatched string `json:"currenttier_patched"`
	DamageMade int32 `json:"damage_made"`
	DamageReceived int32 `json:"damage_received"`
	Economy MatchesV2DataPlayerEconomy `json:"economy"`
	Level int32 `json:"level"`
	Name string `json:"name"`
	PartyId string `json:"party_id"`
	Platform MatchesV2DataPlatform `json:"platform"`
	PlayerCard string `json:"player_card"`
	PlayerTitle string `json:"player_title"`
	Puuid string `json:"puuid"`
	SessionPlaytime MatchesV2DataPlayerSessionPlaytime `json:"session_playtime"`
	Stats MatchesV2DataPlayerStats `json:"stats"`
	Tag string `json:"tag"`
	Team string `json:"team"`
}

type _MatchesV2DataPlayer MatchesV2DataPlayer

// NewMatchesV2DataPlayer instantiates a new MatchesV2DataPlayer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataPlayer(abilityCasts MatchesV2DataPlayerAbilityCasts, assets MatchesV2DataPlayerAssets, behavior MatchesV2DataPlayerBehavior, currenttier int32, currenttierPatched string, damageMade int32, damageReceived int32, economy MatchesV2DataPlayerEconomy, level int32, name string, partyId string, platform MatchesV2DataPlatform, playerCard string, playerTitle string, puuid string, sessionPlaytime MatchesV2DataPlayerSessionPlaytime, stats MatchesV2DataPlayerStats, tag string, team string) *MatchesV2DataPlayer {
	this := MatchesV2DataPlayer{}
	this.AbilityCasts = abilityCasts
	this.Assets = assets
	this.Behavior = behavior
	this.Currenttier = currenttier
	this.CurrenttierPatched = currenttierPatched
	this.DamageMade = damageMade
	this.DamageReceived = damageReceived
	this.Economy = economy
	this.Level = level
	this.Name = name
	this.PartyId = partyId
	this.Platform = platform
	this.PlayerCard = playerCard
	this.PlayerTitle = playerTitle
	this.Puuid = puuid
	this.SessionPlaytime = sessionPlaytime
	this.Stats = stats
	this.Tag = tag
	this.Team = team
	return &this
}

// NewMatchesV2DataPlayerWithDefaults instantiates a new MatchesV2DataPlayer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataPlayerWithDefaults() *MatchesV2DataPlayer {
	this := MatchesV2DataPlayer{}
	return &this
}

// GetAbilityCasts returns the AbilityCasts field value
func (o *MatchesV2DataPlayer) GetAbilityCasts() MatchesV2DataPlayerAbilityCasts {
	if o == nil {
		var ret MatchesV2DataPlayerAbilityCasts
		return ret
	}

	return o.AbilityCasts
}

// GetAbilityCastsOk returns a tuple with the AbilityCasts field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetAbilityCastsOk() (*MatchesV2DataPlayerAbilityCasts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbilityCasts, true
}

// SetAbilityCasts sets field value
func (o *MatchesV2DataPlayer) SetAbilityCasts(v MatchesV2DataPlayerAbilityCasts) {
	o.AbilityCasts = v
}

// GetAssets returns the Assets field value
func (o *MatchesV2DataPlayer) GetAssets() MatchesV2DataPlayerAssets {
	if o == nil {
		var ret MatchesV2DataPlayerAssets
		return ret
	}

	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetAssetsOk() (*MatchesV2DataPlayerAssets, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assets, true
}

// SetAssets sets field value
func (o *MatchesV2DataPlayer) SetAssets(v MatchesV2DataPlayerAssets) {
	o.Assets = v
}

// GetBehavior returns the Behavior field value
func (o *MatchesV2DataPlayer) GetBehavior() MatchesV2DataPlayerBehavior {
	if o == nil {
		var ret MatchesV2DataPlayerBehavior
		return ret
	}

	return o.Behavior
}

// GetBehaviorOk returns a tuple with the Behavior field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetBehaviorOk() (*MatchesV2DataPlayerBehavior, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Behavior, true
}

// SetBehavior sets field value
func (o *MatchesV2DataPlayer) SetBehavior(v MatchesV2DataPlayerBehavior) {
	o.Behavior = v
}

// GetCharacter returns the Character field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataPlayer) GetCharacter() string {
	if o == nil || IsNil(o.Character.Get()) {
		var ret string
		return ret
	}
	return *o.Character.Get()
}

// GetCharacterOk returns a tuple with the Character field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataPlayer) GetCharacterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Character.Get(), o.Character.IsSet()
}

// HasCharacter returns a boolean if a field has been set.
func (o *MatchesV2DataPlayer) HasCharacter() bool {
	if o != nil && o.Character.IsSet() {
		return true
	}

	return false
}

// SetCharacter gets a reference to the given NullableString and assigns it to the Character field.
func (o *MatchesV2DataPlayer) SetCharacter(v string) {
	o.Character.Set(&v)
}
// SetCharacterNil sets the value for Character to be an explicit nil
func (o *MatchesV2DataPlayer) SetCharacterNil() {
	o.Character.Set(nil)
}

// UnsetCharacter ensures that no value is present for Character, not even an explicit nil
func (o *MatchesV2DataPlayer) UnsetCharacter() {
	o.Character.Unset()
}

// GetCurrenttier returns the Currenttier field value
func (o *MatchesV2DataPlayer) GetCurrenttier() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Currenttier
}

// GetCurrenttierOk returns a tuple with the Currenttier field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetCurrenttierOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currenttier, true
}

// SetCurrenttier sets field value
func (o *MatchesV2DataPlayer) SetCurrenttier(v int32) {
	o.Currenttier = v
}

// GetCurrenttierPatched returns the CurrenttierPatched field value
func (o *MatchesV2DataPlayer) GetCurrenttierPatched() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrenttierPatched
}

// GetCurrenttierPatchedOk returns a tuple with the CurrenttierPatched field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetCurrenttierPatchedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrenttierPatched, true
}

// SetCurrenttierPatched sets field value
func (o *MatchesV2DataPlayer) SetCurrenttierPatched(v string) {
	o.CurrenttierPatched = v
}

// GetDamageMade returns the DamageMade field value
func (o *MatchesV2DataPlayer) GetDamageMade() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DamageMade
}

// GetDamageMadeOk returns a tuple with the DamageMade field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetDamageMadeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DamageMade, true
}

// SetDamageMade sets field value
func (o *MatchesV2DataPlayer) SetDamageMade(v int32) {
	o.DamageMade = v
}

// GetDamageReceived returns the DamageReceived field value
func (o *MatchesV2DataPlayer) GetDamageReceived() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DamageReceived
}

// GetDamageReceivedOk returns a tuple with the DamageReceived field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetDamageReceivedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DamageReceived, true
}

// SetDamageReceived sets field value
func (o *MatchesV2DataPlayer) SetDamageReceived(v int32) {
	o.DamageReceived = v
}

// GetEconomy returns the Economy field value
func (o *MatchesV2DataPlayer) GetEconomy() MatchesV2DataPlayerEconomy {
	if o == nil {
		var ret MatchesV2DataPlayerEconomy
		return ret
	}

	return o.Economy
}

// GetEconomyOk returns a tuple with the Economy field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetEconomyOk() (*MatchesV2DataPlayerEconomy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Economy, true
}

// SetEconomy sets field value
func (o *MatchesV2DataPlayer) SetEconomy(v MatchesV2DataPlayerEconomy) {
	o.Economy = v
}

// GetLevel returns the Level field value
func (o *MatchesV2DataPlayer) GetLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *MatchesV2DataPlayer) SetLevel(v int32) {
	o.Level = v
}

// GetName returns the Name field value
func (o *MatchesV2DataPlayer) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MatchesV2DataPlayer) SetName(v string) {
	o.Name = v
}

// GetPartyId returns the PartyId field value
func (o *MatchesV2DataPlayer) GetPartyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetPartyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartyId, true
}

// SetPartyId sets field value
func (o *MatchesV2DataPlayer) SetPartyId(v string) {
	o.PartyId = v
}

// GetPlatform returns the Platform field value
func (o *MatchesV2DataPlayer) GetPlatform() MatchesV2DataPlatform {
	if o == nil {
		var ret MatchesV2DataPlatform
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetPlatformOk() (*MatchesV2DataPlatform, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *MatchesV2DataPlayer) SetPlatform(v MatchesV2DataPlatform) {
	o.Platform = v
}

// GetPlayerCard returns the PlayerCard field value
func (o *MatchesV2DataPlayer) GetPlayerCard() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerCard
}

// GetPlayerCardOk returns a tuple with the PlayerCard field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetPlayerCardOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerCard, true
}

// SetPlayerCard sets field value
func (o *MatchesV2DataPlayer) SetPlayerCard(v string) {
	o.PlayerCard = v
}

// GetPlayerTitle returns the PlayerTitle field value
func (o *MatchesV2DataPlayer) GetPlayerTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerTitle
}

// GetPlayerTitleOk returns a tuple with the PlayerTitle field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetPlayerTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerTitle, true
}

// SetPlayerTitle sets field value
func (o *MatchesV2DataPlayer) SetPlayerTitle(v string) {
	o.PlayerTitle = v
}

// GetPuuid returns the Puuid field value
func (o *MatchesV2DataPlayer) GetPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Puuid
}

// GetPuuidOk returns a tuple with the Puuid field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Puuid, true
}

// SetPuuid sets field value
func (o *MatchesV2DataPlayer) SetPuuid(v string) {
	o.Puuid = v
}

// GetSessionPlaytime returns the SessionPlaytime field value
func (o *MatchesV2DataPlayer) GetSessionPlaytime() MatchesV2DataPlayerSessionPlaytime {
	if o == nil {
		var ret MatchesV2DataPlayerSessionPlaytime
		return ret
	}

	return o.SessionPlaytime
}

// GetSessionPlaytimeOk returns a tuple with the SessionPlaytime field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetSessionPlaytimeOk() (*MatchesV2DataPlayerSessionPlaytime, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionPlaytime, true
}

// SetSessionPlaytime sets field value
func (o *MatchesV2DataPlayer) SetSessionPlaytime(v MatchesV2DataPlayerSessionPlaytime) {
	o.SessionPlaytime = v
}

// GetStats returns the Stats field value
func (o *MatchesV2DataPlayer) GetStats() MatchesV2DataPlayerStats {
	if o == nil {
		var ret MatchesV2DataPlayerStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetStatsOk() (*MatchesV2DataPlayerStats, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stats, true
}

// SetStats sets field value
func (o *MatchesV2DataPlayer) SetStats(v MatchesV2DataPlayerStats) {
	o.Stats = v
}

// GetTag returns the Tag field value
func (o *MatchesV2DataPlayer) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *MatchesV2DataPlayer) SetTag(v string) {
	o.Tag = v
}

// GetTeam returns the Team field value
func (o *MatchesV2DataPlayer) GetTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Team
}

// GetTeamOk returns a tuple with the Team field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayer) GetTeamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Team, true
}

// SetTeam sets field value
func (o *MatchesV2DataPlayer) SetTeam(v string) {
	o.Team = v
}

func (o MatchesV2DataPlayer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataPlayer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ability_casts"] = o.AbilityCasts
	toSerialize["assets"] = o.Assets
	toSerialize["behavior"] = o.Behavior
	if o.Character.IsSet() {
		toSerialize["character"] = o.Character.Get()
	}
	toSerialize["currenttier"] = o.Currenttier
	toSerialize["currenttier_patched"] = o.CurrenttierPatched
	toSerialize["damage_made"] = o.DamageMade
	toSerialize["damage_received"] = o.DamageReceived
	toSerialize["economy"] = o.Economy
	toSerialize["level"] = o.Level
	toSerialize["name"] = o.Name
	toSerialize["party_id"] = o.PartyId
	toSerialize["platform"] = o.Platform
	toSerialize["player_card"] = o.PlayerCard
	toSerialize["player_title"] = o.PlayerTitle
	toSerialize["puuid"] = o.Puuid
	toSerialize["session_playtime"] = o.SessionPlaytime
	toSerialize["stats"] = o.Stats
	toSerialize["tag"] = o.Tag
	toSerialize["team"] = o.Team
	return toSerialize, nil
}

func (o *MatchesV2DataPlayer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ability_casts",
		"assets",
		"behavior",
		"currenttier",
		"currenttier_patched",
		"damage_made",
		"damage_received",
		"economy",
		"level",
		"name",
		"party_id",
		"platform",
		"player_card",
		"player_title",
		"puuid",
		"session_playtime",
		"stats",
		"tag",
		"team",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataPlayer := _MatchesV2DataPlayer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataPlayer)

	if err != nil {
		return err
	}

	*o = MatchesV2DataPlayer(varMatchesV2DataPlayer)

	return err
}

type NullableMatchesV2DataPlayer struct {
	value *MatchesV2DataPlayer
	isSet bool
}

func (v NullableMatchesV2DataPlayer) Get() *MatchesV2DataPlayer {
	return v.value
}

func (v *NullableMatchesV2DataPlayer) Set(val *MatchesV2DataPlayer) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataPlayer) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataPlayer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataPlayer(val *MatchesV2DataPlayer) *NullableMatchesV2DataPlayer {
	return &NullableMatchesV2DataPlayer{value: val, isSet: true}
}

func (v NullableMatchesV2DataPlayer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataPlayer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


