/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountV2Data type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountV2Data{}

// AccountV2Data struct for AccountV2Data
type AccountV2Data struct {
	AccountLevel int32 `json:"account_level"`
	Card string `json:"card"`
	Name string `json:"name"`
	Platforms []string `json:"platforms"`
	Puuid string `json:"puuid"`
	Region string `json:"region"`
	Tag string `json:"tag"`
	Title string `json:"title"`
	UpdatedAt string `json:"updated_at"`
}

type _AccountV2Data AccountV2Data

// NewAccountV2Data instantiates a new AccountV2Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountV2Data(accountLevel int32, card string, name string, platforms []string, puuid string, region string, tag string, title string, updatedAt string) *AccountV2Data {
	this := AccountV2Data{}
	this.AccountLevel = accountLevel
	this.Card = card
	this.Name = name
	this.Platforms = platforms
	this.Puuid = puuid
	this.Region = region
	this.Tag = tag
	this.Title = title
	this.UpdatedAt = updatedAt
	return &this
}

// NewAccountV2DataWithDefaults instantiates a new AccountV2Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountV2DataWithDefaults() *AccountV2Data {
	this := AccountV2Data{}
	return &this
}

// GetAccountLevel returns the AccountLevel field value
func (o *AccountV2Data) GetAccountLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountLevel
}

// GetAccountLevelOk returns a tuple with the AccountLevel field value
// and a boolean to check if the value has been set.
func (o *AccountV2Data) GetAccountLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLevel, true
}

// SetAccountLevel sets field value
func (o *AccountV2Data) SetAccountLevel(v int32) {
	o.AccountLevel = v
}

// GetCard returns the Card field value
func (o *AccountV2Data) GetCard() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Card
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
func (o *AccountV2Data) GetCardOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Card, true
}

// SetCard sets field value
func (o *AccountV2Data) SetCard(v string) {
	o.Card = v
}

// GetName returns the Name field value
func (o *AccountV2Data) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccountV2Data) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccountV2Data) SetName(v string) {
	o.Name = v
}

// GetPlatforms returns the Platforms field value
func (o *AccountV2Data) GetPlatforms() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Platforms
}

// GetPlatformsOk returns a tuple with the Platforms field value
// and a boolean to check if the value has been set.
func (o *AccountV2Data) GetPlatformsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platforms, true
}

// SetPlatforms sets field value
func (o *AccountV2Data) SetPlatforms(v []string) {
	o.Platforms = v
}

// GetPuuid returns the Puuid field value
func (o *AccountV2Data) GetPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Puuid
}

// GetPuuidOk returns a tuple with the Puuid field value
// and a boolean to check if the value has been set.
func (o *AccountV2Data) GetPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Puuid, true
}

// SetPuuid sets field value
func (o *AccountV2Data) SetPuuid(v string) {
	o.Puuid = v
}

// GetRegion returns the Region field value
func (o *AccountV2Data) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AccountV2Data) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *AccountV2Data) SetRegion(v string) {
	o.Region = v
}

// GetTag returns the Tag field value
func (o *AccountV2Data) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *AccountV2Data) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *AccountV2Data) SetTag(v string) {
	o.Tag = v
}

// GetTitle returns the Title field value
func (o *AccountV2Data) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AccountV2Data) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AccountV2Data) SetTitle(v string) {
	o.Title = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AccountV2Data) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountV2Data) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AccountV2Data) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o AccountV2Data) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountV2Data) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_level"] = o.AccountLevel
	toSerialize["card"] = o.Card
	toSerialize["name"] = o.Name
	toSerialize["platforms"] = o.Platforms
	toSerialize["puuid"] = o.Puuid
	toSerialize["region"] = o.Region
	toSerialize["tag"] = o.Tag
	toSerialize["title"] = o.Title
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *AccountV2Data) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_level",
		"card",
		"name",
		"platforms",
		"puuid",
		"region",
		"tag",
		"title",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountV2Data := _AccountV2Data{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountV2Data)

	if err != nil {
		return err
	}

	*o = AccountV2Data(varAccountV2Data)

	return err
}

type NullableAccountV2Data struct {
	value *AccountV2Data
	isSet bool
}

func (v NullableAccountV2Data) Get() *AccountV2Data {
	return v.value
}

func (v *NullableAccountV2Data) Set(val *AccountV2Data) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountV2Data) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountV2Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountV2Data(val *AccountV2Data) *NullableAccountV2Data {
	return &NullableAccountV2Data{value: val, isSet: true}
}

func (v NullableAccountV2Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountV2Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


