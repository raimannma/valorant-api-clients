/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PremierTeamLiteResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PremierTeamLiteResponseData{}

// PremierTeamLiteResponseData struct for PremierTeamLiteResponseData
type PremierTeamLiteResponseData struct {
	Affinity string `json:"affinity"`
	Conference string `json:"conference"`
	Customization PremierTeamV1ResponseDataCustomization `json:"customization"`
	Division int32 `json:"division"`
	Id string `json:"id"`
	Losses int32 `json:"losses"`
	Name string `json:"name"`
	Ranking int32 `json:"ranking"`
	Region string `json:"region"`
	Score int32 `json:"score"`
	Tag string `json:"tag"`
	UpdatedAt string `json:"updated_at"`
	Wins int32 `json:"wins"`
}

type _PremierTeamLiteResponseData PremierTeamLiteResponseData

// NewPremierTeamLiteResponseData instantiates a new PremierTeamLiteResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPremierTeamLiteResponseData(affinity string, conference string, customization PremierTeamV1ResponseDataCustomization, division int32, id string, losses int32, name string, ranking int32, region string, score int32, tag string, updatedAt string, wins int32) *PremierTeamLiteResponseData {
	this := PremierTeamLiteResponseData{}
	this.Affinity = affinity
	this.Conference = conference
	this.Customization = customization
	this.Division = division
	this.Id = id
	this.Losses = losses
	this.Name = name
	this.Ranking = ranking
	this.Region = region
	this.Score = score
	this.Tag = tag
	this.UpdatedAt = updatedAt
	this.Wins = wins
	return &this
}

// NewPremierTeamLiteResponseDataWithDefaults instantiates a new PremierTeamLiteResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPremierTeamLiteResponseDataWithDefaults() *PremierTeamLiteResponseData {
	this := PremierTeamLiteResponseData{}
	return &this
}

// GetAffinity returns the Affinity field value
func (o *PremierTeamLiteResponseData) GetAffinity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Affinity
}

// GetAffinityOk returns a tuple with the Affinity field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetAffinityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Affinity, true
}

// SetAffinity sets field value
func (o *PremierTeamLiteResponseData) SetAffinity(v string) {
	o.Affinity = v
}

// GetConference returns the Conference field value
func (o *PremierTeamLiteResponseData) GetConference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Conference
}

// GetConferenceOk returns a tuple with the Conference field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetConferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conference, true
}

// SetConference sets field value
func (o *PremierTeamLiteResponseData) SetConference(v string) {
	o.Conference = v
}

// GetCustomization returns the Customization field value
func (o *PremierTeamLiteResponseData) GetCustomization() PremierTeamV1ResponseDataCustomization {
	if o == nil {
		var ret PremierTeamV1ResponseDataCustomization
		return ret
	}

	return o.Customization
}

// GetCustomizationOk returns a tuple with the Customization field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetCustomizationOk() (*PremierTeamV1ResponseDataCustomization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customization, true
}

// SetCustomization sets field value
func (o *PremierTeamLiteResponseData) SetCustomization(v PremierTeamV1ResponseDataCustomization) {
	o.Customization = v
}

// GetDivision returns the Division field value
func (o *PremierTeamLiteResponseData) GetDivision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Division
}

// GetDivisionOk returns a tuple with the Division field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetDivisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Division, true
}

// SetDivision sets field value
func (o *PremierTeamLiteResponseData) SetDivision(v int32) {
	o.Division = v
}

// GetId returns the Id field value
func (o *PremierTeamLiteResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PremierTeamLiteResponseData) SetId(v string) {
	o.Id = v
}

// GetLosses returns the Losses field value
func (o *PremierTeamLiteResponseData) GetLosses() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Losses
}

// GetLossesOk returns a tuple with the Losses field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetLossesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Losses, true
}

// SetLosses sets field value
func (o *PremierTeamLiteResponseData) SetLosses(v int32) {
	o.Losses = v
}

// GetName returns the Name field value
func (o *PremierTeamLiteResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PremierTeamLiteResponseData) SetName(v string) {
	o.Name = v
}

// GetRanking returns the Ranking field value
func (o *PremierTeamLiteResponseData) GetRanking() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Ranking
}

// GetRankingOk returns a tuple with the Ranking field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetRankingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ranking, true
}

// SetRanking sets field value
func (o *PremierTeamLiteResponseData) SetRanking(v int32) {
	o.Ranking = v
}

// GetRegion returns the Region field value
func (o *PremierTeamLiteResponseData) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *PremierTeamLiteResponseData) SetRegion(v string) {
	o.Region = v
}

// GetScore returns the Score field value
func (o *PremierTeamLiteResponseData) GetScore() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetScoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *PremierTeamLiteResponseData) SetScore(v int32) {
	o.Score = v
}

// GetTag returns the Tag field value
func (o *PremierTeamLiteResponseData) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *PremierTeamLiteResponseData) SetTag(v string) {
	o.Tag = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PremierTeamLiteResponseData) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PremierTeamLiteResponseData) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetWins returns the Wins field value
func (o *PremierTeamLiteResponseData) GetWins() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Wins
}

// GetWinsOk returns a tuple with the Wins field value
// and a boolean to check if the value has been set.
func (o *PremierTeamLiteResponseData) GetWinsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Wins, true
}

// SetWins sets field value
func (o *PremierTeamLiteResponseData) SetWins(v int32) {
	o.Wins = v
}

func (o PremierTeamLiteResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PremierTeamLiteResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["affinity"] = o.Affinity
	toSerialize["conference"] = o.Conference
	toSerialize["customization"] = o.Customization
	toSerialize["division"] = o.Division
	toSerialize["id"] = o.Id
	toSerialize["losses"] = o.Losses
	toSerialize["name"] = o.Name
	toSerialize["ranking"] = o.Ranking
	toSerialize["region"] = o.Region
	toSerialize["score"] = o.Score
	toSerialize["tag"] = o.Tag
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["wins"] = o.Wins
	return toSerialize, nil
}

func (o *PremierTeamLiteResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"affinity",
		"conference",
		"customization",
		"division",
		"id",
		"losses",
		"name",
		"ranking",
		"region",
		"score",
		"tag",
		"updated_at",
		"wins",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPremierTeamLiteResponseData := _PremierTeamLiteResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPremierTeamLiteResponseData)

	if err != nil {
		return err
	}

	*o = PremierTeamLiteResponseData(varPremierTeamLiteResponseData)

	return err
}

type NullablePremierTeamLiteResponseData struct {
	value *PremierTeamLiteResponseData
	isSet bool
}

func (v NullablePremierTeamLiteResponseData) Get() *PremierTeamLiteResponseData {
	return v.value
}

func (v *NullablePremierTeamLiteResponseData) Set(val *PremierTeamLiteResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullablePremierTeamLiteResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullablePremierTeamLiteResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePremierTeamLiteResponseData(val *PremierTeamLiteResponseData) *NullablePremierTeamLiteResponseData {
	return &NullablePremierTeamLiteResponseData{value: val, isSet: true}
}

func (v NullablePremierTeamLiteResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePremierTeamLiteResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


