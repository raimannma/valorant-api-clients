/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LeaderboardPVPPlayer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LeaderboardPVPPlayer{}

// LeaderboardPVPPlayer struct for LeaderboardPVPPlayer
type LeaderboardPVPPlayer struct {
	IsAnonymized bool `json:"IsAnonymized"`
	IsBanned bool `json:"IsBanned"`
	PlayerCardID string `json:"PlayerCardID"`
	TitleID string `json:"TitleID"`
	CompetitiveTier int32 `json:"competitiveTier"`
	GameName string `json:"gameName"`
	LeaderboardRank int32 `json:"leaderboardRank"`
	NumberOfWins int32 `json:"numberOfWins"`
	Puuid NullableString `json:"puuid,omitempty"`
	RankedRating int32 `json:"rankedRating"`
	TagLine string `json:"tagLine"`
}

type _LeaderboardPVPPlayer LeaderboardPVPPlayer

// NewLeaderboardPVPPlayer instantiates a new LeaderboardPVPPlayer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLeaderboardPVPPlayer(isAnonymized bool, isBanned bool, playerCardID string, titleID string, competitiveTier int32, gameName string, leaderboardRank int32, numberOfWins int32, rankedRating int32, tagLine string) *LeaderboardPVPPlayer {
	this := LeaderboardPVPPlayer{}
	this.IsAnonymized = isAnonymized
	this.IsBanned = isBanned
	this.PlayerCardID = playerCardID
	this.TitleID = titleID
	this.CompetitiveTier = competitiveTier
	this.GameName = gameName
	this.LeaderboardRank = leaderboardRank
	this.NumberOfWins = numberOfWins
	this.RankedRating = rankedRating
	this.TagLine = tagLine
	return &this
}

// NewLeaderboardPVPPlayerWithDefaults instantiates a new LeaderboardPVPPlayer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLeaderboardPVPPlayerWithDefaults() *LeaderboardPVPPlayer {
	this := LeaderboardPVPPlayer{}
	return &this
}

// GetIsAnonymized returns the IsAnonymized field value
func (o *LeaderboardPVPPlayer) GetIsAnonymized() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAnonymized
}

// GetIsAnonymizedOk returns a tuple with the IsAnonymized field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetIsAnonymizedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAnonymized, true
}

// SetIsAnonymized sets field value
func (o *LeaderboardPVPPlayer) SetIsAnonymized(v bool) {
	o.IsAnonymized = v
}

// GetIsBanned returns the IsBanned field value
func (o *LeaderboardPVPPlayer) GetIsBanned() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBanned
}

// GetIsBannedOk returns a tuple with the IsBanned field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetIsBannedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBanned, true
}

// SetIsBanned sets field value
func (o *LeaderboardPVPPlayer) SetIsBanned(v bool) {
	o.IsBanned = v
}

// GetPlayerCardID returns the PlayerCardID field value
func (o *LeaderboardPVPPlayer) GetPlayerCardID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerCardID
}

// GetPlayerCardIDOk returns a tuple with the PlayerCardID field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetPlayerCardIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerCardID, true
}

// SetPlayerCardID sets field value
func (o *LeaderboardPVPPlayer) SetPlayerCardID(v string) {
	o.PlayerCardID = v
}

// GetTitleID returns the TitleID field value
func (o *LeaderboardPVPPlayer) GetTitleID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TitleID
}

// GetTitleIDOk returns a tuple with the TitleID field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetTitleIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TitleID, true
}

// SetTitleID sets field value
func (o *LeaderboardPVPPlayer) SetTitleID(v string) {
	o.TitleID = v
}

// GetCompetitiveTier returns the CompetitiveTier field value
func (o *LeaderboardPVPPlayer) GetCompetitiveTier() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CompetitiveTier
}

// GetCompetitiveTierOk returns a tuple with the CompetitiveTier field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetCompetitiveTierOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompetitiveTier, true
}

// SetCompetitiveTier sets field value
func (o *LeaderboardPVPPlayer) SetCompetitiveTier(v int32) {
	o.CompetitiveTier = v
}

// GetGameName returns the GameName field value
func (o *LeaderboardPVPPlayer) GetGameName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GameName
}

// GetGameNameOk returns a tuple with the GameName field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetGameNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GameName, true
}

// SetGameName sets field value
func (o *LeaderboardPVPPlayer) SetGameName(v string) {
	o.GameName = v
}

// GetLeaderboardRank returns the LeaderboardRank field value
func (o *LeaderboardPVPPlayer) GetLeaderboardRank() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LeaderboardRank
}

// GetLeaderboardRankOk returns a tuple with the LeaderboardRank field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetLeaderboardRankOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LeaderboardRank, true
}

// SetLeaderboardRank sets field value
func (o *LeaderboardPVPPlayer) SetLeaderboardRank(v int32) {
	o.LeaderboardRank = v
}

// GetNumberOfWins returns the NumberOfWins field value
func (o *LeaderboardPVPPlayer) GetNumberOfWins() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberOfWins
}

// GetNumberOfWinsOk returns a tuple with the NumberOfWins field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetNumberOfWinsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberOfWins, true
}

// SetNumberOfWins sets field value
func (o *LeaderboardPVPPlayer) SetNumberOfWins(v int32) {
	o.NumberOfWins = v
}

// GetPuuid returns the Puuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LeaderboardPVPPlayer) GetPuuid() string {
	if o == nil || IsNil(o.Puuid.Get()) {
		var ret string
		return ret
	}
	return *o.Puuid.Get()
}

// GetPuuidOk returns a tuple with the Puuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LeaderboardPVPPlayer) GetPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Puuid.Get(), o.Puuid.IsSet()
}

// HasPuuid returns a boolean if a field has been set.
func (o *LeaderboardPVPPlayer) HasPuuid() bool {
	if o != nil && o.Puuid.IsSet() {
		return true
	}

	return false
}

// SetPuuid gets a reference to the given NullableString and assigns it to the Puuid field.
func (o *LeaderboardPVPPlayer) SetPuuid(v string) {
	o.Puuid.Set(&v)
}
// SetPuuidNil sets the value for Puuid to be an explicit nil
func (o *LeaderboardPVPPlayer) SetPuuidNil() {
	o.Puuid.Set(nil)
}

// UnsetPuuid ensures that no value is present for Puuid, not even an explicit nil
func (o *LeaderboardPVPPlayer) UnsetPuuid() {
	o.Puuid.Unset()
}

// GetRankedRating returns the RankedRating field value
func (o *LeaderboardPVPPlayer) GetRankedRating() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RankedRating
}

// GetRankedRatingOk returns a tuple with the RankedRating field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetRankedRatingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RankedRating, true
}

// SetRankedRating sets field value
func (o *LeaderboardPVPPlayer) SetRankedRating(v int32) {
	o.RankedRating = v
}

// GetTagLine returns the TagLine field value
func (o *LeaderboardPVPPlayer) GetTagLine() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagLine
}

// GetTagLineOk returns a tuple with the TagLine field value
// and a boolean to check if the value has been set.
func (o *LeaderboardPVPPlayer) GetTagLineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagLine, true
}

// SetTagLine sets field value
func (o *LeaderboardPVPPlayer) SetTagLine(v string) {
	o.TagLine = v
}

func (o LeaderboardPVPPlayer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LeaderboardPVPPlayer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["IsAnonymized"] = o.IsAnonymized
	toSerialize["IsBanned"] = o.IsBanned
	toSerialize["PlayerCardID"] = o.PlayerCardID
	toSerialize["TitleID"] = o.TitleID
	toSerialize["competitiveTier"] = o.CompetitiveTier
	toSerialize["gameName"] = o.GameName
	toSerialize["leaderboardRank"] = o.LeaderboardRank
	toSerialize["numberOfWins"] = o.NumberOfWins
	if o.Puuid.IsSet() {
		toSerialize["puuid"] = o.Puuid.Get()
	}
	toSerialize["rankedRating"] = o.RankedRating
	toSerialize["tagLine"] = o.TagLine
	return toSerialize, nil
}

func (o *LeaderboardPVPPlayer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"IsAnonymized",
		"IsBanned",
		"PlayerCardID",
		"TitleID",
		"competitiveTier",
		"gameName",
		"leaderboardRank",
		"numberOfWins",
		"rankedRating",
		"tagLine",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLeaderboardPVPPlayer := _LeaderboardPVPPlayer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLeaderboardPVPPlayer)

	if err != nil {
		return err
	}

	*o = LeaderboardPVPPlayer(varLeaderboardPVPPlayer)

	return err
}

type NullableLeaderboardPVPPlayer struct {
	value *LeaderboardPVPPlayer
	isSet bool
}

func (v NullableLeaderboardPVPPlayer) Get() *LeaderboardPVPPlayer {
	return v.value
}

func (v *NullableLeaderboardPVPPlayer) Set(val *LeaderboardPVPPlayer) {
	v.value = val
	v.isSet = true
}

func (v NullableLeaderboardPVPPlayer) IsSet() bool {
	return v.isSet
}

func (v *NullableLeaderboardPVPPlayer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeaderboardPVPPlayer(val *LeaderboardPVPPlayer) *NullableLeaderboardPVPPlayer {
	return &NullableLeaderboardPVPPlayer{value: val, isSet: true}
}

func (v NullableLeaderboardPVPPlayer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeaderboardPVPPlayer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


