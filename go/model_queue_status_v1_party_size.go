/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QueueStatusV1PartySize type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueueStatusV1PartySize{}

// QueueStatusV1PartySize struct for QueueStatusV1PartySize
type QueueStatusV1PartySize struct {
	FullPartyBypass bool `json:"full_party_bypass"`
	Invalid []int32 `json:"invalid"`
	Max int32 `json:"max"`
	Min int32 `json:"min"`
}

type _QueueStatusV1PartySize QueueStatusV1PartySize

// NewQueueStatusV1PartySize instantiates a new QueueStatusV1PartySize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueueStatusV1PartySize(fullPartyBypass bool, invalid []int32, max int32, min int32) *QueueStatusV1PartySize {
	this := QueueStatusV1PartySize{}
	this.FullPartyBypass = fullPartyBypass
	this.Invalid = invalid
	this.Max = max
	this.Min = min
	return &this
}

// NewQueueStatusV1PartySizeWithDefaults instantiates a new QueueStatusV1PartySize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueueStatusV1PartySizeWithDefaults() *QueueStatusV1PartySize {
	this := QueueStatusV1PartySize{}
	return &this
}

// GetFullPartyBypass returns the FullPartyBypass field value
func (o *QueueStatusV1PartySize) GetFullPartyBypass() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FullPartyBypass
}

// GetFullPartyBypassOk returns a tuple with the FullPartyBypass field value
// and a boolean to check if the value has been set.
func (o *QueueStatusV1PartySize) GetFullPartyBypassOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullPartyBypass, true
}

// SetFullPartyBypass sets field value
func (o *QueueStatusV1PartySize) SetFullPartyBypass(v bool) {
	o.FullPartyBypass = v
}

// GetInvalid returns the Invalid field value
func (o *QueueStatusV1PartySize) GetInvalid() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Invalid
}

// GetInvalidOk returns a tuple with the Invalid field value
// and a boolean to check if the value has been set.
func (o *QueueStatusV1PartySize) GetInvalidOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Invalid, true
}

// SetInvalid sets field value
func (o *QueueStatusV1PartySize) SetInvalid(v []int32) {
	o.Invalid = v
}

// GetMax returns the Max field value
func (o *QueueStatusV1PartySize) GetMax() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Max
}

// GetMaxOk returns a tuple with the Max field value
// and a boolean to check if the value has been set.
func (o *QueueStatusV1PartySize) GetMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Max, true
}

// SetMax sets field value
func (o *QueueStatusV1PartySize) SetMax(v int32) {
	o.Max = v
}

// GetMin returns the Min field value
func (o *QueueStatusV1PartySize) GetMin() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Min
}

// GetMinOk returns a tuple with the Min field value
// and a boolean to check if the value has been set.
func (o *QueueStatusV1PartySize) GetMinOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Min, true
}

// SetMin sets field value
func (o *QueueStatusV1PartySize) SetMin(v int32) {
	o.Min = v
}

func (o QueueStatusV1PartySize) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueueStatusV1PartySize) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["full_party_bypass"] = o.FullPartyBypass
	toSerialize["invalid"] = o.Invalid
	toSerialize["max"] = o.Max
	toSerialize["min"] = o.Min
	return toSerialize, nil
}

func (o *QueueStatusV1PartySize) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"full_party_bypass",
		"invalid",
		"max",
		"min",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueueStatusV1PartySize := _QueueStatusV1PartySize{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueueStatusV1PartySize)

	if err != nil {
		return err
	}

	*o = QueueStatusV1PartySize(varQueueStatusV1PartySize)

	return err
}

type NullableQueueStatusV1PartySize struct {
	value *QueueStatusV1PartySize
	isSet bool
}

func (v NullableQueueStatusV1PartySize) Get() *QueueStatusV1PartySize {
	return v.value
}

func (v *NullableQueueStatusV1PartySize) Set(val *QueueStatusV1PartySize) {
	v.value = val
	v.isSet = true
}

func (v NullableQueueStatusV1PartySize) IsSet() bool {
	return v.isSet
}

func (v *NullableQueueStatusV1PartySize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueueStatusV1PartySize(val *QueueStatusV1PartySize) *NullableQueueStatusV1PartySize {
	return &NullableQueueStatusV1PartySize{value: val, isSet: true}
}

func (v NullableQueueStatusV1PartySize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueueStatusV1PartySize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


