/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
)

// checks if the MatchesV2DataRoundPlayerStatsKillEventsAssets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataRoundPlayerStatsKillEventsAssets{}

// MatchesV2DataRoundPlayerStatsKillEventsAssets struct for MatchesV2DataRoundPlayerStatsKillEventsAssets
type MatchesV2DataRoundPlayerStatsKillEventsAssets struct {
	DisplayIcon NullableString `json:"display_icon,omitempty"`
	KillfeedIcon NullableString `json:"killfeed_icon,omitempty"`
}

// NewMatchesV2DataRoundPlayerStatsKillEventsAssets instantiates a new MatchesV2DataRoundPlayerStatsKillEventsAssets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataRoundPlayerStatsKillEventsAssets() *MatchesV2DataRoundPlayerStatsKillEventsAssets {
	this := MatchesV2DataRoundPlayerStatsKillEventsAssets{}
	return &this
}

// NewMatchesV2DataRoundPlayerStatsKillEventsAssetsWithDefaults instantiates a new MatchesV2DataRoundPlayerStatsKillEventsAssets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataRoundPlayerStatsKillEventsAssetsWithDefaults() *MatchesV2DataRoundPlayerStatsKillEventsAssets {
	this := MatchesV2DataRoundPlayerStatsKillEventsAssets{}
	return &this
}

// GetDisplayIcon returns the DisplayIcon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) GetDisplayIcon() string {
	if o == nil || IsNil(o.DisplayIcon.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayIcon.Get()
}

// GetDisplayIconOk returns a tuple with the DisplayIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) GetDisplayIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayIcon.Get(), o.DisplayIcon.IsSet()
}

// HasDisplayIcon returns a boolean if a field has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) HasDisplayIcon() bool {
	if o != nil && o.DisplayIcon.IsSet() {
		return true
	}

	return false
}

// SetDisplayIcon gets a reference to the given NullableString and assigns it to the DisplayIcon field.
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) SetDisplayIcon(v string) {
	o.DisplayIcon.Set(&v)
}
// SetDisplayIconNil sets the value for DisplayIcon to be an explicit nil
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) SetDisplayIconNil() {
	o.DisplayIcon.Set(nil)
}

// UnsetDisplayIcon ensures that no value is present for DisplayIcon, not even an explicit nil
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) UnsetDisplayIcon() {
	o.DisplayIcon.Unset()
}

// GetKillfeedIcon returns the KillfeedIcon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) GetKillfeedIcon() string {
	if o == nil || IsNil(o.KillfeedIcon.Get()) {
		var ret string
		return ret
	}
	return *o.KillfeedIcon.Get()
}

// GetKillfeedIconOk returns a tuple with the KillfeedIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) GetKillfeedIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KillfeedIcon.Get(), o.KillfeedIcon.IsSet()
}

// HasKillfeedIcon returns a boolean if a field has been set.
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) HasKillfeedIcon() bool {
	if o != nil && o.KillfeedIcon.IsSet() {
		return true
	}

	return false
}

// SetKillfeedIcon gets a reference to the given NullableString and assigns it to the KillfeedIcon field.
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) SetKillfeedIcon(v string) {
	o.KillfeedIcon.Set(&v)
}
// SetKillfeedIconNil sets the value for KillfeedIcon to be an explicit nil
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) SetKillfeedIconNil() {
	o.KillfeedIcon.Set(nil)
}

// UnsetKillfeedIcon ensures that no value is present for KillfeedIcon, not even an explicit nil
func (o *MatchesV2DataRoundPlayerStatsKillEventsAssets) UnsetKillfeedIcon() {
	o.KillfeedIcon.Unset()
}

func (o MatchesV2DataRoundPlayerStatsKillEventsAssets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataRoundPlayerStatsKillEventsAssets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayIcon.IsSet() {
		toSerialize["display_icon"] = o.DisplayIcon.Get()
	}
	if o.KillfeedIcon.IsSet() {
		toSerialize["killfeed_icon"] = o.KillfeedIcon.Get()
	}
	return toSerialize, nil
}

type NullableMatchesV2DataRoundPlayerStatsKillEventsAssets struct {
	value *MatchesV2DataRoundPlayerStatsKillEventsAssets
	isSet bool
}

func (v NullableMatchesV2DataRoundPlayerStatsKillEventsAssets) Get() *MatchesV2DataRoundPlayerStatsKillEventsAssets {
	return v.value
}

func (v *NullableMatchesV2DataRoundPlayerStatsKillEventsAssets) Set(val *MatchesV2DataRoundPlayerStatsKillEventsAssets) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataRoundPlayerStatsKillEventsAssets) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataRoundPlayerStatsKillEventsAssets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataRoundPlayerStatsKillEventsAssets(val *MatchesV2DataRoundPlayerStatsKillEventsAssets) *NullableMatchesV2DataRoundPlayerStatsKillEventsAssets {
	return &NullableMatchesV2DataRoundPlayerStatsKillEventsAssets{value: val, isSet: true}
}

func (v NullableMatchesV2DataRoundPlayerStatsKillEventsAssets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataRoundPlayerStatsKillEventsAssets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


