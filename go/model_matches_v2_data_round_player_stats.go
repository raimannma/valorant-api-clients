/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataRoundPlayerStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataRoundPlayerStats{}

// MatchesV2DataRoundPlayerStats struct for MatchesV2DataRoundPlayerStats
type MatchesV2DataRoundPlayerStats struct {
	AbilityCasts MatchesV2DataRoundPlayerStatsAbilityCasts `json:"ability_casts"`
	Bodyshots int32 `json:"bodyshots"`
	Damage int32 `json:"damage"`
	DamageEvents []MatchesV2DataRoundPlayerStatsDamageEvents `json:"damage_events"`
	Economy MatchesV2DataRoundPlayerStatsEconomy `json:"economy"`
	Headshots int32 `json:"headshots"`
	KillEvents []MatchesV2DataRoundPlayerStatsKillEvents `json:"kill_events"`
	Kills int32 `json:"kills"`
	Legshots int32 `json:"legshots"`
	PlayerDisplayName string `json:"player_display_name"`
	PlayerPuuid string `json:"player_puuid"`
	PlayerTeam string `json:"player_team"`
	Score int32 `json:"score"`
	StayedInSpawn bool `json:"stayed_in_spawn"`
	WasAfk bool `json:"was_afk"`
	WasPenalized bool `json:"was_penalized"`
}

type _MatchesV2DataRoundPlayerStats MatchesV2DataRoundPlayerStats

// NewMatchesV2DataRoundPlayerStats instantiates a new MatchesV2DataRoundPlayerStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataRoundPlayerStats(abilityCasts MatchesV2DataRoundPlayerStatsAbilityCasts, bodyshots int32, damage int32, damageEvents []MatchesV2DataRoundPlayerStatsDamageEvents, economy MatchesV2DataRoundPlayerStatsEconomy, headshots int32, killEvents []MatchesV2DataRoundPlayerStatsKillEvents, kills int32, legshots int32, playerDisplayName string, playerPuuid string, playerTeam string, score int32, stayedInSpawn bool, wasAfk bool, wasPenalized bool) *MatchesV2DataRoundPlayerStats {
	this := MatchesV2DataRoundPlayerStats{}
	this.AbilityCasts = abilityCasts
	this.Bodyshots = bodyshots
	this.Damage = damage
	this.DamageEvents = damageEvents
	this.Economy = economy
	this.Headshots = headshots
	this.KillEvents = killEvents
	this.Kills = kills
	this.Legshots = legshots
	this.PlayerDisplayName = playerDisplayName
	this.PlayerPuuid = playerPuuid
	this.PlayerTeam = playerTeam
	this.Score = score
	this.StayedInSpawn = stayedInSpawn
	this.WasAfk = wasAfk
	this.WasPenalized = wasPenalized
	return &this
}

// NewMatchesV2DataRoundPlayerStatsWithDefaults instantiates a new MatchesV2DataRoundPlayerStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataRoundPlayerStatsWithDefaults() *MatchesV2DataRoundPlayerStats {
	this := MatchesV2DataRoundPlayerStats{}
	return &this
}

// GetAbilityCasts returns the AbilityCasts field value
func (o *MatchesV2DataRoundPlayerStats) GetAbilityCasts() MatchesV2DataRoundPlayerStatsAbilityCasts {
	if o == nil {
		var ret MatchesV2DataRoundPlayerStatsAbilityCasts
		return ret
	}

	return o.AbilityCasts
}

// GetAbilityCastsOk returns a tuple with the AbilityCasts field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetAbilityCastsOk() (*MatchesV2DataRoundPlayerStatsAbilityCasts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbilityCasts, true
}

// SetAbilityCasts sets field value
func (o *MatchesV2DataRoundPlayerStats) SetAbilityCasts(v MatchesV2DataRoundPlayerStatsAbilityCasts) {
	o.AbilityCasts = v
}

// GetBodyshots returns the Bodyshots field value
func (o *MatchesV2DataRoundPlayerStats) GetBodyshots() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Bodyshots
}

// GetBodyshotsOk returns a tuple with the Bodyshots field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetBodyshotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bodyshots, true
}

// SetBodyshots sets field value
func (o *MatchesV2DataRoundPlayerStats) SetBodyshots(v int32) {
	o.Bodyshots = v
}

// GetDamage returns the Damage field value
func (o *MatchesV2DataRoundPlayerStats) GetDamage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Damage
}

// GetDamageOk returns a tuple with the Damage field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetDamageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Damage, true
}

// SetDamage sets field value
func (o *MatchesV2DataRoundPlayerStats) SetDamage(v int32) {
	o.Damage = v
}

// GetDamageEvents returns the DamageEvents field value
func (o *MatchesV2DataRoundPlayerStats) GetDamageEvents() []MatchesV2DataRoundPlayerStatsDamageEvents {
	if o == nil {
		var ret []MatchesV2DataRoundPlayerStatsDamageEvents
		return ret
	}

	return o.DamageEvents
}

// GetDamageEventsOk returns a tuple with the DamageEvents field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetDamageEventsOk() ([]MatchesV2DataRoundPlayerStatsDamageEvents, bool) {
	if o == nil {
		return nil, false
	}
	return o.DamageEvents, true
}

// SetDamageEvents sets field value
func (o *MatchesV2DataRoundPlayerStats) SetDamageEvents(v []MatchesV2DataRoundPlayerStatsDamageEvents) {
	o.DamageEvents = v
}

// GetEconomy returns the Economy field value
func (o *MatchesV2DataRoundPlayerStats) GetEconomy() MatchesV2DataRoundPlayerStatsEconomy {
	if o == nil {
		var ret MatchesV2DataRoundPlayerStatsEconomy
		return ret
	}

	return o.Economy
}

// GetEconomyOk returns a tuple with the Economy field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetEconomyOk() (*MatchesV2DataRoundPlayerStatsEconomy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Economy, true
}

// SetEconomy sets field value
func (o *MatchesV2DataRoundPlayerStats) SetEconomy(v MatchesV2DataRoundPlayerStatsEconomy) {
	o.Economy = v
}

// GetHeadshots returns the Headshots field value
func (o *MatchesV2DataRoundPlayerStats) GetHeadshots() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Headshots
}

// GetHeadshotsOk returns a tuple with the Headshots field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetHeadshotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Headshots, true
}

// SetHeadshots sets field value
func (o *MatchesV2DataRoundPlayerStats) SetHeadshots(v int32) {
	o.Headshots = v
}

// GetKillEvents returns the KillEvents field value
func (o *MatchesV2DataRoundPlayerStats) GetKillEvents() []MatchesV2DataRoundPlayerStatsKillEvents {
	if o == nil {
		var ret []MatchesV2DataRoundPlayerStatsKillEvents
		return ret
	}

	return o.KillEvents
}

// GetKillEventsOk returns a tuple with the KillEvents field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetKillEventsOk() ([]MatchesV2DataRoundPlayerStatsKillEvents, bool) {
	if o == nil {
		return nil, false
	}
	return o.KillEvents, true
}

// SetKillEvents sets field value
func (o *MatchesV2DataRoundPlayerStats) SetKillEvents(v []MatchesV2DataRoundPlayerStatsKillEvents) {
	o.KillEvents = v
}

// GetKills returns the Kills field value
func (o *MatchesV2DataRoundPlayerStats) GetKills() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Kills
}

// GetKillsOk returns a tuple with the Kills field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetKillsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kills, true
}

// SetKills sets field value
func (o *MatchesV2DataRoundPlayerStats) SetKills(v int32) {
	o.Kills = v
}

// GetLegshots returns the Legshots field value
func (o *MatchesV2DataRoundPlayerStats) GetLegshots() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Legshots
}

// GetLegshotsOk returns a tuple with the Legshots field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetLegshotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Legshots, true
}

// SetLegshots sets field value
func (o *MatchesV2DataRoundPlayerStats) SetLegshots(v int32) {
	o.Legshots = v
}

// GetPlayerDisplayName returns the PlayerDisplayName field value
func (o *MatchesV2DataRoundPlayerStats) GetPlayerDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerDisplayName
}

// GetPlayerDisplayNameOk returns a tuple with the PlayerDisplayName field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetPlayerDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerDisplayName, true
}

// SetPlayerDisplayName sets field value
func (o *MatchesV2DataRoundPlayerStats) SetPlayerDisplayName(v string) {
	o.PlayerDisplayName = v
}

// GetPlayerPuuid returns the PlayerPuuid field value
func (o *MatchesV2DataRoundPlayerStats) GetPlayerPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerPuuid
}

// GetPlayerPuuidOk returns a tuple with the PlayerPuuid field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetPlayerPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerPuuid, true
}

// SetPlayerPuuid sets field value
func (o *MatchesV2DataRoundPlayerStats) SetPlayerPuuid(v string) {
	o.PlayerPuuid = v
}

// GetPlayerTeam returns the PlayerTeam field value
func (o *MatchesV2DataRoundPlayerStats) GetPlayerTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerTeam
}

// GetPlayerTeamOk returns a tuple with the PlayerTeam field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetPlayerTeamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerTeam, true
}

// SetPlayerTeam sets field value
func (o *MatchesV2DataRoundPlayerStats) SetPlayerTeam(v string) {
	o.PlayerTeam = v
}

// GetScore returns the Score field value
func (o *MatchesV2DataRoundPlayerStats) GetScore() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetScoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *MatchesV2DataRoundPlayerStats) SetScore(v int32) {
	o.Score = v
}

// GetStayedInSpawn returns the StayedInSpawn field value
func (o *MatchesV2DataRoundPlayerStats) GetStayedInSpawn() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.StayedInSpawn
}

// GetStayedInSpawnOk returns a tuple with the StayedInSpawn field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetStayedInSpawnOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StayedInSpawn, true
}

// SetStayedInSpawn sets field value
func (o *MatchesV2DataRoundPlayerStats) SetStayedInSpawn(v bool) {
	o.StayedInSpawn = v
}

// GetWasAfk returns the WasAfk field value
func (o *MatchesV2DataRoundPlayerStats) GetWasAfk() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WasAfk
}

// GetWasAfkOk returns a tuple with the WasAfk field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetWasAfkOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WasAfk, true
}

// SetWasAfk sets field value
func (o *MatchesV2DataRoundPlayerStats) SetWasAfk(v bool) {
	o.WasAfk = v
}

// GetWasPenalized returns the WasPenalized field value
func (o *MatchesV2DataRoundPlayerStats) GetWasPenalized() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WasPenalized
}

// GetWasPenalizedOk returns a tuple with the WasPenalized field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataRoundPlayerStats) GetWasPenalizedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WasPenalized, true
}

// SetWasPenalized sets field value
func (o *MatchesV2DataRoundPlayerStats) SetWasPenalized(v bool) {
	o.WasPenalized = v
}

func (o MatchesV2DataRoundPlayerStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataRoundPlayerStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ability_casts"] = o.AbilityCasts
	toSerialize["bodyshots"] = o.Bodyshots
	toSerialize["damage"] = o.Damage
	toSerialize["damage_events"] = o.DamageEvents
	toSerialize["economy"] = o.Economy
	toSerialize["headshots"] = o.Headshots
	toSerialize["kill_events"] = o.KillEvents
	toSerialize["kills"] = o.Kills
	toSerialize["legshots"] = o.Legshots
	toSerialize["player_display_name"] = o.PlayerDisplayName
	toSerialize["player_puuid"] = o.PlayerPuuid
	toSerialize["player_team"] = o.PlayerTeam
	toSerialize["score"] = o.Score
	toSerialize["stayed_in_spawn"] = o.StayedInSpawn
	toSerialize["was_afk"] = o.WasAfk
	toSerialize["was_penalized"] = o.WasPenalized
	return toSerialize, nil
}

func (o *MatchesV2DataRoundPlayerStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ability_casts",
		"bodyshots",
		"damage",
		"damage_events",
		"economy",
		"headshots",
		"kill_events",
		"kills",
		"legshots",
		"player_display_name",
		"player_puuid",
		"player_team",
		"score",
		"stayed_in_spawn",
		"was_afk",
		"was_penalized",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataRoundPlayerStats := _MatchesV2DataRoundPlayerStats{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataRoundPlayerStats)

	if err != nil {
		return err
	}

	*o = MatchesV2DataRoundPlayerStats(varMatchesV2DataRoundPlayerStats)

	return err
}

type NullableMatchesV2DataRoundPlayerStats struct {
	value *MatchesV2DataRoundPlayerStats
	isSet bool
}

func (v NullableMatchesV2DataRoundPlayerStats) Get() *MatchesV2DataRoundPlayerStats {
	return v.value
}

func (v *NullableMatchesV2DataRoundPlayerStats) Set(val *MatchesV2DataRoundPlayerStats) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataRoundPlayerStats) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataRoundPlayerStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataRoundPlayerStats(val *MatchesV2DataRoundPlayerStats) *NullableMatchesV2DataRoundPlayerStats {
	return &NullableMatchesV2DataRoundPlayerStats{value: val, isSet: true}
}

func (v NullableMatchesV2DataRoundPlayerStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataRoundPlayerStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


