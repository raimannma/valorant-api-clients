/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataObserver type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataObserver{}

// MatchesV2DataObserver struct for MatchesV2DataObserver
type MatchesV2DataObserver struct {
	Level int32 `json:"level"`
	Name string `json:"name"`
	PartyId string `json:"party_id"`
	Platform MatchesV2DataPlatform `json:"platform"`
	PlayerCard string `json:"player_card"`
	PlayerTitle string `json:"player_title"`
	Puuid string `json:"puuid"`
	SessionPlaytime MatchesV2DataPlayerSessionPlaytime `json:"session_playtime"`
	Tag string `json:"tag"`
	Team string `json:"team"`
}

type _MatchesV2DataObserver MatchesV2DataObserver

// NewMatchesV2DataObserver instantiates a new MatchesV2DataObserver object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataObserver(level int32, name string, partyId string, platform MatchesV2DataPlatform, playerCard string, playerTitle string, puuid string, sessionPlaytime MatchesV2DataPlayerSessionPlaytime, tag string, team string) *MatchesV2DataObserver {
	this := MatchesV2DataObserver{}
	this.Level = level
	this.Name = name
	this.PartyId = partyId
	this.Platform = platform
	this.PlayerCard = playerCard
	this.PlayerTitle = playerTitle
	this.Puuid = puuid
	this.SessionPlaytime = sessionPlaytime
	this.Tag = tag
	this.Team = team
	return &this
}

// NewMatchesV2DataObserverWithDefaults instantiates a new MatchesV2DataObserver object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataObserverWithDefaults() *MatchesV2DataObserver {
	this := MatchesV2DataObserver{}
	return &this
}

// GetLevel returns the Level field value
func (o *MatchesV2DataObserver) GetLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *MatchesV2DataObserver) SetLevel(v int32) {
	o.Level = v
}

// GetName returns the Name field value
func (o *MatchesV2DataObserver) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MatchesV2DataObserver) SetName(v string) {
	o.Name = v
}

// GetPartyId returns the PartyId field value
func (o *MatchesV2DataObserver) GetPartyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetPartyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartyId, true
}

// SetPartyId sets field value
func (o *MatchesV2DataObserver) SetPartyId(v string) {
	o.PartyId = v
}

// GetPlatform returns the Platform field value
func (o *MatchesV2DataObserver) GetPlatform() MatchesV2DataPlatform {
	if o == nil {
		var ret MatchesV2DataPlatform
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetPlatformOk() (*MatchesV2DataPlatform, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *MatchesV2DataObserver) SetPlatform(v MatchesV2DataPlatform) {
	o.Platform = v
}

// GetPlayerCard returns the PlayerCard field value
func (o *MatchesV2DataObserver) GetPlayerCard() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerCard
}

// GetPlayerCardOk returns a tuple with the PlayerCard field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetPlayerCardOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerCard, true
}

// SetPlayerCard sets field value
func (o *MatchesV2DataObserver) SetPlayerCard(v string) {
	o.PlayerCard = v
}

// GetPlayerTitle returns the PlayerTitle field value
func (o *MatchesV2DataObserver) GetPlayerTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlayerTitle
}

// GetPlayerTitleOk returns a tuple with the PlayerTitle field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetPlayerTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerTitle, true
}

// SetPlayerTitle sets field value
func (o *MatchesV2DataObserver) SetPlayerTitle(v string) {
	o.PlayerTitle = v
}

// GetPuuid returns the Puuid field value
func (o *MatchesV2DataObserver) GetPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Puuid
}

// GetPuuidOk returns a tuple with the Puuid field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Puuid, true
}

// SetPuuid sets field value
func (o *MatchesV2DataObserver) SetPuuid(v string) {
	o.Puuid = v
}

// GetSessionPlaytime returns the SessionPlaytime field value
func (o *MatchesV2DataObserver) GetSessionPlaytime() MatchesV2DataPlayerSessionPlaytime {
	if o == nil {
		var ret MatchesV2DataPlayerSessionPlaytime
		return ret
	}

	return o.SessionPlaytime
}

// GetSessionPlaytimeOk returns a tuple with the SessionPlaytime field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetSessionPlaytimeOk() (*MatchesV2DataPlayerSessionPlaytime, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionPlaytime, true
}

// SetSessionPlaytime sets field value
func (o *MatchesV2DataObserver) SetSessionPlaytime(v MatchesV2DataPlayerSessionPlaytime) {
	o.SessionPlaytime = v
}

// GetTag returns the Tag field value
func (o *MatchesV2DataObserver) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *MatchesV2DataObserver) SetTag(v string) {
	o.Tag = v
}

// GetTeam returns the Team field value
func (o *MatchesV2DataObserver) GetTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Team
}

// GetTeamOk returns a tuple with the Team field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataObserver) GetTeamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Team, true
}

// SetTeam sets field value
func (o *MatchesV2DataObserver) SetTeam(v string) {
	o.Team = v
}

func (o MatchesV2DataObserver) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataObserver) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["level"] = o.Level
	toSerialize["name"] = o.Name
	toSerialize["party_id"] = o.PartyId
	toSerialize["platform"] = o.Platform
	toSerialize["player_card"] = o.PlayerCard
	toSerialize["player_title"] = o.PlayerTitle
	toSerialize["puuid"] = o.Puuid
	toSerialize["session_playtime"] = o.SessionPlaytime
	toSerialize["tag"] = o.Tag
	toSerialize["team"] = o.Team
	return toSerialize, nil
}

func (o *MatchesV2DataObserver) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"level",
		"name",
		"party_id",
		"platform",
		"player_card",
		"player_title",
		"puuid",
		"session_playtime",
		"tag",
		"team",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataObserver := _MatchesV2DataObserver{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataObserver)

	if err != nil {
		return err
	}

	*o = MatchesV2DataObserver(varMatchesV2DataObserver)

	return err
}

type NullableMatchesV2DataObserver struct {
	value *MatchesV2DataObserver
	isSet bool
}

func (v NullableMatchesV2DataObserver) Get() *MatchesV2DataObserver {
	return v.value
}

func (v *NullableMatchesV2DataObserver) Set(val *MatchesV2DataObserver) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataObserver) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataObserver) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataObserver(val *MatchesV2DataObserver) *NullableMatchesV2DataObserver {
	return &NullableMatchesV2DataObserver{value: val, isSet: true}
}

func (v NullableMatchesV2DataObserver) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataObserver) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


