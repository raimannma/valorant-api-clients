/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MMRV3LeaderboardPlacement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MMRV3LeaderboardPlacement{}

// MMRV3LeaderboardPlacement struct for MMRV3LeaderboardPlacement
type MMRV3LeaderboardPlacement struct {
	Rank int32 `json:"rank"`
	UpdatedAt string `json:"updated_at"`
}

type _MMRV3LeaderboardPlacement MMRV3LeaderboardPlacement

// NewMMRV3LeaderboardPlacement instantiates a new MMRV3LeaderboardPlacement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMMRV3LeaderboardPlacement(rank int32, updatedAt string) *MMRV3LeaderboardPlacement {
	this := MMRV3LeaderboardPlacement{}
	this.Rank = rank
	this.UpdatedAt = updatedAt
	return &this
}

// NewMMRV3LeaderboardPlacementWithDefaults instantiates a new MMRV3LeaderboardPlacement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMMRV3LeaderboardPlacementWithDefaults() *MMRV3LeaderboardPlacement {
	this := MMRV3LeaderboardPlacement{}
	return &this
}

// GetRank returns the Rank field value
func (o *MMRV3LeaderboardPlacement) GetRank() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Rank
}

// GetRankOk returns a tuple with the Rank field value
// and a boolean to check if the value has been set.
func (o *MMRV3LeaderboardPlacement) GetRankOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rank, true
}

// SetRank sets field value
func (o *MMRV3LeaderboardPlacement) SetRank(v int32) {
	o.Rank = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *MMRV3LeaderboardPlacement) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *MMRV3LeaderboardPlacement) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *MMRV3LeaderboardPlacement) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o MMRV3LeaderboardPlacement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MMRV3LeaderboardPlacement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rank"] = o.Rank
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *MMRV3LeaderboardPlacement) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rank",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMMRV3LeaderboardPlacement := _MMRV3LeaderboardPlacement{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMMRV3LeaderboardPlacement)

	if err != nil {
		return err
	}

	*o = MMRV3LeaderboardPlacement(varMMRV3LeaderboardPlacement)

	return err
}

type NullableMMRV3LeaderboardPlacement struct {
	value *MMRV3LeaderboardPlacement
	isSet bool
}

func (v NullableMMRV3LeaderboardPlacement) Get() *MMRV3LeaderboardPlacement {
	return v.value
}

func (v *NullableMMRV3LeaderboardPlacement) Set(val *MMRV3LeaderboardPlacement) {
	v.value = val
	v.isSet = true
}

func (v NullableMMRV3LeaderboardPlacement) IsSet() bool {
	return v.isSet
}

func (v *NullableMMRV3LeaderboardPlacement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMMRV3LeaderboardPlacement(val *MMRV3LeaderboardPlacement) *NullableMMRV3LeaderboardPlacement {
	return &NullableMMRV3LeaderboardPlacement{value: val, isSet: true}
}

func (v NullableMMRV3LeaderboardPlacement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMMRV3LeaderboardPlacement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


