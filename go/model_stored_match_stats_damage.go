/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StoredMatchStatsDamage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoredMatchStatsDamage{}

// StoredMatchStatsDamage struct for StoredMatchStatsDamage
type StoredMatchStatsDamage struct {
	Made int32 `json:"made"`
	Received int32 `json:"received"`
}

type _StoredMatchStatsDamage StoredMatchStatsDamage

// NewStoredMatchStatsDamage instantiates a new StoredMatchStatsDamage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoredMatchStatsDamage(made int32, received int32) *StoredMatchStatsDamage {
	this := StoredMatchStatsDamage{}
	this.Made = made
	this.Received = received
	return &this
}

// NewStoredMatchStatsDamageWithDefaults instantiates a new StoredMatchStatsDamage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoredMatchStatsDamageWithDefaults() *StoredMatchStatsDamage {
	this := StoredMatchStatsDamage{}
	return &this
}

// GetMade returns the Made field value
func (o *StoredMatchStatsDamage) GetMade() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Made
}

// GetMadeOk returns a tuple with the Made field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStatsDamage) GetMadeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Made, true
}

// SetMade sets field value
func (o *StoredMatchStatsDamage) SetMade(v int32) {
	o.Made = v
}

// GetReceived returns the Received field value
func (o *StoredMatchStatsDamage) GetReceived() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Received
}

// GetReceivedOk returns a tuple with the Received field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStatsDamage) GetReceivedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Received, true
}

// SetReceived sets field value
func (o *StoredMatchStatsDamage) SetReceived(v int32) {
	o.Received = v
}

func (o StoredMatchStatsDamage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoredMatchStatsDamage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["made"] = o.Made
	toSerialize["received"] = o.Received
	return toSerialize, nil
}

func (o *StoredMatchStatsDamage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"made",
		"received",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStoredMatchStatsDamage := _StoredMatchStatsDamage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStoredMatchStatsDamage)

	if err != nil {
		return err
	}

	*o = StoredMatchStatsDamage(varStoredMatchStatsDamage)

	return err
}

type NullableStoredMatchStatsDamage struct {
	value *StoredMatchStatsDamage
	isSet bool
}

func (v NullableStoredMatchStatsDamage) Get() *StoredMatchStatsDamage {
	return v.value
}

func (v *NullableStoredMatchStatsDamage) Set(val *StoredMatchStatsDamage) {
	v.value = val
	v.isSet = true
}

func (v NullableStoredMatchStatsDamage) IsSet() bool {
	return v.isSet
}

func (v *NullableStoredMatchStatsDamage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoredMatchStatsDamage(val *StoredMatchStatsDamage) *NullableStoredMatchStatsDamage {
	return &NullableStoredMatchStatsDamage{value: val, isSet: true}
}

func (v NullableStoredMatchStatsDamage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoredMatchStatsDamage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


