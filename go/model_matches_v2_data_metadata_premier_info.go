/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
)

// checks if the MatchesV2DataMetadataPremierInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataMetadataPremierInfo{}

// MatchesV2DataMetadataPremierInfo struct for MatchesV2DataMetadataPremierInfo
type MatchesV2DataMetadataPremierInfo struct {
	MatchupId NullableString `json:"matchup_id,omitempty"`
	TournamentId NullableString `json:"tournament_id,omitempty"`
}

// NewMatchesV2DataMetadataPremierInfo instantiates a new MatchesV2DataMetadataPremierInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataMetadataPremierInfo() *MatchesV2DataMetadataPremierInfo {
	this := MatchesV2DataMetadataPremierInfo{}
	return &this
}

// NewMatchesV2DataMetadataPremierInfoWithDefaults instantiates a new MatchesV2DataMetadataPremierInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataMetadataPremierInfoWithDefaults() *MatchesV2DataMetadataPremierInfo {
	this := MatchesV2DataMetadataPremierInfo{}
	return &this
}

// GetMatchupId returns the MatchupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataMetadataPremierInfo) GetMatchupId() string {
	if o == nil || IsNil(o.MatchupId.Get()) {
		var ret string
		return ret
	}
	return *o.MatchupId.Get()
}

// GetMatchupIdOk returns a tuple with the MatchupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataMetadataPremierInfo) GetMatchupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MatchupId.Get(), o.MatchupId.IsSet()
}

// HasMatchupId returns a boolean if a field has been set.
func (o *MatchesV2DataMetadataPremierInfo) HasMatchupId() bool {
	if o != nil && o.MatchupId.IsSet() {
		return true
	}

	return false
}

// SetMatchupId gets a reference to the given NullableString and assigns it to the MatchupId field.
func (o *MatchesV2DataMetadataPremierInfo) SetMatchupId(v string) {
	o.MatchupId.Set(&v)
}
// SetMatchupIdNil sets the value for MatchupId to be an explicit nil
func (o *MatchesV2DataMetadataPremierInfo) SetMatchupIdNil() {
	o.MatchupId.Set(nil)
}

// UnsetMatchupId ensures that no value is present for MatchupId, not even an explicit nil
func (o *MatchesV2DataMetadataPremierInfo) UnsetMatchupId() {
	o.MatchupId.Unset()
}

// GetTournamentId returns the TournamentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataMetadataPremierInfo) GetTournamentId() string {
	if o == nil || IsNil(o.TournamentId.Get()) {
		var ret string
		return ret
	}
	return *o.TournamentId.Get()
}

// GetTournamentIdOk returns a tuple with the TournamentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataMetadataPremierInfo) GetTournamentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TournamentId.Get(), o.TournamentId.IsSet()
}

// HasTournamentId returns a boolean if a field has been set.
func (o *MatchesV2DataMetadataPremierInfo) HasTournamentId() bool {
	if o != nil && o.TournamentId.IsSet() {
		return true
	}

	return false
}

// SetTournamentId gets a reference to the given NullableString and assigns it to the TournamentId field.
func (o *MatchesV2DataMetadataPremierInfo) SetTournamentId(v string) {
	o.TournamentId.Set(&v)
}
// SetTournamentIdNil sets the value for TournamentId to be an explicit nil
func (o *MatchesV2DataMetadataPremierInfo) SetTournamentIdNil() {
	o.TournamentId.Set(nil)
}

// UnsetTournamentId ensures that no value is present for TournamentId, not even an explicit nil
func (o *MatchesV2DataMetadataPremierInfo) UnsetTournamentId() {
	o.TournamentId.Unset()
}

func (o MatchesV2DataMetadataPremierInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataMetadataPremierInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MatchupId.IsSet() {
		toSerialize["matchup_id"] = o.MatchupId.Get()
	}
	if o.TournamentId.IsSet() {
		toSerialize["tournament_id"] = o.TournamentId.Get()
	}
	return toSerialize, nil
}

type NullableMatchesV2DataMetadataPremierInfo struct {
	value *MatchesV2DataMetadataPremierInfo
	isSet bool
}

func (v NullableMatchesV2DataMetadataPremierInfo) Get() *MatchesV2DataMetadataPremierInfo {
	return v.value
}

func (v *NullableMatchesV2DataMetadataPremierInfo) Set(val *MatchesV2DataMetadataPremierInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataMetadataPremierInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataMetadataPremierInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataMetadataPremierInfo(val *MatchesV2DataMetadataPremierInfo) *NullableMatchesV2DataMetadataPremierInfo {
	return &NullableMatchesV2DataMetadataPremierInfo{value: val, isSet: true}
}

func (v NullableMatchesV2DataMetadataPremierInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataMetadataPremierInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


