/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BundleItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BundleItem{}

// BundleItem struct for BundleItem
type BundleItem struct {
	BasePrice int32 `json:"BasePrice"`
	CurrencyID string `json:"CurrencyID"`
	DiscountPercent float32 `json:"DiscountPercent"`
	DiscountedPrice float32 `json:"DiscountedPrice"`
	IsPromoItem bool `json:"IsPromoItem"`
	Item Item `json:"Item"`
}

type _BundleItem BundleItem

// NewBundleItem instantiates a new BundleItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleItem(basePrice int32, currencyID string, discountPercent float32, discountedPrice float32, isPromoItem bool, item Item) *BundleItem {
	this := BundleItem{}
	this.BasePrice = basePrice
	this.CurrencyID = currencyID
	this.DiscountPercent = discountPercent
	this.DiscountedPrice = discountedPrice
	this.IsPromoItem = isPromoItem
	this.Item = item
	return &this
}

// NewBundleItemWithDefaults instantiates a new BundleItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleItemWithDefaults() *BundleItem {
	this := BundleItem{}
	return &this
}

// GetBasePrice returns the BasePrice field value
func (o *BundleItem) GetBasePrice() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BasePrice
}

// GetBasePriceOk returns a tuple with the BasePrice field value
// and a boolean to check if the value has been set.
func (o *BundleItem) GetBasePriceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasePrice, true
}

// SetBasePrice sets field value
func (o *BundleItem) SetBasePrice(v int32) {
	o.BasePrice = v
}

// GetCurrencyID returns the CurrencyID field value
func (o *BundleItem) GetCurrencyID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyID
}

// GetCurrencyIDOk returns a tuple with the CurrencyID field value
// and a boolean to check if the value has been set.
func (o *BundleItem) GetCurrencyIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyID, true
}

// SetCurrencyID sets field value
func (o *BundleItem) SetCurrencyID(v string) {
	o.CurrencyID = v
}

// GetDiscountPercent returns the DiscountPercent field value
func (o *BundleItem) GetDiscountPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DiscountPercent
}

// GetDiscountPercentOk returns a tuple with the DiscountPercent field value
// and a boolean to check if the value has been set.
func (o *BundleItem) GetDiscountPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountPercent, true
}

// SetDiscountPercent sets field value
func (o *BundleItem) SetDiscountPercent(v float32) {
	o.DiscountPercent = v
}

// GetDiscountedPrice returns the DiscountedPrice field value
func (o *BundleItem) GetDiscountedPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DiscountedPrice
}

// GetDiscountedPriceOk returns a tuple with the DiscountedPrice field value
// and a boolean to check if the value has been set.
func (o *BundleItem) GetDiscountedPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountedPrice, true
}

// SetDiscountedPrice sets field value
func (o *BundleItem) SetDiscountedPrice(v float32) {
	o.DiscountedPrice = v
}

// GetIsPromoItem returns the IsPromoItem field value
func (o *BundleItem) GetIsPromoItem() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPromoItem
}

// GetIsPromoItemOk returns a tuple with the IsPromoItem field value
// and a boolean to check if the value has been set.
func (o *BundleItem) GetIsPromoItemOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPromoItem, true
}

// SetIsPromoItem sets field value
func (o *BundleItem) SetIsPromoItem(v bool) {
	o.IsPromoItem = v
}

// GetItem returns the Item field value
func (o *BundleItem) GetItem() Item {
	if o == nil {
		var ret Item
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *BundleItem) GetItemOk() (*Item, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Item, true
}

// SetItem sets field value
func (o *BundleItem) SetItem(v Item) {
	o.Item = v
}

func (o BundleItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BundleItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["BasePrice"] = o.BasePrice
	toSerialize["CurrencyID"] = o.CurrencyID
	toSerialize["DiscountPercent"] = o.DiscountPercent
	toSerialize["DiscountedPrice"] = o.DiscountedPrice
	toSerialize["IsPromoItem"] = o.IsPromoItem
	toSerialize["Item"] = o.Item
	return toSerialize, nil
}

func (o *BundleItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"BasePrice",
		"CurrencyID",
		"DiscountPercent",
		"DiscountedPrice",
		"IsPromoItem",
		"Item",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBundleItem := _BundleItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBundleItem)

	if err != nil {
		return err
	}

	*o = BundleItem(varBundleItem)

	return err
}

type NullableBundleItem struct {
	value *BundleItem
	isSet bool
}

func (v NullableBundleItem) Get() *BundleItem {
	return v.value
}

func (v *NullableBundleItem) Set(val *BundleItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleItem(val *BundleItem) *NullableBundleItem {
	return &NullableBundleItem{value: val, isSet: true}
}

func (v NullableBundleItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


