/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV4DataPlayer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV4DataPlayer{}

// MatchesV4DataPlayer struct for MatchesV4DataPlayer
type MatchesV4DataPlayer struct {
	AbilityCasts MatchesV4DataPlayerAbilityCasts `json:"ability_casts"`
	AccountLevel int32 `json:"account_level"`
	Agent AgentIdNameCombo `json:"agent"`
	Behavior MatchesV4DataPlayerBehavior `json:"behavior"`
	Customization MatchesV4DataPlayerCustomization `json:"customization"`
	Economy MatchesV4DataPlayerEconomy `json:"economy"`
	Name string `json:"name"`
	PartyId string `json:"party_id"`
	Platform string `json:"platform"`
	Puuid string `json:"puuid"`
	SessionPlaytimeInMs int32 `json:"session_playtime_in_ms"`
	Stats MatchesV4DataPlayerStats `json:"stats"`
	Tag string `json:"tag"`
	TeamId string `json:"team_id"`
	Tier TierIdNameCombo `json:"tier"`
}

type _MatchesV4DataPlayer MatchesV4DataPlayer

// NewMatchesV4DataPlayer instantiates a new MatchesV4DataPlayer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV4DataPlayer(abilityCasts MatchesV4DataPlayerAbilityCasts, accountLevel int32, agent AgentIdNameCombo, behavior MatchesV4DataPlayerBehavior, customization MatchesV4DataPlayerCustomization, economy MatchesV4DataPlayerEconomy, name string, partyId string, platform string, puuid string, sessionPlaytimeInMs int32, stats MatchesV4DataPlayerStats, tag string, teamId string, tier TierIdNameCombo) *MatchesV4DataPlayer {
	this := MatchesV4DataPlayer{}
	this.AbilityCasts = abilityCasts
	this.AccountLevel = accountLevel
	this.Agent = agent
	this.Behavior = behavior
	this.Customization = customization
	this.Economy = economy
	this.Name = name
	this.PartyId = partyId
	this.Platform = platform
	this.Puuid = puuid
	this.SessionPlaytimeInMs = sessionPlaytimeInMs
	this.Stats = stats
	this.Tag = tag
	this.TeamId = teamId
	this.Tier = tier
	return &this
}

// NewMatchesV4DataPlayerWithDefaults instantiates a new MatchesV4DataPlayer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV4DataPlayerWithDefaults() *MatchesV4DataPlayer {
	this := MatchesV4DataPlayer{}
	return &this
}

// GetAbilityCasts returns the AbilityCasts field value
func (o *MatchesV4DataPlayer) GetAbilityCasts() MatchesV4DataPlayerAbilityCasts {
	if o == nil {
		var ret MatchesV4DataPlayerAbilityCasts
		return ret
	}

	return o.AbilityCasts
}

// GetAbilityCastsOk returns a tuple with the AbilityCasts field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetAbilityCastsOk() (*MatchesV4DataPlayerAbilityCasts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbilityCasts, true
}

// SetAbilityCasts sets field value
func (o *MatchesV4DataPlayer) SetAbilityCasts(v MatchesV4DataPlayerAbilityCasts) {
	o.AbilityCasts = v
}

// GetAccountLevel returns the AccountLevel field value
func (o *MatchesV4DataPlayer) GetAccountLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountLevel
}

// GetAccountLevelOk returns a tuple with the AccountLevel field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetAccountLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLevel, true
}

// SetAccountLevel sets field value
func (o *MatchesV4DataPlayer) SetAccountLevel(v int32) {
	o.AccountLevel = v
}

// GetAgent returns the Agent field value
func (o *MatchesV4DataPlayer) GetAgent() AgentIdNameCombo {
	if o == nil {
		var ret AgentIdNameCombo
		return ret
	}

	return o.Agent
}

// GetAgentOk returns a tuple with the Agent field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetAgentOk() (*AgentIdNameCombo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Agent, true
}

// SetAgent sets field value
func (o *MatchesV4DataPlayer) SetAgent(v AgentIdNameCombo) {
	o.Agent = v
}

// GetBehavior returns the Behavior field value
func (o *MatchesV4DataPlayer) GetBehavior() MatchesV4DataPlayerBehavior {
	if o == nil {
		var ret MatchesV4DataPlayerBehavior
		return ret
	}

	return o.Behavior
}

// GetBehaviorOk returns a tuple with the Behavior field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetBehaviorOk() (*MatchesV4DataPlayerBehavior, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Behavior, true
}

// SetBehavior sets field value
func (o *MatchesV4DataPlayer) SetBehavior(v MatchesV4DataPlayerBehavior) {
	o.Behavior = v
}

// GetCustomization returns the Customization field value
func (o *MatchesV4DataPlayer) GetCustomization() MatchesV4DataPlayerCustomization {
	if o == nil {
		var ret MatchesV4DataPlayerCustomization
		return ret
	}

	return o.Customization
}

// GetCustomizationOk returns a tuple with the Customization field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetCustomizationOk() (*MatchesV4DataPlayerCustomization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customization, true
}

// SetCustomization sets field value
func (o *MatchesV4DataPlayer) SetCustomization(v MatchesV4DataPlayerCustomization) {
	o.Customization = v
}

// GetEconomy returns the Economy field value
func (o *MatchesV4DataPlayer) GetEconomy() MatchesV4DataPlayerEconomy {
	if o == nil {
		var ret MatchesV4DataPlayerEconomy
		return ret
	}

	return o.Economy
}

// GetEconomyOk returns a tuple with the Economy field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetEconomyOk() (*MatchesV4DataPlayerEconomy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Economy, true
}

// SetEconomy sets field value
func (o *MatchesV4DataPlayer) SetEconomy(v MatchesV4DataPlayerEconomy) {
	o.Economy = v
}

// GetName returns the Name field value
func (o *MatchesV4DataPlayer) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MatchesV4DataPlayer) SetName(v string) {
	o.Name = v
}

// GetPartyId returns the PartyId field value
func (o *MatchesV4DataPlayer) GetPartyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetPartyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartyId, true
}

// SetPartyId sets field value
func (o *MatchesV4DataPlayer) SetPartyId(v string) {
	o.PartyId = v
}

// GetPlatform returns the Platform field value
func (o *MatchesV4DataPlayer) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *MatchesV4DataPlayer) SetPlatform(v string) {
	o.Platform = v
}

// GetPuuid returns the Puuid field value
func (o *MatchesV4DataPlayer) GetPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Puuid
}

// GetPuuidOk returns a tuple with the Puuid field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Puuid, true
}

// SetPuuid sets field value
func (o *MatchesV4DataPlayer) SetPuuid(v string) {
	o.Puuid = v
}

// GetSessionPlaytimeInMs returns the SessionPlaytimeInMs field value
func (o *MatchesV4DataPlayer) GetSessionPlaytimeInMs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SessionPlaytimeInMs
}

// GetSessionPlaytimeInMsOk returns a tuple with the SessionPlaytimeInMs field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetSessionPlaytimeInMsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionPlaytimeInMs, true
}

// SetSessionPlaytimeInMs sets field value
func (o *MatchesV4DataPlayer) SetSessionPlaytimeInMs(v int32) {
	o.SessionPlaytimeInMs = v
}

// GetStats returns the Stats field value
func (o *MatchesV4DataPlayer) GetStats() MatchesV4DataPlayerStats {
	if o == nil {
		var ret MatchesV4DataPlayerStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetStatsOk() (*MatchesV4DataPlayerStats, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stats, true
}

// SetStats sets field value
func (o *MatchesV4DataPlayer) SetStats(v MatchesV4DataPlayerStats) {
	o.Stats = v
}

// GetTag returns the Tag field value
func (o *MatchesV4DataPlayer) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *MatchesV4DataPlayer) SetTag(v string) {
	o.Tag = v
}

// GetTeamId returns the TeamId field value
func (o *MatchesV4DataPlayer) GetTeamId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetTeamIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *MatchesV4DataPlayer) SetTeamId(v string) {
	o.TeamId = v
}

// GetTier returns the Tier field value
func (o *MatchesV4DataPlayer) GetTier() TierIdNameCombo {
	if o == nil {
		var ret TierIdNameCombo
		return ret
	}

	return o.Tier
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataPlayer) GetTierOk() (*TierIdNameCombo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tier, true
}

// SetTier sets field value
func (o *MatchesV4DataPlayer) SetTier(v TierIdNameCombo) {
	o.Tier = v
}

func (o MatchesV4DataPlayer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV4DataPlayer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ability_casts"] = o.AbilityCasts
	toSerialize["account_level"] = o.AccountLevel
	toSerialize["agent"] = o.Agent
	toSerialize["behavior"] = o.Behavior
	toSerialize["customization"] = o.Customization
	toSerialize["economy"] = o.Economy
	toSerialize["name"] = o.Name
	toSerialize["party_id"] = o.PartyId
	toSerialize["platform"] = o.Platform
	toSerialize["puuid"] = o.Puuid
	toSerialize["session_playtime_in_ms"] = o.SessionPlaytimeInMs
	toSerialize["stats"] = o.Stats
	toSerialize["tag"] = o.Tag
	toSerialize["team_id"] = o.TeamId
	toSerialize["tier"] = o.Tier
	return toSerialize, nil
}

func (o *MatchesV4DataPlayer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ability_casts",
		"account_level",
		"agent",
		"behavior",
		"customization",
		"economy",
		"name",
		"party_id",
		"platform",
		"puuid",
		"session_playtime_in_ms",
		"stats",
		"tag",
		"team_id",
		"tier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV4DataPlayer := _MatchesV4DataPlayer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV4DataPlayer)

	if err != nil {
		return err
	}

	*o = MatchesV4DataPlayer(varMatchesV4DataPlayer)

	return err
}

type NullableMatchesV4DataPlayer struct {
	value *MatchesV4DataPlayer
	isSet bool
}

func (v NullableMatchesV4DataPlayer) Get() *MatchesV4DataPlayer {
	return v.value
}

func (v *NullableMatchesV4DataPlayer) Set(val *MatchesV4DataPlayer) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV4DataPlayer) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV4DataPlayer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV4DataPlayer(val *MatchesV4DataPlayer) *NullableMatchesV4DataPlayer {
	return &NullableMatchesV4DataPlayer{value: val, isSet: true}
}

func (v NullableMatchesV4DataPlayer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV4DataPlayer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


