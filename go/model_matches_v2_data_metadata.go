/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataMetadata{}

// MatchesV2DataMetadata struct for MatchesV2DataMetadata
type MatchesV2DataMetadata struct {
	Cluster NullableString `json:"cluster,omitempty"`
	GameLength int64 `json:"game_length"`
	GameStart int64 `json:"game_start"`
	GameStartPatched string `json:"game_start_patched"`
	GameVersion string `json:"game_version"`
	Map NullableString `json:"map,omitempty"`
	Matchid string `json:"matchid"`
	Mode NullableString `json:"mode,omitempty"`
	ModeId string `json:"mode_id"`
	Platform string `json:"platform"`
	PremierInfo MatchesV2DataMetadataPremierInfo `json:"premier_info"`
	Queue NullableString `json:"queue,omitempty"`
	Region NullableString `json:"region,omitempty"`
	RoundsPlayed int32 `json:"rounds_played"`
	SeasonId string `json:"season_id"`
}

type _MatchesV2DataMetadata MatchesV2DataMetadata

// NewMatchesV2DataMetadata instantiates a new MatchesV2DataMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataMetadata(gameLength int64, gameStart int64, gameStartPatched string, gameVersion string, matchid string, modeId string, platform string, premierInfo MatchesV2DataMetadataPremierInfo, roundsPlayed int32, seasonId string) *MatchesV2DataMetadata {
	this := MatchesV2DataMetadata{}
	this.GameLength = gameLength
	this.GameStart = gameStart
	this.GameStartPatched = gameStartPatched
	this.GameVersion = gameVersion
	this.Matchid = matchid
	this.ModeId = modeId
	this.Platform = platform
	this.PremierInfo = premierInfo
	this.RoundsPlayed = roundsPlayed
	this.SeasonId = seasonId
	return &this
}

// NewMatchesV2DataMetadataWithDefaults instantiates a new MatchesV2DataMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataMetadataWithDefaults() *MatchesV2DataMetadata {
	this := MatchesV2DataMetadata{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataMetadata) GetCluster() string {
	if o == nil || IsNil(o.Cluster.Get()) {
		var ret string
		return ret
	}
	return *o.Cluster.Get()
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataMetadata) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cluster.Get(), o.Cluster.IsSet()
}

// HasCluster returns a boolean if a field has been set.
func (o *MatchesV2DataMetadata) HasCluster() bool {
	if o != nil && o.Cluster.IsSet() {
		return true
	}

	return false
}

// SetCluster gets a reference to the given NullableString and assigns it to the Cluster field.
func (o *MatchesV2DataMetadata) SetCluster(v string) {
	o.Cluster.Set(&v)
}
// SetClusterNil sets the value for Cluster to be an explicit nil
func (o *MatchesV2DataMetadata) SetClusterNil() {
	o.Cluster.Set(nil)
}

// UnsetCluster ensures that no value is present for Cluster, not even an explicit nil
func (o *MatchesV2DataMetadata) UnsetCluster() {
	o.Cluster.Unset()
}

// GetGameLength returns the GameLength field value
func (o *MatchesV2DataMetadata) GetGameLength() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.GameLength
}

// GetGameLengthOk returns a tuple with the GameLength field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetGameLengthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GameLength, true
}

// SetGameLength sets field value
func (o *MatchesV2DataMetadata) SetGameLength(v int64) {
	o.GameLength = v
}

// GetGameStart returns the GameStart field value
func (o *MatchesV2DataMetadata) GetGameStart() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.GameStart
}

// GetGameStartOk returns a tuple with the GameStart field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetGameStartOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GameStart, true
}

// SetGameStart sets field value
func (o *MatchesV2DataMetadata) SetGameStart(v int64) {
	o.GameStart = v
}

// GetGameStartPatched returns the GameStartPatched field value
func (o *MatchesV2DataMetadata) GetGameStartPatched() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GameStartPatched
}

// GetGameStartPatchedOk returns a tuple with the GameStartPatched field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetGameStartPatchedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GameStartPatched, true
}

// SetGameStartPatched sets field value
func (o *MatchesV2DataMetadata) SetGameStartPatched(v string) {
	o.GameStartPatched = v
}

// GetGameVersion returns the GameVersion field value
func (o *MatchesV2DataMetadata) GetGameVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GameVersion
}

// GetGameVersionOk returns a tuple with the GameVersion field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetGameVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GameVersion, true
}

// SetGameVersion sets field value
func (o *MatchesV2DataMetadata) SetGameVersion(v string) {
	o.GameVersion = v
}

// GetMap returns the Map field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataMetadata) GetMap() string {
	if o == nil || IsNil(o.Map.Get()) {
		var ret string
		return ret
	}
	return *o.Map.Get()
}

// GetMapOk returns a tuple with the Map field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataMetadata) GetMapOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Map.Get(), o.Map.IsSet()
}

// HasMap returns a boolean if a field has been set.
func (o *MatchesV2DataMetadata) HasMap() bool {
	if o != nil && o.Map.IsSet() {
		return true
	}

	return false
}

// SetMap gets a reference to the given NullableString and assigns it to the Map field.
func (o *MatchesV2DataMetadata) SetMap(v string) {
	o.Map.Set(&v)
}
// SetMapNil sets the value for Map to be an explicit nil
func (o *MatchesV2DataMetadata) SetMapNil() {
	o.Map.Set(nil)
}

// UnsetMap ensures that no value is present for Map, not even an explicit nil
func (o *MatchesV2DataMetadata) UnsetMap() {
	o.Map.Unset()
}

// GetMatchid returns the Matchid field value
func (o *MatchesV2DataMetadata) GetMatchid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Matchid
}

// GetMatchidOk returns a tuple with the Matchid field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetMatchidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Matchid, true
}

// SetMatchid sets field value
func (o *MatchesV2DataMetadata) SetMatchid(v string) {
	o.Matchid = v
}

// GetMode returns the Mode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataMetadata) GetMode() string {
	if o == nil || IsNil(o.Mode.Get()) {
		var ret string
		return ret
	}
	return *o.Mode.Get()
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataMetadata) GetModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mode.Get(), o.Mode.IsSet()
}

// HasMode returns a boolean if a field has been set.
func (o *MatchesV2DataMetadata) HasMode() bool {
	if o != nil && o.Mode.IsSet() {
		return true
	}

	return false
}

// SetMode gets a reference to the given NullableString and assigns it to the Mode field.
func (o *MatchesV2DataMetadata) SetMode(v string) {
	o.Mode.Set(&v)
}
// SetModeNil sets the value for Mode to be an explicit nil
func (o *MatchesV2DataMetadata) SetModeNil() {
	o.Mode.Set(nil)
}

// UnsetMode ensures that no value is present for Mode, not even an explicit nil
func (o *MatchesV2DataMetadata) UnsetMode() {
	o.Mode.Unset()
}

// GetModeId returns the ModeId field value
func (o *MatchesV2DataMetadata) GetModeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModeId
}

// GetModeIdOk returns a tuple with the ModeId field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetModeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModeId, true
}

// SetModeId sets field value
func (o *MatchesV2DataMetadata) SetModeId(v string) {
	o.ModeId = v
}

// GetPlatform returns the Platform field value
func (o *MatchesV2DataMetadata) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *MatchesV2DataMetadata) SetPlatform(v string) {
	o.Platform = v
}

// GetPremierInfo returns the PremierInfo field value
func (o *MatchesV2DataMetadata) GetPremierInfo() MatchesV2DataMetadataPremierInfo {
	if o == nil {
		var ret MatchesV2DataMetadataPremierInfo
		return ret
	}

	return o.PremierInfo
}

// GetPremierInfoOk returns a tuple with the PremierInfo field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetPremierInfoOk() (*MatchesV2DataMetadataPremierInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PremierInfo, true
}

// SetPremierInfo sets field value
func (o *MatchesV2DataMetadata) SetPremierInfo(v MatchesV2DataMetadataPremierInfo) {
	o.PremierInfo = v
}

// GetQueue returns the Queue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataMetadata) GetQueue() string {
	if o == nil || IsNil(o.Queue.Get()) {
		var ret string
		return ret
	}
	return *o.Queue.Get()
}

// GetQueueOk returns a tuple with the Queue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataMetadata) GetQueueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Queue.Get(), o.Queue.IsSet()
}

// HasQueue returns a boolean if a field has been set.
func (o *MatchesV2DataMetadata) HasQueue() bool {
	if o != nil && o.Queue.IsSet() {
		return true
	}

	return false
}

// SetQueue gets a reference to the given NullableString and assigns it to the Queue field.
func (o *MatchesV2DataMetadata) SetQueue(v string) {
	o.Queue.Set(&v)
}
// SetQueueNil sets the value for Queue to be an explicit nil
func (o *MatchesV2DataMetadata) SetQueueNil() {
	o.Queue.Set(nil)
}

// UnsetQueue ensures that no value is present for Queue, not even an explicit nil
func (o *MatchesV2DataMetadata) UnsetQueue() {
	o.Queue.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataMetadata) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataMetadata) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *MatchesV2DataMetadata) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *MatchesV2DataMetadata) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *MatchesV2DataMetadata) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *MatchesV2DataMetadata) UnsetRegion() {
	o.Region.Unset()
}

// GetRoundsPlayed returns the RoundsPlayed field value
func (o *MatchesV2DataMetadata) GetRoundsPlayed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RoundsPlayed
}

// GetRoundsPlayedOk returns a tuple with the RoundsPlayed field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetRoundsPlayedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoundsPlayed, true
}

// SetRoundsPlayed sets field value
func (o *MatchesV2DataMetadata) SetRoundsPlayed(v int32) {
	o.RoundsPlayed = v
}

// GetSeasonId returns the SeasonId field value
func (o *MatchesV2DataMetadata) GetSeasonId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SeasonId
}

// GetSeasonIdOk returns a tuple with the SeasonId field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataMetadata) GetSeasonIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SeasonId, true
}

// SetSeasonId sets field value
func (o *MatchesV2DataMetadata) SetSeasonId(v string) {
	o.SeasonId = v
}

func (o MatchesV2DataMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Cluster.IsSet() {
		toSerialize["cluster"] = o.Cluster.Get()
	}
	toSerialize["game_length"] = o.GameLength
	toSerialize["game_start"] = o.GameStart
	toSerialize["game_start_patched"] = o.GameStartPatched
	toSerialize["game_version"] = o.GameVersion
	if o.Map.IsSet() {
		toSerialize["map"] = o.Map.Get()
	}
	toSerialize["matchid"] = o.Matchid
	if o.Mode.IsSet() {
		toSerialize["mode"] = o.Mode.Get()
	}
	toSerialize["mode_id"] = o.ModeId
	toSerialize["platform"] = o.Platform
	toSerialize["premier_info"] = o.PremierInfo
	if o.Queue.IsSet() {
		toSerialize["queue"] = o.Queue.Get()
	}
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	toSerialize["rounds_played"] = o.RoundsPlayed
	toSerialize["season_id"] = o.SeasonId
	return toSerialize, nil
}

func (o *MatchesV2DataMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"game_length",
		"game_start",
		"game_start_patched",
		"game_version",
		"matchid",
		"mode_id",
		"platform",
		"premier_info",
		"rounds_played",
		"season_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataMetadata := _MatchesV2DataMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataMetadata)

	if err != nil {
		return err
	}

	*o = MatchesV2DataMetadata(varMatchesV2DataMetadata)

	return err
}

type NullableMatchesV2DataMetadata struct {
	value *MatchesV2DataMetadata
	isSet bool
}

func (v NullableMatchesV2DataMetadata) Get() *MatchesV2DataMetadata {
	return v.value
}

func (v *NullableMatchesV2DataMetadata) Set(val *MatchesV2DataMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataMetadata(val *MatchesV2DataMetadata) *NullableMatchesV2DataMetadata {
	return &NullableMatchesV2DataMetadata{value: val, isSet: true}
}

func (v NullableMatchesV2DataMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


