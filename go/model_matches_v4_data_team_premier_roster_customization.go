/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV4DataTeamPremierRosterCustomization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV4DataTeamPremierRosterCustomization{}

// MatchesV4DataTeamPremierRosterCustomization struct for MatchesV4DataTeamPremierRosterCustomization
type MatchesV4DataTeamPremierRosterCustomization struct {
	Icon string `json:"icon"`
	Image string `json:"image"`
	PrimaryColor string `json:"primary_color"`
	SecondaryColor string `json:"secondary_color"`
	TertiaryColor string `json:"tertiary_color"`
}

type _MatchesV4DataTeamPremierRosterCustomization MatchesV4DataTeamPremierRosterCustomization

// NewMatchesV4DataTeamPremierRosterCustomization instantiates a new MatchesV4DataTeamPremierRosterCustomization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV4DataTeamPremierRosterCustomization(icon string, image string, primaryColor string, secondaryColor string, tertiaryColor string) *MatchesV4DataTeamPremierRosterCustomization {
	this := MatchesV4DataTeamPremierRosterCustomization{}
	this.Icon = icon
	this.Image = image
	this.PrimaryColor = primaryColor
	this.SecondaryColor = secondaryColor
	this.TertiaryColor = tertiaryColor
	return &this
}

// NewMatchesV4DataTeamPremierRosterCustomizationWithDefaults instantiates a new MatchesV4DataTeamPremierRosterCustomization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV4DataTeamPremierRosterCustomizationWithDefaults() *MatchesV4DataTeamPremierRosterCustomization {
	this := MatchesV4DataTeamPremierRosterCustomization{}
	return &this
}

// GetIcon returns the Icon field value
func (o *MatchesV4DataTeamPremierRosterCustomization) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataTeamPremierRosterCustomization) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *MatchesV4DataTeamPremierRosterCustomization) SetIcon(v string) {
	o.Icon = v
}

// GetImage returns the Image field value
func (o *MatchesV4DataTeamPremierRosterCustomization) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataTeamPremierRosterCustomization) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *MatchesV4DataTeamPremierRosterCustomization) SetImage(v string) {
	o.Image = v
}

// GetPrimaryColor returns the PrimaryColor field value
func (o *MatchesV4DataTeamPremierRosterCustomization) GetPrimaryColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrimaryColor
}

// GetPrimaryColorOk returns a tuple with the PrimaryColor field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataTeamPremierRosterCustomization) GetPrimaryColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryColor, true
}

// SetPrimaryColor sets field value
func (o *MatchesV4DataTeamPremierRosterCustomization) SetPrimaryColor(v string) {
	o.PrimaryColor = v
}

// GetSecondaryColor returns the SecondaryColor field value
func (o *MatchesV4DataTeamPremierRosterCustomization) GetSecondaryColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecondaryColor
}

// GetSecondaryColorOk returns a tuple with the SecondaryColor field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataTeamPremierRosterCustomization) GetSecondaryColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecondaryColor, true
}

// SetSecondaryColor sets field value
func (o *MatchesV4DataTeamPremierRosterCustomization) SetSecondaryColor(v string) {
	o.SecondaryColor = v
}

// GetTertiaryColor returns the TertiaryColor field value
func (o *MatchesV4DataTeamPremierRosterCustomization) GetTertiaryColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TertiaryColor
}

// GetTertiaryColorOk returns a tuple with the TertiaryColor field value
// and a boolean to check if the value has been set.
func (o *MatchesV4DataTeamPremierRosterCustomization) GetTertiaryColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TertiaryColor, true
}

// SetTertiaryColor sets field value
func (o *MatchesV4DataTeamPremierRosterCustomization) SetTertiaryColor(v string) {
	o.TertiaryColor = v
}

func (o MatchesV4DataTeamPremierRosterCustomization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV4DataTeamPremierRosterCustomization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["icon"] = o.Icon
	toSerialize["image"] = o.Image
	toSerialize["primary_color"] = o.PrimaryColor
	toSerialize["secondary_color"] = o.SecondaryColor
	toSerialize["tertiary_color"] = o.TertiaryColor
	return toSerialize, nil
}

func (o *MatchesV4DataTeamPremierRosterCustomization) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"icon",
		"image",
		"primary_color",
		"secondary_color",
		"tertiary_color",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV4DataTeamPremierRosterCustomization := _MatchesV4DataTeamPremierRosterCustomization{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV4DataTeamPremierRosterCustomization)

	if err != nil {
		return err
	}

	*o = MatchesV4DataTeamPremierRosterCustomization(varMatchesV4DataTeamPremierRosterCustomization)

	return err
}

type NullableMatchesV4DataTeamPremierRosterCustomization struct {
	value *MatchesV4DataTeamPremierRosterCustomization
	isSet bool
}

func (v NullableMatchesV4DataTeamPremierRosterCustomization) Get() *MatchesV4DataTeamPremierRosterCustomization {
	return v.value
}

func (v *NullableMatchesV4DataTeamPremierRosterCustomization) Set(val *MatchesV4DataTeamPremierRosterCustomization) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV4DataTeamPremierRosterCustomization) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV4DataTeamPremierRosterCustomization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV4DataTeamPremierRosterCustomization(val *MatchesV4DataTeamPremierRosterCustomization) *NullableMatchesV4DataTeamPremierRosterCustomization {
	return &NullableMatchesV4DataTeamPremierRosterCustomization{value: val, isSet: true}
}

func (v NullableMatchesV4DataTeamPremierRosterCustomization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV4DataTeamPremierRosterCustomization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


