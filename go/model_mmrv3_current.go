/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MMRV3Current type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MMRV3Current{}

// MMRV3Current struct for MMRV3Current
type MMRV3Current struct {
	Elo int32 `json:"elo"`
	GamesNeededForRating int32 `json:"games_needed_for_rating"`
	LastChange int32 `json:"last_change"`
	LeaderboardPlacement NullableMMRV3LeaderboardPlacement `json:"leaderboard_placement,omitempty"`
	RankProtectionShields int32 `json:"rank_protection_shields"`
	Rr int32 `json:"rr"`
	Tier TierIdNameCombo `json:"tier"`
}

type _MMRV3Current MMRV3Current

// NewMMRV3Current instantiates a new MMRV3Current object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMMRV3Current(elo int32, gamesNeededForRating int32, lastChange int32, rankProtectionShields int32, rr int32, tier TierIdNameCombo) *MMRV3Current {
	this := MMRV3Current{}
	this.Elo = elo
	this.GamesNeededForRating = gamesNeededForRating
	this.LastChange = lastChange
	this.RankProtectionShields = rankProtectionShields
	this.Rr = rr
	this.Tier = tier
	return &this
}

// NewMMRV3CurrentWithDefaults instantiates a new MMRV3Current object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMMRV3CurrentWithDefaults() *MMRV3Current {
	this := MMRV3Current{}
	return &this
}

// GetElo returns the Elo field value
func (o *MMRV3Current) GetElo() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Elo
}

// GetEloOk returns a tuple with the Elo field value
// and a boolean to check if the value has been set.
func (o *MMRV3Current) GetEloOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Elo, true
}

// SetElo sets field value
func (o *MMRV3Current) SetElo(v int32) {
	o.Elo = v
}

// GetGamesNeededForRating returns the GamesNeededForRating field value
func (o *MMRV3Current) GetGamesNeededForRating() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GamesNeededForRating
}

// GetGamesNeededForRatingOk returns a tuple with the GamesNeededForRating field value
// and a boolean to check if the value has been set.
func (o *MMRV3Current) GetGamesNeededForRatingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GamesNeededForRating, true
}

// SetGamesNeededForRating sets field value
func (o *MMRV3Current) SetGamesNeededForRating(v int32) {
	o.GamesNeededForRating = v
}

// GetLastChange returns the LastChange field value
func (o *MMRV3Current) GetLastChange() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LastChange
}

// GetLastChangeOk returns a tuple with the LastChange field value
// and a boolean to check if the value has been set.
func (o *MMRV3Current) GetLastChangeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastChange, true
}

// SetLastChange sets field value
func (o *MMRV3Current) SetLastChange(v int32) {
	o.LastChange = v
}

// GetLeaderboardPlacement returns the LeaderboardPlacement field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MMRV3Current) GetLeaderboardPlacement() MMRV3LeaderboardPlacement {
	if o == nil || IsNil(o.LeaderboardPlacement.Get()) {
		var ret MMRV3LeaderboardPlacement
		return ret
	}
	return *o.LeaderboardPlacement.Get()
}

// GetLeaderboardPlacementOk returns a tuple with the LeaderboardPlacement field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MMRV3Current) GetLeaderboardPlacementOk() (*MMRV3LeaderboardPlacement, bool) {
	if o == nil {
		return nil, false
	}
	return o.LeaderboardPlacement.Get(), o.LeaderboardPlacement.IsSet()
}

// HasLeaderboardPlacement returns a boolean if a field has been set.
func (o *MMRV3Current) HasLeaderboardPlacement() bool {
	if o != nil && o.LeaderboardPlacement.IsSet() {
		return true
	}

	return false
}

// SetLeaderboardPlacement gets a reference to the given NullableMMRV3LeaderboardPlacement and assigns it to the LeaderboardPlacement field.
func (o *MMRV3Current) SetLeaderboardPlacement(v MMRV3LeaderboardPlacement) {
	o.LeaderboardPlacement.Set(&v)
}
// SetLeaderboardPlacementNil sets the value for LeaderboardPlacement to be an explicit nil
func (o *MMRV3Current) SetLeaderboardPlacementNil() {
	o.LeaderboardPlacement.Set(nil)
}

// UnsetLeaderboardPlacement ensures that no value is present for LeaderboardPlacement, not even an explicit nil
func (o *MMRV3Current) UnsetLeaderboardPlacement() {
	o.LeaderboardPlacement.Unset()
}

// GetRankProtectionShields returns the RankProtectionShields field value
func (o *MMRV3Current) GetRankProtectionShields() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RankProtectionShields
}

// GetRankProtectionShieldsOk returns a tuple with the RankProtectionShields field value
// and a boolean to check if the value has been set.
func (o *MMRV3Current) GetRankProtectionShieldsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RankProtectionShields, true
}

// SetRankProtectionShields sets field value
func (o *MMRV3Current) SetRankProtectionShields(v int32) {
	o.RankProtectionShields = v
}

// GetRr returns the Rr field value
func (o *MMRV3Current) GetRr() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Rr
}

// GetRrOk returns a tuple with the Rr field value
// and a boolean to check if the value has been set.
func (o *MMRV3Current) GetRrOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rr, true
}

// SetRr sets field value
func (o *MMRV3Current) SetRr(v int32) {
	o.Rr = v
}

// GetTier returns the Tier field value
func (o *MMRV3Current) GetTier() TierIdNameCombo {
	if o == nil {
		var ret TierIdNameCombo
		return ret
	}

	return o.Tier
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
func (o *MMRV3Current) GetTierOk() (*TierIdNameCombo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tier, true
}

// SetTier sets field value
func (o *MMRV3Current) SetTier(v TierIdNameCombo) {
	o.Tier = v
}

func (o MMRV3Current) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MMRV3Current) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["elo"] = o.Elo
	toSerialize["games_needed_for_rating"] = o.GamesNeededForRating
	toSerialize["last_change"] = o.LastChange
	if o.LeaderboardPlacement.IsSet() {
		toSerialize["leaderboard_placement"] = o.LeaderboardPlacement.Get()
	}
	toSerialize["rank_protection_shields"] = o.RankProtectionShields
	toSerialize["rr"] = o.Rr
	toSerialize["tier"] = o.Tier
	return toSerialize, nil
}

func (o *MMRV3Current) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"elo",
		"games_needed_for_rating",
		"last_change",
		"rank_protection_shields",
		"rr",
		"tier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMMRV3Current := _MMRV3Current{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMMRV3Current)

	if err != nil {
		return err
	}

	*o = MMRV3Current(varMMRV3Current)

	return err
}

type NullableMMRV3Current struct {
	value *MMRV3Current
	isSet bool
}

func (v NullableMMRV3Current) Get() *MMRV3Current {
	return v.value
}

func (v *NullableMMRV3Current) Set(val *MMRV3Current) {
	v.value = val
	v.isSet = true
}

func (v NullableMMRV3Current) IsSet() bool {
	return v.isSet
}

func (v *NullableMMRV3Current) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMMRV3Current(val *MMRV3Current) *NullableMMRV3Current {
	return &NullableMMRV3Current{value: val, isSet: true}
}

func (v NullableMMRV3Current) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMMRV3Current) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


