/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StoredMatchStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoredMatchStats{}

// StoredMatchStats struct for StoredMatchStats
type StoredMatchStats struct {
	Assists int32 `json:"assists"`
	Character StoredMatchStatsCharacter `json:"character"`
	Damage StoredMatchStatsDamage `json:"damage"`
	Deaths int32 `json:"deaths"`
	Kills int32 `json:"kills"`
	Level int32 `json:"level"`
	Puuid string `json:"puuid"`
	Score int32 `json:"score"`
	Shots StoredMatchStatsShots `json:"shots"`
	Team string `json:"team"`
	Tier int32 `json:"tier"`
}

type _StoredMatchStats StoredMatchStats

// NewStoredMatchStats instantiates a new StoredMatchStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoredMatchStats(assists int32, character StoredMatchStatsCharacter, damage StoredMatchStatsDamage, deaths int32, kills int32, level int32, puuid string, score int32, shots StoredMatchStatsShots, team string, tier int32) *StoredMatchStats {
	this := StoredMatchStats{}
	this.Assists = assists
	this.Character = character
	this.Damage = damage
	this.Deaths = deaths
	this.Kills = kills
	this.Level = level
	this.Puuid = puuid
	this.Score = score
	this.Shots = shots
	this.Team = team
	this.Tier = tier
	return &this
}

// NewStoredMatchStatsWithDefaults instantiates a new StoredMatchStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoredMatchStatsWithDefaults() *StoredMatchStats {
	this := StoredMatchStats{}
	return &this
}

// GetAssists returns the Assists field value
func (o *StoredMatchStats) GetAssists() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Assists
}

// GetAssistsOk returns a tuple with the Assists field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetAssistsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assists, true
}

// SetAssists sets field value
func (o *StoredMatchStats) SetAssists(v int32) {
	o.Assists = v
}

// GetCharacter returns the Character field value
func (o *StoredMatchStats) GetCharacter() StoredMatchStatsCharacter {
	if o == nil {
		var ret StoredMatchStatsCharacter
		return ret
	}

	return o.Character
}

// GetCharacterOk returns a tuple with the Character field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetCharacterOk() (*StoredMatchStatsCharacter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Character, true
}

// SetCharacter sets field value
func (o *StoredMatchStats) SetCharacter(v StoredMatchStatsCharacter) {
	o.Character = v
}

// GetDamage returns the Damage field value
func (o *StoredMatchStats) GetDamage() StoredMatchStatsDamage {
	if o == nil {
		var ret StoredMatchStatsDamage
		return ret
	}

	return o.Damage
}

// GetDamageOk returns a tuple with the Damage field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetDamageOk() (*StoredMatchStatsDamage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Damage, true
}

// SetDamage sets field value
func (o *StoredMatchStats) SetDamage(v StoredMatchStatsDamage) {
	o.Damage = v
}

// GetDeaths returns the Deaths field value
func (o *StoredMatchStats) GetDeaths() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Deaths
}

// GetDeathsOk returns a tuple with the Deaths field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetDeathsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deaths, true
}

// SetDeaths sets field value
func (o *StoredMatchStats) SetDeaths(v int32) {
	o.Deaths = v
}

// GetKills returns the Kills field value
func (o *StoredMatchStats) GetKills() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Kills
}

// GetKillsOk returns a tuple with the Kills field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetKillsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kills, true
}

// SetKills sets field value
func (o *StoredMatchStats) SetKills(v int32) {
	o.Kills = v
}

// GetLevel returns the Level field value
func (o *StoredMatchStats) GetLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *StoredMatchStats) SetLevel(v int32) {
	o.Level = v
}

// GetPuuid returns the Puuid field value
func (o *StoredMatchStats) GetPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Puuid
}

// GetPuuidOk returns a tuple with the Puuid field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Puuid, true
}

// SetPuuid sets field value
func (o *StoredMatchStats) SetPuuid(v string) {
	o.Puuid = v
}

// GetScore returns the Score field value
func (o *StoredMatchStats) GetScore() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetScoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *StoredMatchStats) SetScore(v int32) {
	o.Score = v
}

// GetShots returns the Shots field value
func (o *StoredMatchStats) GetShots() StoredMatchStatsShots {
	if o == nil {
		var ret StoredMatchStatsShots
		return ret
	}

	return o.Shots
}

// GetShotsOk returns a tuple with the Shots field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetShotsOk() (*StoredMatchStatsShots, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Shots, true
}

// SetShots sets field value
func (o *StoredMatchStats) SetShots(v StoredMatchStatsShots) {
	o.Shots = v
}

// GetTeam returns the Team field value
func (o *StoredMatchStats) GetTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Team
}

// GetTeamOk returns a tuple with the Team field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetTeamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Team, true
}

// SetTeam sets field value
func (o *StoredMatchStats) SetTeam(v string) {
	o.Team = v
}

// GetTier returns the Tier field value
func (o *StoredMatchStats) GetTier() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Tier
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStats) GetTierOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tier, true
}

// SetTier sets field value
func (o *StoredMatchStats) SetTier(v int32) {
	o.Tier = v
}

func (o StoredMatchStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoredMatchStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assists"] = o.Assists
	toSerialize["character"] = o.Character
	toSerialize["damage"] = o.Damage
	toSerialize["deaths"] = o.Deaths
	toSerialize["kills"] = o.Kills
	toSerialize["level"] = o.Level
	toSerialize["puuid"] = o.Puuid
	toSerialize["score"] = o.Score
	toSerialize["shots"] = o.Shots
	toSerialize["team"] = o.Team
	toSerialize["tier"] = o.Tier
	return toSerialize, nil
}

func (o *StoredMatchStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"assists",
		"character",
		"damage",
		"deaths",
		"kills",
		"level",
		"puuid",
		"score",
		"shots",
		"team",
		"tier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStoredMatchStats := _StoredMatchStats{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStoredMatchStats)

	if err != nil {
		return err
	}

	*o = StoredMatchStats(varStoredMatchStats)

	return err
}

type NullableStoredMatchStats struct {
	value *StoredMatchStats
	isSet bool
}

func (v NullableStoredMatchStats) Get() *StoredMatchStats {
	return v.value
}

func (v *NullableStoredMatchStats) Set(val *StoredMatchStats) {
	v.value = val
	v.isSet = true
}

func (v NullableStoredMatchStats) IsSet() bool {
	return v.isSet
}

func (v *NullableStoredMatchStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoredMatchStats(val *StoredMatchStats) *NullableStoredMatchStats {
	return &NullableStoredMatchStats{value: val, isSet: true}
}

func (v NullableStoredMatchStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoredMatchStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


