/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StoredMatchStatsShots type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoredMatchStatsShots{}

// StoredMatchStatsShots struct for StoredMatchStatsShots
type StoredMatchStatsShots struct {
	Body int32 `json:"body"`
	Head int32 `json:"head"`
	Leg int32 `json:"leg"`
}

type _StoredMatchStatsShots StoredMatchStatsShots

// NewStoredMatchStatsShots instantiates a new StoredMatchStatsShots object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoredMatchStatsShots(body int32, head int32, leg int32) *StoredMatchStatsShots {
	this := StoredMatchStatsShots{}
	this.Body = body
	this.Head = head
	this.Leg = leg
	return &this
}

// NewStoredMatchStatsShotsWithDefaults instantiates a new StoredMatchStatsShots object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoredMatchStatsShotsWithDefaults() *StoredMatchStatsShots {
	this := StoredMatchStatsShots{}
	return &this
}

// GetBody returns the Body field value
func (o *StoredMatchStatsShots) GetBody() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStatsShots) GetBodyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *StoredMatchStatsShots) SetBody(v int32) {
	o.Body = v
}

// GetHead returns the Head field value
func (o *StoredMatchStatsShots) GetHead() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Head
}

// GetHeadOk returns a tuple with the Head field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStatsShots) GetHeadOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Head, true
}

// SetHead sets field value
func (o *StoredMatchStatsShots) SetHead(v int32) {
	o.Head = v
}

// GetLeg returns the Leg field value
func (o *StoredMatchStatsShots) GetLeg() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Leg
}

// GetLegOk returns a tuple with the Leg field value
// and a boolean to check if the value has been set.
func (o *StoredMatchStatsShots) GetLegOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Leg, true
}

// SetLeg sets field value
func (o *StoredMatchStatsShots) SetLeg(v int32) {
	o.Leg = v
}

func (o StoredMatchStatsShots) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoredMatchStatsShots) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["body"] = o.Body
	toSerialize["head"] = o.Head
	toSerialize["leg"] = o.Leg
	return toSerialize, nil
}

func (o *StoredMatchStatsShots) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"body",
		"head",
		"leg",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStoredMatchStatsShots := _StoredMatchStatsShots{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStoredMatchStatsShots)

	if err != nil {
		return err
	}

	*o = StoredMatchStatsShots(varStoredMatchStatsShots)

	return err
}

type NullableStoredMatchStatsShots struct {
	value *StoredMatchStatsShots
	isSet bool
}

func (v NullableStoredMatchStatsShots) Get() *StoredMatchStatsShots {
	return v.value
}

func (v *NullableStoredMatchStatsShots) Set(val *StoredMatchStatsShots) {
	v.value = val
	v.isSet = true
}

func (v NullableStoredMatchStatsShots) IsSet() bool {
	return v.isSet
}

func (v *NullableStoredMatchStatsShots) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoredMatchStatsShots(val *StoredMatchStatsShots) *NullableStoredMatchStatsShots {
	return &NullableStoredMatchStatsShots{value: val, isSet: true}
}

func (v NullableStoredMatchStatsShots) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoredMatchStatsShots) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


