/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QueueStatusV1SkillDisparity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueueStatusV1SkillDisparity{}

// QueueStatusV1SkillDisparity struct for QueueStatusV1SkillDisparity
type QueueStatusV1SkillDisparity struct {
	MaxTier QueueStatusV1IDNamePair `json:"max_tier"`
	Name string `json:"name"`
	Tier int32 `json:"tier"`
}

type _QueueStatusV1SkillDisparity QueueStatusV1SkillDisparity

// NewQueueStatusV1SkillDisparity instantiates a new QueueStatusV1SkillDisparity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueueStatusV1SkillDisparity(maxTier QueueStatusV1IDNamePair, name string, tier int32) *QueueStatusV1SkillDisparity {
	this := QueueStatusV1SkillDisparity{}
	this.MaxTier = maxTier
	this.Name = name
	this.Tier = tier
	return &this
}

// NewQueueStatusV1SkillDisparityWithDefaults instantiates a new QueueStatusV1SkillDisparity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueueStatusV1SkillDisparityWithDefaults() *QueueStatusV1SkillDisparity {
	this := QueueStatusV1SkillDisparity{}
	return &this
}

// GetMaxTier returns the MaxTier field value
func (o *QueueStatusV1SkillDisparity) GetMaxTier() QueueStatusV1IDNamePair {
	if o == nil {
		var ret QueueStatusV1IDNamePair
		return ret
	}

	return o.MaxTier
}

// GetMaxTierOk returns a tuple with the MaxTier field value
// and a boolean to check if the value has been set.
func (o *QueueStatusV1SkillDisparity) GetMaxTierOk() (*QueueStatusV1IDNamePair, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxTier, true
}

// SetMaxTier sets field value
func (o *QueueStatusV1SkillDisparity) SetMaxTier(v QueueStatusV1IDNamePair) {
	o.MaxTier = v
}

// GetName returns the Name field value
func (o *QueueStatusV1SkillDisparity) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QueueStatusV1SkillDisparity) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QueueStatusV1SkillDisparity) SetName(v string) {
	o.Name = v
}

// GetTier returns the Tier field value
func (o *QueueStatusV1SkillDisparity) GetTier() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Tier
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
func (o *QueueStatusV1SkillDisparity) GetTierOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tier, true
}

// SetTier sets field value
func (o *QueueStatusV1SkillDisparity) SetTier(v int32) {
	o.Tier = v
}

func (o QueueStatusV1SkillDisparity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueueStatusV1SkillDisparity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max_tier"] = o.MaxTier
	toSerialize["name"] = o.Name
	toSerialize["tier"] = o.Tier
	return toSerialize, nil
}

func (o *QueueStatusV1SkillDisparity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"max_tier",
		"name",
		"tier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueueStatusV1SkillDisparity := _QueueStatusV1SkillDisparity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueueStatusV1SkillDisparity)

	if err != nil {
		return err
	}

	*o = QueueStatusV1SkillDisparity(varQueueStatusV1SkillDisparity)

	return err
}

type NullableQueueStatusV1SkillDisparity struct {
	value *QueueStatusV1SkillDisparity
	isSet bool
}

func (v NullableQueueStatusV1SkillDisparity) Get() *QueueStatusV1SkillDisparity {
	return v.value
}

func (v *NullableQueueStatusV1SkillDisparity) Set(val *QueueStatusV1SkillDisparity) {
	v.value = val
	v.isSet = true
}

func (v NullableQueueStatusV1SkillDisparity) IsSet() bool {
	return v.isSet
}

func (v *NullableQueueStatusV1SkillDisparity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueueStatusV1SkillDisparity(val *QueueStatusV1SkillDisparity) *NullableQueueStatusV1SkillDisparity {
	return &NullableQueueStatusV1SkillDisparity{value: val, isSet: true}
}

func (v NullableQueueStatusV1SkillDisparity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueueStatusV1SkillDisparity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


