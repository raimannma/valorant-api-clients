/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LeaderboardV2Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LeaderboardV2Response{}

// LeaderboardV2Response struct for LeaderboardV2Response
type LeaderboardV2Response struct {
	Immortal1Threshold int32 `json:"immortal_1_threshold"`
	Immortal2Threshold int32 `json:"immortal_2_threshold"`
	Immortal3Threshold int32 `json:"immortal_3_threshold"`
	LastUpdate int64 `json:"last_update"`
	NextUpdate int64 `json:"next_update"`
	Players []LeaderboardPVPPlayer `json:"players"`
	RadiantThreshold int32 `json:"radiant_threshold"`
	TotalPlayers int32 `json:"total_players"`
}

type _LeaderboardV2Response LeaderboardV2Response

// NewLeaderboardV2Response instantiates a new LeaderboardV2Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLeaderboardV2Response(immortal1Threshold int32, immortal2Threshold int32, immortal3Threshold int32, lastUpdate int64, nextUpdate int64, players []LeaderboardPVPPlayer, radiantThreshold int32, totalPlayers int32) *LeaderboardV2Response {
	this := LeaderboardV2Response{}
	this.Immortal1Threshold = immortal1Threshold
	this.Immortal2Threshold = immortal2Threshold
	this.Immortal3Threshold = immortal3Threshold
	this.LastUpdate = lastUpdate
	this.NextUpdate = nextUpdate
	this.Players = players
	this.RadiantThreshold = radiantThreshold
	this.TotalPlayers = totalPlayers
	return &this
}

// NewLeaderboardV2ResponseWithDefaults instantiates a new LeaderboardV2Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLeaderboardV2ResponseWithDefaults() *LeaderboardV2Response {
	this := LeaderboardV2Response{}
	return &this
}

// GetImmortal1Threshold returns the Immortal1Threshold field value
func (o *LeaderboardV2Response) GetImmortal1Threshold() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Immortal1Threshold
}

// GetImmortal1ThresholdOk returns a tuple with the Immortal1Threshold field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV2Response) GetImmortal1ThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Immortal1Threshold, true
}

// SetImmortal1Threshold sets field value
func (o *LeaderboardV2Response) SetImmortal1Threshold(v int32) {
	o.Immortal1Threshold = v
}

// GetImmortal2Threshold returns the Immortal2Threshold field value
func (o *LeaderboardV2Response) GetImmortal2Threshold() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Immortal2Threshold
}

// GetImmortal2ThresholdOk returns a tuple with the Immortal2Threshold field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV2Response) GetImmortal2ThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Immortal2Threshold, true
}

// SetImmortal2Threshold sets field value
func (o *LeaderboardV2Response) SetImmortal2Threshold(v int32) {
	o.Immortal2Threshold = v
}

// GetImmortal3Threshold returns the Immortal3Threshold field value
func (o *LeaderboardV2Response) GetImmortal3Threshold() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Immortal3Threshold
}

// GetImmortal3ThresholdOk returns a tuple with the Immortal3Threshold field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV2Response) GetImmortal3ThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Immortal3Threshold, true
}

// SetImmortal3Threshold sets field value
func (o *LeaderboardV2Response) SetImmortal3Threshold(v int32) {
	o.Immortal3Threshold = v
}

// GetLastUpdate returns the LastUpdate field value
func (o *LeaderboardV2Response) GetLastUpdate() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV2Response) GetLastUpdateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdate, true
}

// SetLastUpdate sets field value
func (o *LeaderboardV2Response) SetLastUpdate(v int64) {
	o.LastUpdate = v
}

// GetNextUpdate returns the NextUpdate field value
func (o *LeaderboardV2Response) GetNextUpdate() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NextUpdate
}

// GetNextUpdateOk returns a tuple with the NextUpdate field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV2Response) GetNextUpdateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextUpdate, true
}

// SetNextUpdate sets field value
func (o *LeaderboardV2Response) SetNextUpdate(v int64) {
	o.NextUpdate = v
}

// GetPlayers returns the Players field value
func (o *LeaderboardV2Response) GetPlayers() []LeaderboardPVPPlayer {
	if o == nil {
		var ret []LeaderboardPVPPlayer
		return ret
	}

	return o.Players
}

// GetPlayersOk returns a tuple with the Players field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV2Response) GetPlayersOk() ([]LeaderboardPVPPlayer, bool) {
	if o == nil {
		return nil, false
	}
	return o.Players, true
}

// SetPlayers sets field value
func (o *LeaderboardV2Response) SetPlayers(v []LeaderboardPVPPlayer) {
	o.Players = v
}

// GetRadiantThreshold returns the RadiantThreshold field value
func (o *LeaderboardV2Response) GetRadiantThreshold() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RadiantThreshold
}

// GetRadiantThresholdOk returns a tuple with the RadiantThreshold field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV2Response) GetRadiantThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RadiantThreshold, true
}

// SetRadiantThreshold sets field value
func (o *LeaderboardV2Response) SetRadiantThreshold(v int32) {
	o.RadiantThreshold = v
}

// GetTotalPlayers returns the TotalPlayers field value
func (o *LeaderboardV2Response) GetTotalPlayers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalPlayers
}

// GetTotalPlayersOk returns a tuple with the TotalPlayers field value
// and a boolean to check if the value has been set.
func (o *LeaderboardV2Response) GetTotalPlayersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPlayers, true
}

// SetTotalPlayers sets field value
func (o *LeaderboardV2Response) SetTotalPlayers(v int32) {
	o.TotalPlayers = v
}

func (o LeaderboardV2Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LeaderboardV2Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["immortal_1_threshold"] = o.Immortal1Threshold
	toSerialize["immortal_2_threshold"] = o.Immortal2Threshold
	toSerialize["immortal_3_threshold"] = o.Immortal3Threshold
	toSerialize["last_update"] = o.LastUpdate
	toSerialize["next_update"] = o.NextUpdate
	toSerialize["players"] = o.Players
	toSerialize["radiant_threshold"] = o.RadiantThreshold
	toSerialize["total_players"] = o.TotalPlayers
	return toSerialize, nil
}

func (o *LeaderboardV2Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"immortal_1_threshold",
		"immortal_2_threshold",
		"immortal_3_threshold",
		"last_update",
		"next_update",
		"players",
		"radiant_threshold",
		"total_players",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLeaderboardV2Response := _LeaderboardV2Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLeaderboardV2Response)

	if err != nil {
		return err
	}

	*o = LeaderboardV2Response(varLeaderboardV2Response)

	return err
}

type NullableLeaderboardV2Response struct {
	value *LeaderboardV2Response
	isSet bool
}

func (v NullableLeaderboardV2Response) Get() *LeaderboardV2Response {
	return v.value
}

func (v *NullableLeaderboardV2Response) Set(val *LeaderboardV2Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLeaderboardV2Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLeaderboardV2Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeaderboardV2Response(val *LeaderboardV2Response) *NullableLeaderboardV2Response {
	return &NullableLeaderboardV2Response{value: val, isSet: true}
}

func (v NullableLeaderboardV2Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeaderboardV2Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


