/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountV1Data type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountV1Data{}

// AccountV1Data struct for AccountV1Data
type AccountV1Data struct {
	AccountLevel int32 `json:"account_level"`
	Card AccountV1DataCard `json:"card"`
	LastUpdate string `json:"last_update"`
	LastUpdateRaw int64 `json:"last_update_raw"`
	Name string `json:"name"`
	Puuid string `json:"puuid"`
	Region string `json:"region"`
	Tag string `json:"tag"`
}

type _AccountV1Data AccountV1Data

// NewAccountV1Data instantiates a new AccountV1Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountV1Data(accountLevel int32, card AccountV1DataCard, lastUpdate string, lastUpdateRaw int64, name string, puuid string, region string, tag string) *AccountV1Data {
	this := AccountV1Data{}
	this.AccountLevel = accountLevel
	this.Card = card
	this.LastUpdate = lastUpdate
	this.LastUpdateRaw = lastUpdateRaw
	this.Name = name
	this.Puuid = puuid
	this.Region = region
	this.Tag = tag
	return &this
}

// NewAccountV1DataWithDefaults instantiates a new AccountV1Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountV1DataWithDefaults() *AccountV1Data {
	this := AccountV1Data{}
	return &this
}

// GetAccountLevel returns the AccountLevel field value
func (o *AccountV1Data) GetAccountLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountLevel
}

// GetAccountLevelOk returns a tuple with the AccountLevel field value
// and a boolean to check if the value has been set.
func (o *AccountV1Data) GetAccountLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLevel, true
}

// SetAccountLevel sets field value
func (o *AccountV1Data) SetAccountLevel(v int32) {
	o.AccountLevel = v
}

// GetCard returns the Card field value
func (o *AccountV1Data) GetCard() AccountV1DataCard {
	if o == nil {
		var ret AccountV1DataCard
		return ret
	}

	return o.Card
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
func (o *AccountV1Data) GetCardOk() (*AccountV1DataCard, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Card, true
}

// SetCard sets field value
func (o *AccountV1Data) SetCard(v AccountV1DataCard) {
	o.Card = v
}

// GetLastUpdate returns the LastUpdate field value
func (o *AccountV1Data) GetLastUpdate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value
// and a boolean to check if the value has been set.
func (o *AccountV1Data) GetLastUpdateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdate, true
}

// SetLastUpdate sets field value
func (o *AccountV1Data) SetLastUpdate(v string) {
	o.LastUpdate = v
}

// GetLastUpdateRaw returns the LastUpdateRaw field value
func (o *AccountV1Data) GetLastUpdateRaw() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastUpdateRaw
}

// GetLastUpdateRawOk returns a tuple with the LastUpdateRaw field value
// and a boolean to check if the value has been set.
func (o *AccountV1Data) GetLastUpdateRawOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdateRaw, true
}

// SetLastUpdateRaw sets field value
func (o *AccountV1Data) SetLastUpdateRaw(v int64) {
	o.LastUpdateRaw = v
}

// GetName returns the Name field value
func (o *AccountV1Data) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccountV1Data) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccountV1Data) SetName(v string) {
	o.Name = v
}

// GetPuuid returns the Puuid field value
func (o *AccountV1Data) GetPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Puuid
}

// GetPuuidOk returns a tuple with the Puuid field value
// and a boolean to check if the value has been set.
func (o *AccountV1Data) GetPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Puuid, true
}

// SetPuuid sets field value
func (o *AccountV1Data) SetPuuid(v string) {
	o.Puuid = v
}

// GetRegion returns the Region field value
func (o *AccountV1Data) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AccountV1Data) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *AccountV1Data) SetRegion(v string) {
	o.Region = v
}

// GetTag returns the Tag field value
func (o *AccountV1Data) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *AccountV1Data) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *AccountV1Data) SetTag(v string) {
	o.Tag = v
}

func (o AccountV1Data) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountV1Data) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_level"] = o.AccountLevel
	toSerialize["card"] = o.Card
	toSerialize["last_update"] = o.LastUpdate
	toSerialize["last_update_raw"] = o.LastUpdateRaw
	toSerialize["name"] = o.Name
	toSerialize["puuid"] = o.Puuid
	toSerialize["region"] = o.Region
	toSerialize["tag"] = o.Tag
	return toSerialize, nil
}

func (o *AccountV1Data) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_level",
		"card",
		"last_update",
		"last_update_raw",
		"name",
		"puuid",
		"region",
		"tag",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountV1Data := _AccountV1Data{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountV1Data)

	if err != nil {
		return err
	}

	*o = AccountV1Data(varAccountV1Data)

	return err
}

type NullableAccountV1Data struct {
	value *AccountV1Data
	isSet bool
}

func (v NullableAccountV1Data) Get() *AccountV1Data {
	return v.value
}

func (v *NullableAccountV1Data) Set(val *AccountV1Data) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountV1Data) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountV1Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountV1Data(val *AccountV1Data) *NullableAccountV1Data {
	return &NullableAccountV1Data{value: val, isSet: true}
}

func (v NullableAccountV1Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountV1Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


