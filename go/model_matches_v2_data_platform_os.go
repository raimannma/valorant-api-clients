/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataPlatformOs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataPlatformOs{}

// MatchesV2DataPlatformOs struct for MatchesV2DataPlatformOs
type MatchesV2DataPlatformOs struct {
	Name string `json:"name"`
	Version string `json:"version"`
}

type _MatchesV2DataPlatformOs MatchesV2DataPlatformOs

// NewMatchesV2DataPlatformOs instantiates a new MatchesV2DataPlatformOs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataPlatformOs(name string, version string) *MatchesV2DataPlatformOs {
	this := MatchesV2DataPlatformOs{}
	this.Name = name
	this.Version = version
	return &this
}

// NewMatchesV2DataPlatformOsWithDefaults instantiates a new MatchesV2DataPlatformOs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataPlatformOsWithDefaults() *MatchesV2DataPlatformOs {
	this := MatchesV2DataPlatformOs{}
	return &this
}

// GetName returns the Name field value
func (o *MatchesV2DataPlatformOs) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlatformOs) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MatchesV2DataPlatformOs) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value
func (o *MatchesV2DataPlatformOs) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlatformOs) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *MatchesV2DataPlatformOs) SetVersion(v string) {
	o.Version = v
}

func (o MatchesV2DataPlatformOs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataPlatformOs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

func (o *MatchesV2DataPlatformOs) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataPlatformOs := _MatchesV2DataPlatformOs{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataPlatformOs)

	if err != nil {
		return err
	}

	*o = MatchesV2DataPlatformOs(varMatchesV2DataPlatformOs)

	return err
}

type NullableMatchesV2DataPlatformOs struct {
	value *MatchesV2DataPlatformOs
	isSet bool
}

func (v NullableMatchesV2DataPlatformOs) Get() *MatchesV2DataPlatformOs {
	return v.value
}

func (v *NullableMatchesV2DataPlatformOs) Set(val *MatchesV2DataPlatformOs) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataPlatformOs) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataPlatformOs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataPlatformOs(val *MatchesV2DataPlatformOs) *NullableMatchesV2DataPlatformOs {
	return &NullableMatchesV2DataPlatformOs{value: val, isSet: true}
}

func (v NullableMatchesV2DataPlatformOs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataPlatformOs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


