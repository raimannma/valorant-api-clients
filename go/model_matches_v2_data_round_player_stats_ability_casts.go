/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
)

// checks if the MatchesV2DataRoundPlayerStatsAbilityCasts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataRoundPlayerStatsAbilityCasts{}

// MatchesV2DataRoundPlayerStatsAbilityCasts struct for MatchesV2DataRoundPlayerStatsAbilityCasts
type MatchesV2DataRoundPlayerStatsAbilityCasts struct {
	CCasts NullableInt32 `json:"c_casts,omitempty"`
	ECasts NullableInt32 `json:"e_casts,omitempty"`
	QCasts NullableInt32 `json:"q_casts,omitempty"`
	XCasts NullableInt32 `json:"x_casts,omitempty"`
}

// NewMatchesV2DataRoundPlayerStatsAbilityCasts instantiates a new MatchesV2DataRoundPlayerStatsAbilityCasts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataRoundPlayerStatsAbilityCasts() *MatchesV2DataRoundPlayerStatsAbilityCasts {
	this := MatchesV2DataRoundPlayerStatsAbilityCasts{}
	return &this
}

// NewMatchesV2DataRoundPlayerStatsAbilityCastsWithDefaults instantiates a new MatchesV2DataRoundPlayerStatsAbilityCasts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataRoundPlayerStatsAbilityCastsWithDefaults() *MatchesV2DataRoundPlayerStatsAbilityCasts {
	this := MatchesV2DataRoundPlayerStatsAbilityCasts{}
	return &this
}

// GetCCasts returns the CCasts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) GetCCasts() int32 {
	if o == nil || IsNil(o.CCasts.Get()) {
		var ret int32
		return ret
	}
	return *o.CCasts.Get()
}

// GetCCastsOk returns a tuple with the CCasts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) GetCCastsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CCasts.Get(), o.CCasts.IsSet()
}

// HasCCasts returns a boolean if a field has been set.
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) HasCCasts() bool {
	if o != nil && o.CCasts.IsSet() {
		return true
	}

	return false
}

// SetCCasts gets a reference to the given NullableInt32 and assigns it to the CCasts field.
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) SetCCasts(v int32) {
	o.CCasts.Set(&v)
}
// SetCCastsNil sets the value for CCasts to be an explicit nil
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) SetCCastsNil() {
	o.CCasts.Set(nil)
}

// UnsetCCasts ensures that no value is present for CCasts, not even an explicit nil
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) UnsetCCasts() {
	o.CCasts.Unset()
}

// GetECasts returns the ECasts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) GetECasts() int32 {
	if o == nil || IsNil(o.ECasts.Get()) {
		var ret int32
		return ret
	}
	return *o.ECasts.Get()
}

// GetECastsOk returns a tuple with the ECasts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) GetECastsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ECasts.Get(), o.ECasts.IsSet()
}

// HasECasts returns a boolean if a field has been set.
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) HasECasts() bool {
	if o != nil && o.ECasts.IsSet() {
		return true
	}

	return false
}

// SetECasts gets a reference to the given NullableInt32 and assigns it to the ECasts field.
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) SetECasts(v int32) {
	o.ECasts.Set(&v)
}
// SetECastsNil sets the value for ECasts to be an explicit nil
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) SetECastsNil() {
	o.ECasts.Set(nil)
}

// UnsetECasts ensures that no value is present for ECasts, not even an explicit nil
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) UnsetECasts() {
	o.ECasts.Unset()
}

// GetQCasts returns the QCasts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) GetQCasts() int32 {
	if o == nil || IsNil(o.QCasts.Get()) {
		var ret int32
		return ret
	}
	return *o.QCasts.Get()
}

// GetQCastsOk returns a tuple with the QCasts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) GetQCastsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.QCasts.Get(), o.QCasts.IsSet()
}

// HasQCasts returns a boolean if a field has been set.
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) HasQCasts() bool {
	if o != nil && o.QCasts.IsSet() {
		return true
	}

	return false
}

// SetQCasts gets a reference to the given NullableInt32 and assigns it to the QCasts field.
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) SetQCasts(v int32) {
	o.QCasts.Set(&v)
}
// SetQCastsNil sets the value for QCasts to be an explicit nil
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) SetQCastsNil() {
	o.QCasts.Set(nil)
}

// UnsetQCasts ensures that no value is present for QCasts, not even an explicit nil
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) UnsetQCasts() {
	o.QCasts.Unset()
}

// GetXCasts returns the XCasts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) GetXCasts() int32 {
	if o == nil || IsNil(o.XCasts.Get()) {
		var ret int32
		return ret
	}
	return *o.XCasts.Get()
}

// GetXCastsOk returns a tuple with the XCasts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) GetXCastsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.XCasts.Get(), o.XCasts.IsSet()
}

// HasXCasts returns a boolean if a field has been set.
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) HasXCasts() bool {
	if o != nil && o.XCasts.IsSet() {
		return true
	}

	return false
}

// SetXCasts gets a reference to the given NullableInt32 and assigns it to the XCasts field.
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) SetXCasts(v int32) {
	o.XCasts.Set(&v)
}
// SetXCastsNil sets the value for XCasts to be an explicit nil
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) SetXCastsNil() {
	o.XCasts.Set(nil)
}

// UnsetXCasts ensures that no value is present for XCasts, not even an explicit nil
func (o *MatchesV2DataRoundPlayerStatsAbilityCasts) UnsetXCasts() {
	o.XCasts.Unset()
}

func (o MatchesV2DataRoundPlayerStatsAbilityCasts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataRoundPlayerStatsAbilityCasts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CCasts.IsSet() {
		toSerialize["c_casts"] = o.CCasts.Get()
	}
	if o.ECasts.IsSet() {
		toSerialize["e_casts"] = o.ECasts.Get()
	}
	if o.QCasts.IsSet() {
		toSerialize["q_casts"] = o.QCasts.Get()
	}
	if o.XCasts.IsSet() {
		toSerialize["x_casts"] = o.XCasts.Get()
	}
	return toSerialize, nil
}

type NullableMatchesV2DataRoundPlayerStatsAbilityCasts struct {
	value *MatchesV2DataRoundPlayerStatsAbilityCasts
	isSet bool
}

func (v NullableMatchesV2DataRoundPlayerStatsAbilityCasts) Get() *MatchesV2DataRoundPlayerStatsAbilityCasts {
	return v.value
}

func (v *NullableMatchesV2DataRoundPlayerStatsAbilityCasts) Set(val *MatchesV2DataRoundPlayerStatsAbilityCasts) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataRoundPlayerStatsAbilityCasts) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataRoundPlayerStatsAbilityCasts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataRoundPlayerStatsAbilityCasts(val *MatchesV2DataRoundPlayerStatsAbilityCasts) *NullableMatchesV2DataRoundPlayerStatsAbilityCasts {
	return &NullableMatchesV2DataRoundPlayerStatsAbilityCasts{value: val, isSet: true}
}

func (v NullableMatchesV2DataRoundPlayerStatsAbilityCasts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataRoundPlayerStatsAbilityCasts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


