/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataCoach type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataCoach{}

// MatchesV2DataCoach struct for MatchesV2DataCoach
type MatchesV2DataCoach struct {
	Puuid string `json:"puuid"`
	Team string `json:"team"`
}

type _MatchesV2DataCoach MatchesV2DataCoach

// NewMatchesV2DataCoach instantiates a new MatchesV2DataCoach object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataCoach(puuid string, team string) *MatchesV2DataCoach {
	this := MatchesV2DataCoach{}
	this.Puuid = puuid
	this.Team = team
	return &this
}

// NewMatchesV2DataCoachWithDefaults instantiates a new MatchesV2DataCoach object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataCoachWithDefaults() *MatchesV2DataCoach {
	this := MatchesV2DataCoach{}
	return &this
}

// GetPuuid returns the Puuid field value
func (o *MatchesV2DataCoach) GetPuuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Puuid
}

// GetPuuidOk returns a tuple with the Puuid field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataCoach) GetPuuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Puuid, true
}

// SetPuuid sets field value
func (o *MatchesV2DataCoach) SetPuuid(v string) {
	o.Puuid = v
}

// GetTeam returns the Team field value
func (o *MatchesV2DataCoach) GetTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Team
}

// GetTeamOk returns a tuple with the Team field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataCoach) GetTeamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Team, true
}

// SetTeam sets field value
func (o *MatchesV2DataCoach) SetTeam(v string) {
	o.Team = v
}

func (o MatchesV2DataCoach) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataCoach) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["puuid"] = o.Puuid
	toSerialize["team"] = o.Team
	return toSerialize, nil
}

func (o *MatchesV2DataCoach) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"puuid",
		"team",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataCoach := _MatchesV2DataCoach{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataCoach)

	if err != nil {
		return err
	}

	*o = MatchesV2DataCoach(varMatchesV2DataCoach)

	return err
}

type NullableMatchesV2DataCoach struct {
	value *MatchesV2DataCoach
	isSet bool
}

func (v NullableMatchesV2DataCoach) Get() *MatchesV2DataCoach {
	return v.value
}

func (v *NullableMatchesV2DataCoach) Set(val *MatchesV2DataCoach) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataCoach) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataCoach) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataCoach(val *MatchesV2DataCoach) *NullableMatchesV2DataCoach {
	return &NullableMatchesV2DataCoach{value: val, isSet: true}
}

func (v NullableMatchesV2DataCoach) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataCoach) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


