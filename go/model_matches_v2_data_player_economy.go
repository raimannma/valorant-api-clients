/*
HenrikDev API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package henrikdevapiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchesV2DataPlayerEconomy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesV2DataPlayerEconomy{}

// MatchesV2DataPlayerEconomy struct for MatchesV2DataPlayerEconomy
type MatchesV2DataPlayerEconomy struct {
	LoadoutValue MatchesV2DataPlayerEconomyValue `json:"loadout_value"`
	Spent MatchesV2DataPlayerEconomyValue `json:"spent"`
}

type _MatchesV2DataPlayerEconomy MatchesV2DataPlayerEconomy

// NewMatchesV2DataPlayerEconomy instantiates a new MatchesV2DataPlayerEconomy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesV2DataPlayerEconomy(loadoutValue MatchesV2DataPlayerEconomyValue, spent MatchesV2DataPlayerEconomyValue) *MatchesV2DataPlayerEconomy {
	this := MatchesV2DataPlayerEconomy{}
	this.LoadoutValue = loadoutValue
	this.Spent = spent
	return &this
}

// NewMatchesV2DataPlayerEconomyWithDefaults instantiates a new MatchesV2DataPlayerEconomy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesV2DataPlayerEconomyWithDefaults() *MatchesV2DataPlayerEconomy {
	this := MatchesV2DataPlayerEconomy{}
	return &this
}

// GetLoadoutValue returns the LoadoutValue field value
func (o *MatchesV2DataPlayerEconomy) GetLoadoutValue() MatchesV2DataPlayerEconomyValue {
	if o == nil {
		var ret MatchesV2DataPlayerEconomyValue
		return ret
	}

	return o.LoadoutValue
}

// GetLoadoutValueOk returns a tuple with the LoadoutValue field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayerEconomy) GetLoadoutValueOk() (*MatchesV2DataPlayerEconomyValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoadoutValue, true
}

// SetLoadoutValue sets field value
func (o *MatchesV2DataPlayerEconomy) SetLoadoutValue(v MatchesV2DataPlayerEconomyValue) {
	o.LoadoutValue = v
}

// GetSpent returns the Spent field value
func (o *MatchesV2DataPlayerEconomy) GetSpent() MatchesV2DataPlayerEconomyValue {
	if o == nil {
		var ret MatchesV2DataPlayerEconomyValue
		return ret
	}

	return o.Spent
}

// GetSpentOk returns a tuple with the Spent field value
// and a boolean to check if the value has been set.
func (o *MatchesV2DataPlayerEconomy) GetSpentOk() (*MatchesV2DataPlayerEconomyValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spent, true
}

// SetSpent sets field value
func (o *MatchesV2DataPlayerEconomy) SetSpent(v MatchesV2DataPlayerEconomyValue) {
	o.Spent = v
}

func (o MatchesV2DataPlayerEconomy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesV2DataPlayerEconomy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["loadout_value"] = o.LoadoutValue
	toSerialize["spent"] = o.Spent
	return toSerialize, nil
}

func (o *MatchesV2DataPlayerEconomy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"loadout_value",
		"spent",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchesV2DataPlayerEconomy := _MatchesV2DataPlayerEconomy{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchesV2DataPlayerEconomy)

	if err != nil {
		return err
	}

	*o = MatchesV2DataPlayerEconomy(varMatchesV2DataPlayerEconomy)

	return err
}

type NullableMatchesV2DataPlayerEconomy struct {
	value *MatchesV2DataPlayerEconomy
	isSet bool
}

func (v NullableMatchesV2DataPlayerEconomy) Get() *MatchesV2DataPlayerEconomy {
	return v.value
}

func (v *NullableMatchesV2DataPlayerEconomy) Set(val *MatchesV2DataPlayerEconomy) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesV2DataPlayerEconomy) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesV2DataPlayerEconomy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesV2DataPlayerEconomy(val *MatchesV2DataPlayerEconomy) *NullableMatchesV2DataPlayerEconomy {
	return &NullableMatchesV2DataPlayerEconomy{value: val, isSet: true}
}

func (v NullableMatchesV2DataPlayerEconomy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesV2DataPlayerEconomy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


